package statics

var Files = map[string]string{
	"anchorme.js": ``,
	"article.html": `e3tkZWZpbmUgImNvbnRlbnQifX0KICAgICAgICA8c2VjdGlvbiBjbGFzcz0iYXJ0aWNsZSI+CiAgICAgICAgICAgIDxtZXRhIHByb3BlcnR5PSJhcnRpY2xlOnB1Ymxpc2hlZF90aW1lIiBjb250ZW50PSJ7ey5hcnRpY2xlLkNyZWF0ZVJGQzMzMzl9fSIgLz4KICAgICAgICAgICAgPGgxPnt7LmFydGljbGUuVGl0bGV9fTwvaDE+CiAgICAgICAgICAgIDx0aW1lIGRhdGV0aW1lPSJ7ey5hcnRpY2xlLkNyZWF0ZURhdGUgfX0iPnt7LmFydGljbGUuQ3JlYXRlRGF0ZSB9fTwvdGltZT4KICAgICAgICAgICAgYnkgPGEgaHJlZj0iL0B7ey5hcnRpY2xlLlVzZXIuTmlja319Ij5Ae3suYXJ0aWNsZS5Vc2VyLk5pY2t9fTwvYT4KICAgICAgICAgICAgPHA+e3suYXJ0aWNsZS5Db250ZW50fX08L3A+CiAgICAgICAgPC9zZWN0aW9uPgoKICAgICAgICA8c2NyaXB0PgogICAgICAgICAgICBhbmNob3JpemVBcnRpY2xlcygpOwogICAgICAgIDwvc2NyaXB0Pgp7e2VuZH19`,
	"favicon.ico": `AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANnJZCDh0meF4dNmx+LTZ+/h0mb94dJn/+HSZ//h0mb94tNn7+HTZsfh0meF2clkIAAAAAAAAAAAAAAAAOHSZWvi0mf54dJn/sbRo/+t0dv/otHx/6LS9v+i0vb/otHx/63R2//G0aP/4dJn/uLSZ/nh0mVrAAAAAN/QZkXi02f/4tNn/8LRq/+i0vb/otL2/6LS9v+i0vb/otL2/6LS9v+i0vb/otL2/8LRq//i02f/4tNn/9/QZkXi0mfF4tNn/+LTZ/+r0d//otL2/6LS9v+i0vb/otL2/6LS9v+i0vb/otL2/6LS9v+r0d//4tNn/+LTZ//i0mfF4dNn9eLTZ//i02f/o9Hw/6LS9v+i0vb/otL2/6LS9v+i0vb/otL2/6LS9v+i0vb/o9Hw/+LTZ//i02f/4dNn9eHSZ/Li02f/4tNn/6rR4f+i0vb/otL2/6LS9v+i0vb/otL2/6LS9v+i0vb/otL2/6rR4f/i02f/4tNn/+HSZ/Lh0ma14tNn/+LTZ//B0q3/otL2/6LS9v+i0vb/otL2/6LS9v+i0vb/otL2/6LS9v/B0q3/4tNn/+LTZ//h0ma13NBlKuHSZ+3i02f/4NJo/8XRpf+s0N3/pNHv/6LS9v+i0vb/pNHv/6zQ3f/F0aX/4dNm++LTZ//h0mft3NBlKgAAAADY0Ggf4dJml+LSZ9fh02f14tNn/+LTZ//i02f/4tNn/+LTZ//i02f/4dNn9eLSZ9fh0maX2NBoHwAAAAAAAAAAAAAAAN3MZh3h0WaV2dJ4/8HRrv+r0d//otHx/6LR8f+r0d//wdGu/9nSeP/h0WaV3cxmHQAAAAAAAAAAAAAAAN/RZjbi0mbx4tNn/7vRvP+i0vb/otL2/6LS9v+i0vb/otL2/6LS9v+70bz/4tNn/+LSZvHf0WY2AAAAAAAAAADh02bT4tNn/+LTZ/+o0eX/otL2/6LS9v+i0vb/otL2/6LS9v+i0vb/qNHl/+LTZ//i02f/4dNm0wAAAAAAAAAA4tJm+OLTZ//i02f/pdHs/6LS9v//////otL2/6LS9v//////otL2/6XR7P/i02f/4tNn/+LSZvgAAAAAAAAAAOLTZszi02f/4tNn/7jRwv//////AAAA////////////AAAA//////+40cL/4tNn/+LTZ//i02bMAAAAAAAAAADezmc94dJm8+LTZ//e0m3/vNG4//////+i0fT/otH0//////+80bj/3tJt/+LTZ//h0mbz3s5nPQAAAAAAAAAAAAAAANjQaB/i02aI4dJmyeHSZ+3h02b74dJm/+HSZv/h02b74dJn7eHSZsni02aI2NBoHwAAAAAAAAAA4AcAAMADAACAAQAAAAAAAAAAAAAAAAAAAAAAAIABAADAAwAA4AcAAMADAACAAQAAgAEAAIABAADAAwAA4AcAAA==`,
	"humans.txt": `CiAgLm9vb29vb28uICBvb29vCiBkOFnCtCAgIGBZOGIgYDg4OAogODg4ICAgICA4ODggIDg4OCAgIC5vb29vby4gICAub29vb29vb28gIC5vb29vby4KICc4ODhvb284ODgnICA4ODggIGQ4OCcgYDg4YiA4ODgnIGA4OGIgIGQ4OCcgYDg4YgogZDg4wrQgICBgODhiICA4ODggIDg4OCAgIDg4OCA4ODggICA4ODggIDg4OCAgIDg4OAogODg4LiAgIC44ODggIDg4OCAgODg4ICAgODg4IGA4OGJvZDhQJyAgODg4ICAgODg4CiAnODg4Ym9kODg4JyBvODg4byBgWThib2Q4UCcgYDhvb29vb28uICBgWThib2Q4UCcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkIiAgICAgWUQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiWTg4ODg4UCcKCkJsb2dvIGlzIGEgZnJlZSBzb2Z0d2FyZSBkZWNlbnRyYWxpemVkLCBmZWRlcmF0ZWQgYmxvZyBzeXN0ZW0KbWFpbnRhaW5lZCBieSBhIGd1eSBhbmQgbWF5YmUgYSBzZWNvbmQgZ3V5LiBJdCBpcyAzYW0gYW5kIHRoaXMKaXMgdGhlIG1vc3QgZmFuY3kgaHVtYW4gbWVzc2FnZSBJIGNhbiB3cml0ZS4K`,
	"img/icon-user.png": `iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAEgUlEQVRo3tWab2hVZRzHP/dZsAUlatRgr8QgUqQXifEUsS7NJUaGRDgSxVwMtON6FXkQg72QeAhfhPrUi3S1yMVGBGUENgszsYNg5J/mEJLeNFghG1NwC8d6cX43b9d7z3nOn7tr33c79zm/3/d7zu88z+/PCmSEF/gtwCJgObAOWAusABYDTbJsDpgCLgMngOPAVWDaajOTxX8hA/GVQBHoAtpTmjkFDAEnrTajCyLAC/xVwD4hvYR8MCli9lptLtVNgBf4w0CnhEc9MAWMWG025SrAC/xHgZNAq8PyAeAYcA4Yl2ttwGpgA7DNwcYEULTajGUW4AX+ZqAfaHYg3me1+T3G3jKgz0HILNBttRlMLcAL/NeBQw5C37DaHEwYjr3AgZhl88Auq837iQUIeevAJTH5hCIAvFoiChFh86nDkx+w2rya8Rz52CGc5oEt1cJJ1fhg+x0/8L4cdp4+x82mX7hFC5Ddptllt4n7YF0gNgYcljYLt9oCZJ9vdfR9LMf939VWq3C8U4CcsJ0JnJ7LUUASW53C9Y43sC/hCTueo4AkthYL19sCJDFr5/+DduH87xsopkjM2nIklNTWEuGMkny+K4XT1TkKSGOrywv8FiXFSJrw2ZCjgDS22oFFSiqpNNgmiVnWim6ZY4ZaDcuVlIH1PEXraWOdkhqWDG+hN8PT783w9AHWKinAs+BAGhEJMtEorCh4gX+rrHuQBQPAHqvNeAzxNuCdjE++hDmVE/lvgaNx5CV5GweOyj1Z0VTwAn8+g4FZKTaOpPwGXpOiqTktASVNpzQ4D6xJS17exhFgjdhKHUJTKW48A3RYbS7mUA9cBDrEZuI2jCJs9yXBJWCj1eZaXsew2NootpPgsiLsVbrib2Cr1eavvNNLsblVfLjihCJstLpih9Xml3rlyGJ7R4JbjivCLrELhq02H9U70Rcfw47LrypgmrCxGoe3F7BgcfF1CphW0p8film832pzZaHYi6/9McuGrDYzqqyVMhmx+L0GlI1RPidLLRYlikcjwuiw1eaPhWYvPg/XCp/SQKS8K7G3xqH2SQOL92q+p4Trf9sqMhkZqVg8ZrX5sVHsxXfljGCkfIqjKm7YRDhcKOHLu6CFUs5honJ6U603WpQsE2DpXSBgaVnmW6yWjVa+tjGgm7Cl3eMF/q5GMRffPcKlu9rISdWIvUFgu/x50Av83Q0gvxsoDU621xo1xY2Ynga+Ae4HPgR2Wm3m6ky8CfhAnvx14HmrzemogiZqFzgtcferGDzvBf76OpJfL8VNj/gsRpGPfQNlhh8knNp0APcCn0l68XNOxB8H3gReAW4C30nMx6bthRQf1cvAM3LpK8JZ2hdJQ0tC5SVgC/CiXP4B+Nxqc8jVTpp/NWgFNgMvAM/K5RnpMpwBLgC/yXlyQ36/j3Dy8zDwGPAU8BzQIr9/D3wNDFptJpLwyfLPHg8BjxBOdd4qI+OKGeBdOf2vWG3+TMOjkEP83iNtkQeAVcCTwBPASm7P2yaAUeAs8JPUvteAWavNrSz+/wHrzHhYCrb+RQAAAABJRU5ErkJggg==`,
	"img/icon-write.png": `iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAElklEQVRo3t2aTWwWVRSGnxmmAbTiArVGd40Ww4+pGsltAgHRRlO6qFolYaEJ29H4k0iGpuWviDdFV3pj3LBwgT9pUGxFk1oEbcIEDUTS1tCIMSYsqtYFqNBaqYvvFL+OM+PM981MU99kVnPnznvunHvuOe8Ziyrh+p4DLAaWA6uBJmAtsBKok2HjwChwCjgJDAMTwKRRerqa91tVEL8FaACage3AkpRTXAF6gAFgzCj9UyEGuL5XB2wFWoFNZINjQD9wyCg9npsBru89A7QDG8gHJ4Beo/QbmRrg+t7NwEHgQWAp+eIyMAhsM0r/XLUBru/dC7wNrKJYjABPGaVPV2yA63vrgKPADcwPLgEtRumh1AYI+S8LIvoXYMfwWR9lhBXjNscLWPkZcZUvgNskqi2L+BIbw9zJitiwnxfk8z6wD/gMqAVeBJ6NWLgR4IHgxrZDBh4siPxJoAv41Cg9aZSeAF4DXgUuhoxfJdyiv4DE+Z4CQuXXwEtG6eMhHlALPCen+7KQELu9/JywAydsewHkZ9OIixH3fgfeBN4CfgvcWwq0C9d/udDWHE9YgD+AC8AUsA7odn3vHtf35niBUXrGKP0rcAD4KmSeDcL1HwMkMWvN+XR9F3ge+ASYBlqAl4GmoBGCKWAyYr5W4XztCzRkmJgFcRU4DOw3SvcCO4Ajcu9hYBegAvugBngCaIyYc5NwxpZ8vjlH8u8Bu43S58VFvgV2A32ygA8BXa7v3SfkLeHzAnBrzNzNru85lut71wO/VJDPJ8E7QKdR+vuQaHMH8IoEDoCPgQ7ZqK8D9ycIBDc5UkllTX5KVr7TKP1jxJjzwB7AATbLdSOwKAF5hPNyR8rALDENfADsiyGPUXoGGHZ9r0POo80SndJgtS01bFb4UzbsXqP0WMJnfgDOSKRKiyZbCvCsMsqPgD1G6dGEhdJiYItctRW8c60j6kEWeF/In0tI3gaelLDaUOE7Vzpl0kc1OAx0zYbKBOQt4GmgG7i9ivfWORm5zY4U5BcBjwGdVZK/lkqMVxFt+oCdSTesnLBbJIWoz+DLj9uimFWy8h+K2wwnJL9EyO8E7sxo343aIvelTQ+OAt0pyNfIidsFrMgwbJ+ypTJKg35xm7Mpok1bldEmsqpzKAmtSdEnFdG5FM+0AXuBu3LItYYdSirxlQT50BGgI0Wct4BHgf0Zu015MjdhS9HQk8Dnd6U4YW3J5w/kRB7hPGmLPj8QM/CskP8mxYZtkzhfT34YMEpPz1ZkY5Qk7jB8J8lWUrdplWizJkfyx4RzqaSU5kJ/TMy/mnDixyXHb8xZ1eifbYiUqxKHKOnzFcH1vRZR2dbkTP6EcJ0rq0hnpDdtXu76nuX63iNSHq7ImfxlSg2Q8TBdCFG8BiOqpyifbxHydxcgiA0Guzdh2eg25oq7jut710nyZgWebZbcprEA8iPCbQ6SyOsXKGmZwY1cI8VQfQHkk8vrZUYU2eD4L0Q2OOwY1WAIWC/WzxcuxZGPNaDMiI3if0VjRNxmKG7Q/7/NGjBkYTa6A0Ys3F8NAoYszJ89QgyZ199t/gZluZrlFVeInQAAAABJRU5ErkJggg==`,
	"img/logo.png": `iVBORw0KGgoAAAANSUhEUgAAAJAAAAA4CAYAAAASCXE7AAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4gQODzY1VvTTsQAACZ1JREFUeNrtnX2QVWUdxz+7yy77AiKCxC4OprX4ssqLAmOp2GhhajKW/lFTwFhoLzZZyNg05SjmOEKmZsikg6SVljnEGqjQaBqYRTK0rmhgqRMIRLQuK7HtsrC3P57fHc4+93fOec69Zy93d5/vzBn2nvu8P7/n9/5cwMPDw8PDw8PDw8MjEcoGwRzGAuOAWuAI8Fe/rZ6AosabAeqBJmAKcBFwMVA3iA6FRz/ibuBFYJ8QU/Dp8MszsDlQEzALmAo0ACNFtGj9dAEHgL1AK7AJeNmhj4zyOdv++8Aov60DDxcAW4QoDoku0qtwCPvplbKHgP8B/wA+F9PXCCHMauCrngMNfA52awhx9ACdwmXeB9qF27TLu4NCOFrdlUIkcbjWE9DAxndCCOBN4HYRZRUhdU8DbhKrSWtjmSegwY2TRWTZG78WmJCgnRHAwyFEdI4noMGLW0V/CW7gO8CH8mirWnQoTZR5AiphlBdQ91zFuloFvJtHW13AcuX9R/wWDV4CGq8Q0HagO8/2tijvTvJbVNoYVkDdA8q7QwW016W8K5ZIKgMqZT3KAwejV54e4HAKaz1MjIoyjnrVs66Mw/JvIaiQeYT10SN/lwQB/Q34mMXFxsnnfAapcZvWIhDPWGAmcJXMpzHwXbeMYT2wWjjswYTt1wBnAlcClwDTRefLYof0sQHjSO1SOHub6JdhqAROAS4DrgBmAMcHvt8D/Aloxnjxd5YC95qu+HGaHf03Gn6kKNGX97MSfTXwu0D9/wBPAz8DHgNesdpfLq6JJJbq8sA6HQLWAT8Ffgm8TbyzNQP8JqKPicBtQmTZ8q3AE8Ajsie7A9+9BnwZGF4KRHSvNdHDDpuuoQn4r9XWE8SHWgohoDsxjs5s3fXAJ8StECSAmyx3xZvAJx3arwf+HKi3Swg2GGqZDLxQAAE1ARutst8VLloWsHAvBJ60yj0q3PGYohb4iTWwfwNzE7QxG3hL8SXVO9TNl4AeEH0gW++lGPfDdVY/e0VMROFZq841EcbI/kC5LkyIZqpw+ekinmycCGyz+rgh4tBNAH5rlX+2FLhQNbAAE67IDqwb2AoslIUO6kkj5ORcLxsX5AI9wB2W/E6bgK61xtoWsblBrLH62hIhrj9ulX0x5kDcZZW/x9KTNDxt1VnvYFVfKPpQUGLcWSoW3QeAW0QpzCR83hMdqDFhn0kJaLwok8E6GwkPtwRxhjLuG0LK/twqtxSoimh7GrkO2SgXxqeUsZzvaDQ9atV7V+Z2TDAKE4m/VxS3DnK90y5Pr+hA2zFhjcvEOkqbgOYLd8wElNrFCebbavW3O8SSfcMqd2NMu5XKmkyKKP8aubHH0Y5zWCCWZCpcqBAzvhH4HjBP+W6rmIptsmG9it9luIiqCaJM1smiTQK+CDwj1sUrKRF7HSZXqcryPW1I4Ct6BjjbUpRnAb+3ytoiOM6/0xPSn4YpwFnWu40JHLgtmGS8kwO+o48CY2S/ikJAE4EVsnj2ybgfkxy2w4Ej1AkBTRXT8mKOJohdLsR0DfBqCgQ0jtzgbI9wCxdk0POtP60Q0F5L5xkb4x+baH3uDCEqgDn0TaJDlGlXJ+7bogPa7oZJIt6LgmUKy92c0Eei+UyeVNr9Q0oibIp8b1uMSXCeMr5NSrklVpnVwAkJrLx1EeVXK2P4QsJ5bLLqdwKfyWfT8omFNWES2YM4IA6zlgII6J9ifexR+pudAtEPB46z3iX1mGsE2hBhVQWV3g9GtLvQ+vwLMSzC/Eso658EdlimxvJ/9SsBnQ582Hq3C3guhU3eppzoUYqozAeV/cSNNU7RbnGFYcBDIsoqLB1niaUwP4zJagjD8f00j+p8KuWjA41UOusQnadQtCvtDBP9pVD0pHCAtIT9fSFlHxfL6HYhsnPFd3SXWHOjxCK6Ssq3YTzO30APLAfXSNuTQve9s1gEpNU5kuJJ0JTBqhTa7RblMSjGKkSJ35VAT7MRlf/0gCjeC4SAJsu74Ji2iuhfhYlbxWGP8m6C7ItLxsAJ5IYwDoobpSgEdFB0h/KU3AEo8tjWU95Lod0OTMhkmkWYZzkSUJlVN4s/xtR7WZ6HhIBWYDzwh2VeO4DXE8xjs3CtoBV2puh4LgR0qqIL7iG/RMC8cJEseFCL34Yer0mKMeTGaw7ICS7UCqvDpMjaN0eSONFaFQtohkO9q8W0z8gcC8E0ZQzvxFh5QdiOxAwmI2FksQhojPg9bDPw+hTaPk9OZbDtXRHEmdQTPY++QdSMcAeX1IbTlI3b5lCvgb4R9zTwhjKWSxwlziNWvW7M7Zqi4luYi4B2cLGpQEdfM7khjhUp+YGyJrCd/rAf+LzD+FYpm+biO7nSWqubhSOdI4exVoySigRrNUcZy0sObZwvoipYbzsmRlhUlCuiJoPJUpyD8azWEZ/PUyMn9AJMSCFLNMHEqKiclfkkj8bPpW80PgP8heiA4nxlrk85ci6trs1h1wGLRBw24HblvFlp69sRdevFyguW70pJcuQtyn4VsigtwIPCGq8TubtARMg8+XsR8GMRIVobzyuiq8xyDC5W9CUX0/wOcq9ePw9cSm5C2UKF225OoPNdin5/LuzZJH02xLR7ohC+Xf82+mY11GDSOH6tlF3KMUYt8CVhn5mUntcxWYBh0fj7MZ7ap4B/kZsRuRa4D5MhEMaaK4Cv0zcyn5H21oie8Jhspk1oz+Ge/nC2jOMIJgZ1sxyexaLQv4D+KyMZTFxqZkz7jeTmBWVjdo/LPFZjAts257mRwm7lpIrxmEDoEtEx9slmuhBMOybivkzE30kxLDwJMU6LMctnoMeWtKcD+FoCa+eHHM1F3mCNpUKsnvFCBFeEqAQ7ib/lOxr4imJ8hD1rMfftSvJ3lCpFIazj6K9oRD0jpGyN1HWZlEu7I8XX4XLCqmRz7xZDoNPST5pFjzkugaK7MsC5dsvhivMxVWN+mcTmeCsd+iuXdZkres5Oy0JuEU44k/4L6XikhFmWzrQG9+T1WnE42sliJYtyv9+p47PWKW8XgnJBJ/B3612vJ6ChhUZL1NUlWOcKcj3VG/ySDi2sU3xjrg7WenJ/peR0v6RDCz8gN1yyxJELfd+qt8gv59DDZMuSyz63xNS7R7G+qvxyDk0sRf+R0VZxCZyC8SQ3Ad+k79317M/7VftlHNq4D3fnXgaT0NVCsmvhHoMcszFhl1fpe/89gwlvtGHCDqsw15rGDrQJ+v8WoDhrfAYmMDtaRFOv6En7MRmJbxF+D8zDw8PDw8PDw8PDw8PDQ/B/ctwbYvTY9QoAAAAASUVORK5CYII=`,
	"index.html": `e3tkZWZpbmUgImNvbnRlbnQifX0KCiAgICB7e3JhbmdlIC5hcnRpY2xlc319CiAgICA8c2VjdGlvbiBjbGFzcz0iYXJ0aWNsZSIgaWQ9Int7LklkfX0iPgogICAgICAgIDxoMT48YSBocmVmPSIvQHt7LlVzZXIuTmlja319L3t7LlRpdGxlVXJsfX0iPnt7LlRpdGxlfX08L2E+PC9oMT4KICAgICAgICA8dGltZSBkYXRldGltZT0ie3suQ3JlYXRlRGF0ZX19Ij57ey5DcmVhdGVEYXRlfX08L3RpbWU+CiAgICAgICAgYnkgPGEgaHJlZj0iL0B7ey5Vc2VyLk5pY2t9fSI+QHt7LlVzZXIuTmlja319PC9hPgogICAgICAgIDxwPnt7LkNvbnRlbnR9fTwvcD4KICAgIDwvc2VjdGlvbj4KICAgIHt7ZW5kfX0KCiAgICA8c2NyaXB0PgogICAgICAgIGFuY2hvcml6ZUFydGljbGVzKCk7CiAgICA8L3NjcmlwdD4KCiAgICB7e2lmIC51c2VyfX0KICAgIDxkaXYgY2xhc3M9ImNyZWF0ZS1mb3JtIj4KICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9ImNyZWF0ZS1mb3JtLXRpdGxlIiBwbGFjZWhvbGRlcj0iVMOtdHVsbyI+CiAgICAgICAgPHRleHRhcmVhIHR5cGU9InRleHQiIGlkPSJjcmVhdGUtZm9ybS1jb250ZW50IiBwbGFjZWhvbGRlcj0iQ29udGVuaWRvLi4uIj48L3RleHRhcmVhPgoKICAgICAgICA8ZGl2IHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7Ij4KICAgICAgICAgICAgPGJ1dHRvbiBpZD0iY3JlYXRlLWZvcm0tYnV0dG9uIiBjbGFzcz0iYnV0dG9uLWNyZWF0ZSIgb25jbGljaz0iY3JlYXRlQXJ0aWNsZSgpIj5DcmVhcjwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICB7e2Vsc2V9fQogICAgPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+PGEgaWQ9ImxvZ2luLXRvLXdyaXRlIj5FbnRyYTwvYT4gcGFyYSBjcmVhciBhcnTDrWN1bG9zPC9kaXY+CiAgICA8c2NyaXB0PgogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2dpbi10by13cml0ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZm9ybUxvZ2luU2hvd1RvZ2dsZSwgdHJ1ZSk7CiAgICA8L3NjcmlwdD4KCiAgICB7e2VuZH19Cgp7e2VuZH19Cg==`,
	"me/index.html": `PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8dGl0bGU+VGl0bGU8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5Pgo8aDE+RXN0byBoYXkgcXVlIGltcGxlbWVudGFybG8gOkQgOkQ8L2gxPgo8L2JvZHk+CjwvaHRtbD4=`,
	"script.js": `ZnVuY3Rpb24gcmVtb3ZlQXJ0aWNsZShpZCkgewogICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogICAgeGhyLm9wZW4oJ0RFTEVURScsICcvdjAvYXJ0aWNsZXMvJytpZCwgdHJ1ZSk7CiAgICB4aHIub25sb2FkID0gZnVuY3Rpb24oKSB7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICB9OwogICAgeGhyLnNlbmQobnVsbCk7Cn0KCmZ1bmN0aW9uIGNyZWF0ZUFydGljbGUoKSB7CgogICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogICAgeGhyLm9wZW4oJ1BPU1QnLCAnL3YwL2FydGljbGVzJywgdHJ1ZSk7CiAgICB4aHIub25sb2FkID0gZnVuY3Rpb24oKSB7CiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnLyc7CiAgICB9OwoKICAgIHZhciB0aXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjcmVhdGUtZm9ybS10aXRsZSIpOwogICAgdmFyIGNvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY3JlYXRlLWZvcm0tY29udGVudCIpOwoKICAgIHZhciBwYXlsb2FkID0gewogICAgICAgICJ0aXRsZSI6IHRpdGxlLnZhbHVlLAogICAgICAgICJjb250ZW50IjogY29udGVudC52YWx1ZSwKICAgIH07CgogICAgeGhyLnNlbmQoSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkpOwp9CgpmdW5jdGlvbiBmb3JtTG9naW5TaG93VG9nZ2xlKGUpIHsKICAgIHZhciBsb2dpbl9wYW5lbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2dpbi1wYW5lbCcpOwoKICAgIGlmIChsb2dpbl9wYW5lbC5zdHlsZS5kaXNwbGF5ID09PSAnJykgewogICAgICAgIGxvZ2luX3BhbmVsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOwogICAgfSBlbHNlIHsKICAgICAgICBsb2dpbl9wYW5lbC5zdHlsZS5kaXNwbGF5ID0gJyc7CiAgICB9Cn0KCmZ1bmN0aW9uIGxvZ2luKGUpIHsKICAgIGUucHJldmVudERlZmF1bHQoKTsKCiAgICB2YXIgZW1haWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibG9naW4tZW1haWwiKTsKICAgIHZhciBwYXNzd29yZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJsb2dpbi1wYXNzd29yZCIpOwoKICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgIHhoci5vcGVuKCdQT1NUJywgJy9sb2dpbi9lbWFpbCcsIHRydWUpOwogICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uKCkgewogICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgIH07CgogICAgdmFyIHBheWxvYWQgPSB7CiAgICAgICAgZW1haWw6IGVtYWlsLnZhbHVlLAogICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZC52YWx1ZSwKICAgIH07CgogICAgeGhyLnNlbmQoSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkpOwp9CgpmdW5jdGlvbiBsb2dvdXQoZSkgewogICAgZS5wcmV2ZW50RGVmYXVsdCgpOwoKICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgIHhoci5vcGVuKCdERUxFVEUnLCAnL3YwL3Nlc3Npb25zL2N1cnJlbnQnLCB0cnVlKTsKICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbigpIHsKICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgICB9OwoKICAgIHhoci5zZW5kKCk7Cn0KCmZ1bmN0aW9uIGFuY2hvcml6ZUFydGljbGVzKCkgewogICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc2VjdGlvbi5hcnRpY2xlIHAnKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgaXRlbS5pbm5lckhUTUwgPSBhbmNob3JtZShpdGVtLmlubmVySFRNTCk7CiAgICB9KTsKfQ==`,
	"style.css": `Ym9keSB7CiAgZm9udC1mYW1pbHk6IFVidW50dSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgZm9udC1zaXplOiAxMjAlOwogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwOwp9CgphIHsKICBjb2xvcjogZG9kZ2VyYmx1ZTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9CgphOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb24tbGluZTogdW5kZXJsaW5lOwp9CgoudG9vbGJhciB7CiAgcG9zaXRpb246IGZpeGVkOwogIHRvcDogMDsKICBsZWZ0OiAwOwogIHJpZ2h0OiAwOwogIG1pbi1oZWlnaHQ6IDU0cHg7CiAgYm94LXNoYWRvdzogMCAycHggMTBweCByZ2JhKDAsMCwwLDAuMSk7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwwLjk1KTsKfQoKLnRvb2xiYXIgLmNpcmxlLWJ1dHRvbiB7CiAgZGlzcGxheTogYmxvY2s7CiAgZmxvYXQ6IGxlZnQ7CiAgcGFkZGluZzogNHB4OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKfQoKLnRvb2xiYXIgLmNpcmxlLWJ1dHRvbiBpbWcgewogIGRpc3BsYXk6IGJsb2NrOwogIGhlaWdodDogNDhweDsKICB3aWR0aDogNDhweDsKfQoKLnRvb2xiYXIgLmxvZ28gewogIGJhY2tncm91bmQtY29sb3I6IHJlZDsKICBoZWlnaHQ6IDA7CiAgZGlzcGxheTogYmxvY2s7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CgoudG9vbGJhciArIGRpdiB7CiAgbWFyZ2luLXRvcDogNTRweDsKfQoKLndjZW50ZXIgewogIG1heC13aWR0aDogODAwcHg7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmc6IDAgOHB4Owp9CgoubWFpbiB7CiAgcGFkZGluZzogMzJweCAwOwp9CgouYnV0dG9uLXJlbW92ZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmVkOwogIGNvbG9yOndoaXRlOwogIGJvcmRlcjogc29saWQgIzY2MDAwMCAxcHg7CiAgYm9yZGVyLXJhZGl1czogM3B4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5idXR0b24tY3JlYXRlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlOwogIGNvbG9yOndoaXRlOwogIGJvcmRlcjogc29saWQgIzAwMDA2NiAxcHg7CiAgYm9yZGVyLXJhZGl1czogM3B4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5jcmVhdGUtZm9ybSB7CiAgYm9yZGVyOiBzb2xpZCBncmF5IDFweDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI0Y4RjhGODsKICBwYWRkaW5nOiAxNnB4Owp9CgojY3JlYXRlLWZvcm0tdGl0bGUgewogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiAxMDAlOwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGZvbnQtc2l6ZTogMTUwJTsKfQoKI2NyZWF0ZS1mb3JtLWNvbnRlbnQgewogIGRpc3BsYXk6IGJsb2NrOwogIHdpZHRoOiAxMDAlOwp9CgouYXV0aCB7CiAgZmxvYXQ6IHJpZ2h0OwogIGJvcmRlcjogc29saWQgcmVkIDFweDsKfQoKLmFydGljbGUgewogIHBhZGRpbmc6IDE2cHggMzJweCAxNnB4OwogIG1hcmdpbi1ib3R0b206IDE2cHg7CiAgd29yZC13cmFwOiBicmVhay13b3JkOwp9CgouYXJ0aWNsZTpob3ZlciB7CiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLDAsMCwwLjEpOwp9CgouYXJ0aWNsZSBoMSB7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7CiAgY29sb3I6IGJsYWNrOwogIGZvbnQtd2VpZ2h0OiA4MDA7Cn0KCi5hcnRpY2xlIGgxIGEgewogIGRpc3BsYXk6IGJsb2NrOwogIGNvbG9yOiBpbmhlcml0OwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQoKLmFydGljbGUgaDE6aG92ZXIgYSB7CiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgYmx1ZTsKfQoKLmFydGljbGUgdGltZSB7CiAgY29sb3I6IGdyYXk7CiAgZm9udC1zaXplOiA5MCU7CiAgZm9udC13ZWlnaHQ6IDEwMDsKfQoKLmZvb3RlciB7CiAgbWFyZ2luLXRvcDogMzJweDsKICBtaW4taGVpZ2h0OiA2NHB4OwogIGJvcmRlci10b3A6IHNvbGlkIHNpbHZlciAxcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIHBhZGRpbmc6IDE2cHg7CiAgY29sb3I6IGdyYXk7CiAgZm9udC1zaXplOiA4MCU7Cn0KCi5mb290ZXIgYSB7CiAgY29sb3I6IGluaGVyaXQ7Cn0KCgovKiBMT0dJTiBQQU5FTCAqLwpbY29tcG9uZW50PSJsb2dpbi1wYW5lbCJdIHsKICBkaXNwbGF5OiBub25lOwogIHBvc2l0aW9uOiBmaXhlZDsKICB6LWluZGV4OiA5OTk5OwogIGxlZnQ6IDA7CiAgdG9wOiAwOwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuOCk7Cn0KCltjb21wb25lbnQ9ImxvZ2luLXBhbmVsIl0gZm9ybSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDUwJTsKICB0b3A6IDUwJTsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKCiAgcGFkZGluZzogMzJweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBib3JkZXItcmFkaXVzOiAycHg7CiAgYm94LXNoYWRvdzogMCAwIDEwcHggd2hpdGU7CiAgbWluLXdpZHRoOiAyODBweDsKfQoKW2NvbXBvbmVudD0ibG9naW4tcGFuZWwiXSBmb3JtIGxhYmVsIHsKICBkaXNwbGF5OiBibG9jazsKICBvdmVyZmxvdzogaGlkZGVuOwogIG1hcmdpbi1ib3R0b206IDhweDsKfQoKW2NvbXBvbmVudD0ibG9naW4tcGFuZWwiXSBmb3JtIGxhYmVsIGlucHV0IHsKICBkaXNwbGF5OiBibG9jazsKICB3aWR0aDogOTklOyAgLyogw7FhcCAqLwogIGJvcmRlcjogc29saWQgc2lsdmVyIDFweDsKICBmb250LXNpemU6IDExMCU7Cn0KCi8qIENvbXBvbmVudDogdHJ1bmsgYnV0dG9uICovCltjb21wb25lbnQ9IlRydW5rQnV0dG9uIl0gewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgcGFkZGluZzogOHB4IDEycHg7CiAgbWFyZ2luOiAwcHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICBib3JkZXI6IHNvbGlkIDFweDsKICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsKICBmb250LXNpemU6IDE0cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyOwoKICAvKiBjdXN0b20gc3R5bGVzICovCiAgY29sb3I6ICMzMzM7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgYm9yZGVyLWNvbG9yOiAjYWRhZGFkOwp9CgpbY29tcG9uZW50PSJUcnVua0J1dHRvbiJdOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWJlYmViOwogIGJvcmRlci1jb2xvcjogI2FkYWRhZDsKfQoKQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogODAwcHgpIHsKICAudG9vbGJhciAubG9nbyB7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogIH0KCiAgLm1haW4gLndjZW50ZXIgewogICAgcGFkZGluZy1sZWZ0OiAwOwogICAgcGFkZGluZy1yaWdodDogMDsKICB9CgogIC5hcnRpY2xlIHsKICAgIHBhZGRpbmctbGVmdDogMTZweDsKICAgIHBhZGRpbmctcmlnaHQ6IDE2cHg7CiAgICBib3JkZXItYm90dG9tOiBzb2xpZCAjRjBGMEYwIDFweDsKICB9CgogIC5hcnRpY2xlOmhvdmVyIHsKICAgIGJveC1zaGFkb3c6IG5vbmU7CiAgfQp9Cgo=`,
	"template.html": `PCFET0NUWVBFIGh0bWw+CjxodG1sPgoJPGhlYWQ+CgkJPG1ldGEgY2hhcnNldD0idXRmLTgiPgogICAgICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CgogICAgICAgIDx0aXRsZT5CbG9HbzwvdGl0bGU+CgoJCTxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UveC1pY29uIiBjbGFzcz0ianMtc2l0ZS1mYXZpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9zdHlsZS5jc3MiPgoKICAgICAgICA8c2NyaXB0IHNyYz0iL2FuY2hvcm1lLmpzIj48L3NjcmlwdD4KICAgICAgICA8c2NyaXB0IHNyYz0iL3NjcmlwdC5qcyI+PC9zY3JpcHQ+CgoJCXt7aWYgLmdvb2dsZV9hbmFseXRpY3MgfX0KCQk8c2NyaXB0IGFzeW5jIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RhZy9qcz9pZD17ey5nb29nbGVfYW5hbHl0aWNzfX0iPjwvc2NyaXB0PgoJCTxzY3JpcHQ+CgkJICB3aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKCQkgIGZ1bmN0aW9uIGd0YWcoKXtkYXRhTGF5ZXIucHVzaChhcmd1bWVudHMpO30KCQkgIGd0YWcoJ2pzJywgbmV3IERhdGUoKSk7CgkJICBndGFnKCdjb25maWcnLCAne3suZ29vZ2xlX2FuYWx5dGljc319Jyk7CgkJPC9zY3JpcHQ+CgkJe3tlbmR9fQoJPC9oZWFkPgoJPGJvZHk+CgoKICAgICAgICA8ZGl2IGNsYXNzPSJ0b29sYmFyIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id2NlbnRlciI+CgogICAgICAgICAgICAgICAgPGEgY2xhc3M9ImxvZ28iIGhyZWY9Ii8iPjxpbWcgc3JjPSIvaW1nL2xvZ28ucG5nIiBhbHQ9IkhvbWUiPjwvYT4KCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmbG9hdDogcmlnaHQ7Ij4KICAgICAgICAgICAgICAgICAgICB7e2lmIC51c2VyfX0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImNpcmxlLWJ1dHRvbiIgaHJlZj0iL3dyaXRlLyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy9pY29uLXdyaXRlLnBuZyIgYWx0PSJOZXcgYXJ0aWNsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImNpcmxlLWJ1dHRvbiIgaHJlZj0iL21lLyI+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7aWYgLnVzZXIuTG9naW5Hb29nbGUgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJ7ey51c2VyLkxvZ2luR29vZ2xlLlBpY3R1cmV9fSIgYWx0PSJOZXcgYXJ0aWNsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ZWxzZX19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy9pY29uLXVzZXIucG5nIiBhbHQ9Ik5ldyBhcnRpY2xlIj4KICAgICAgICAgICAgICAgICAgICAgICAge3tlbmR9fQogICAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNpcmxlLWJ1dHRvbiIgc3R5bGU9Im1hcmdpbi10b3A6IDhweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD0idG9vbGJhci1sb2dvdXQtYnV0dG9uIiBjb21wb25lbnQ9IlRydW5rQnV0dG9uIj5TYWxpcjwvYnV0dG9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9vbGJhci1sb2dvdXQtYnV0dG9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBsb2dvdXQsIHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIHt7ZWxzZX19CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDhweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaWQ9InRvb2xiYXItbG9naW4tYnV0dG9uIiBjb21wb25lbnQ9IlRydW5rQnV0dG9uIj5FbnRyYXI8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b29sYmFyLWxvZ2luLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZm9ybUxvZ2luU2hvd1RvZ2dsZSwgdHJ1ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAge3tlbmR9fQogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWFpbiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndjZW50ZXIiPgogICAgICAgICAgICB7e2Jsb2NrICJjb250ZW50IiAufX0KICAgICAgICAgICAgICAgIFRISVMgSVMgVEhFIENPTlRFTlQKICAgICAgICAgICAge3tlbmR9fQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0id2NlbnRlciI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI+CiAgICAgICAgICAgICAgICBCbG9nbyBlcyBzb2Z0d2FyZSBsaWJyZSBoZWNobyBjb24g4p2k77iPIGVuIEVzcGHDsWEsIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9mdWxsZHVtcC9ibG9nbyI+Y29sYWJvcmEgZW4gR2l0SHViPC9hPi4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIHt7aWYgLnVzZXJ9fQogICAgICAgIHt7ZWxzZX19CiAgICAgICAgPGRpdiBpZD0ibG9naW4tcGFuZWwiIGNvbXBvbmVudD0ibG9naW4tcGFuZWwiPgogICAgICAgICAgICA8Zm9ybSBpZD0iZm9ybS1sb2dpbiI+CiAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJsb2dpbi1lbWFpbCI+CiAgICAgICAgICAgICAgICAgICAgVXN1YXJpbzogPGlucHV0IHR5cGU9InRleHQiIGlkPSJsb2dpbi1lbWFpbCIgcGxhY2Vob2xkZXI9InR1QGVtYWlsLmNvbSI+CiAgICAgICAgICAgICAgICA8L2xhYmVsPgoKICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImxvZ2luLXBhc3N3b3JkIj4KICAgICAgICAgICAgICAgICAgICBDb250cmFzZcOxYTogPGlucHV0IHR5cGU9InBhc3N3b3JkIiBpZD0ibG9naW4tcGFzc3dvcmQiIHBsYWNlaG9sZGVyPSJjb250cmFzZcOxYSI+CiAgICAgICAgICAgICAgICA8L2xhYmVsPgoKICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNvbXBvbmVudD0iVHJ1bmtCdXR0b24iPkVudHJhcjwvYnV0dG9uPgogICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPGJyPjxicj48YnI+CgogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyI+CiAgICAgICAgICAgICAgICAgICAgVGFtYmnDqW4gcHVlZGVzIDxhIGhyZWY9Int7IC5nb29nbGVfb2F1dGhfbGluayB9fSI+ZW50cmFyIGNvbiBHb29nbGU8L2E+LgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmb3JtLWxvZ2luJykuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgbG9naW4sIHRydWUpOwogICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICA8L2Rpdj4KICAgICAgICB7e2VuZH19CgoJPC9ib2R5Pgo8L2h0bWw+Cg==`,
	"write/hljs/index.css": `LyoKCmdpdGh1Yi5jb20gc3R5bGUgKGMpIFZhc2lseSBQb2xvdm55b3YgPHZhc3RAd2hpdGVhbnRzLm5ldD4KCiovCgouaGxqcyB7CiAgZGlzcGxheTogYmxvY2s7CiAgb3ZlcmZsb3cteDogYXV0bzsKICBwYWRkaW5nOiAwLjVlbTsKICBjb2xvcjogIzMzMzsKICBiYWNrZ3JvdW5kOiAjZjhmOGY4OwogIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTsKfQoKLmhsanMtY29tbWVudCwKLmRpZmYgLmhsanMtaGVhZGVyLAouaGxqcy1qYXZhZG9jIHsKICBjb2xvcjogIzk5ODsKICBmb250LXN0eWxlOiBpdGFsaWM7Cn0KCi5obGpzLWtleXdvcmQsCi5jc3MgLnJ1bGUgLmhsanMta2V5d29yZCwKLmhsanMtd2ludXRpbHMsCi5uZ2lueCAuaGxqcy10aXRsZSwKLmhsanMtc3Vic3QsCi5obGpzLXJlcXVlc3QsCi5obGpzLXN0YXR1cyB7CiAgY29sb3I6ICMzMzM7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi5obGpzLW51bWJlciwKLmhsanMtaGV4Y29sb3IsCi5ydWJ5IC5obGpzLWNvbnN0YW50IHsKICBjb2xvcjogIzAwODA4MDsKfQoKLmhsanMtc3RyaW5nLAouaGxqcy10YWcgLmhsanMtdmFsdWUsCi5obGpzLXBocGRvYywKLmhsanMtZGFydGRvYywKLnRleCAuaGxqcy1mb3JtdWxhIHsKICBjb2xvcjogI2QxNDsKfQoKLmhsanMtdGl0bGUsCi5obGpzLWlkLAouc2NzcyAuaGxqcy1wcmVwcm9jZXNzb3IgewogIGNvbG9yOiAjOTAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgouaGxqcy1saXN0IC5obGpzLWtleXdvcmQsCi5obGpzLXN1YnN0IHsKICBmb250LXdlaWdodDogbm9ybWFsOwp9CgouaGxqcy1jbGFzcyAuaGxqcy10aXRsZSwKLmhsanMtdHlwZSwKLnZoZGwgLmhsanMtbGl0ZXJhbCwKLnRleCAuaGxqcy1jb21tYW5kIHsKICBjb2xvcjogIzQ1ODsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLmhsanMtdGFnLAouaGxqcy10YWcgLmhsanMtdGl0bGUsCi5obGpzLXJ1bGVzIC5obGpzLXByb3BlcnR5LAouZGphbmdvIC5obGpzLXRhZyAuaGxqcy1rZXl3b3JkIHsKICBjb2xvcjogIzAwMDA4MDsKICBmb250LXdlaWdodDogbm9ybWFsOwp9CgouaGxqcy1hdHRyaWJ1dGUsCi5obGpzLXZhcmlhYmxlLAoubGlzcCAuaGxqcy1ib2R5IHsKICBjb2xvcjogIzAwODA4MDsKfQoKLmhsanMtcmVnZXhwIHsKICBjb2xvcjogIzAwOTkyNjsKfQoKLmhsanMtc3ltYm9sLAoucnVieSAuaGxqcy1zeW1ib2wgLmhsanMtc3RyaW5nLAoubGlzcCAuaGxqcy1rZXl3b3JkLAouY2xvanVyZSAuaGxqcy1rZXl3b3JkLAouc2NoZW1lIC5obGpzLWtleXdvcmQsCi50ZXggLmhsanMtc3BlY2lhbCwKLmhsanMtcHJvbXB0IHsKICBjb2xvcjogIzk5MDA3MzsKfQoKLmhsanMtYnVpbHRfaW4gewogIGNvbG9yOiAjMDA4NmIzOwp9CgouaGxqcy1wcmVwcm9jZXNzb3IsCi5obGpzLXByYWdtYSwKLmhsanMtcGksCi5obGpzLWRvY3R5cGUsCi5obGpzLXNoZWJhbmcsCi5obGpzLWNkYXRhIHsKICBjb2xvcjogIzk5OTsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLmhsanMtZGVsZXRpb24gewogIGJhY2tncm91bmQ6ICNmZGQ7Cn0KCi5obGpzLWFkZGl0aW9uIHsKICBiYWNrZ3JvdW5kOiAjZGZkOwp9CgouZGlmZiAuaGxqcy1jaGFuZ2UgewogIGJhY2tncm91bmQ6ICMwMDg2YjM7Cn0KCi5obGpzLWNodW5rIHsKICBjb2xvcjogI2FhYTsKfQo=`,
	"write/hljs/index.js": `IWZ1bmN0aW9uKGUpeyJ1bmRlZmluZWQiIT10eXBlb2YgZXhwb3J0cz9lKGV4cG9ydHMpOih3aW5kb3cuaGxqcz1lKHt9KSwiZnVuY3Rpb24iPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kJiZkZWZpbmUoW10sZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93LmhsanN9KSl9KGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7cmV0dXJuIGUucmVwbGFjZSgvJi9nbSwiJmFtcDsiKS5yZXBsYWNlKC88L2dtLCImbHQ7IikucmVwbGFjZSgvPi9nbSwiJmd0OyIpfWZ1bmN0aW9uIHIoZSl7cmV0dXJuIGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKX1mdW5jdGlvbiBhKGUsdCl7dmFyIHI9ZSYmZS5leGVjKHQpO3JldHVybiByJiYwPT1yLmluZGV4fWZ1bmN0aW9uIGkoZSl7dmFyIHQ9KGUuY2xhc3NOYW1lKyIgIisoZS5wYXJlbnROb2RlP2UucGFyZW50Tm9kZS5jbGFzc05hbWU6IiIpKS5zcGxpdCgvXHMrLyk7cmV0dXJuIHQ9dC5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSgvXmxhbmcodWFnZSk/LS8sIiIpfSksdC5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIF8oZSl8fC9ubygtPyloaWdobGlnaHQvLnRlc3QoZSl9KVswXX1mdW5jdGlvbiBuKGUsdCl7dmFyIHI9e307Zm9yKHZhciBhIGluIGUpclthXT1lW2FdO2lmKHQpZm9yKHZhciBhIGluIHQpclthXT10W2FdO3JldHVybiByfWZ1bmN0aW9uIG8oZSl7dmFyIHQ9W107cmV0dXJuIGZ1bmN0aW9uIGEoZSxpKXtmb3IodmFyIG49ZS5maXJzdENoaWxkO247bj1uLm5leHRTaWJsaW5nKTM9PW4ubm9kZVR5cGU/aSs9bi5ub2RlVmFsdWUubGVuZ3RoOjE9PW4ubm9kZVR5cGUmJih0LnB1c2goe2V2ZW50OiJzdGFydCIsb2Zmc2V0Omksbm9kZTpufSksaT1hKG4saSkscihuKS5tYXRjaCgvYnJ8aHJ8aW1nfGlucHV0Lyl8fHQucHVzaCh7ZXZlbnQ6InN0b3AiLG9mZnNldDppLG5vZGU6bn0pKTtyZXR1cm4gaX0oZSwwKSx0fWZ1bmN0aW9uIHMoZSxhLGkpe2Z1bmN0aW9uIG4oKXtyZXR1cm4gZS5sZW5ndGgmJmEubGVuZ3RoP2VbMF0ub2Zmc2V0IT1hWzBdLm9mZnNldD9lWzBdLm9mZnNldDxhWzBdLm9mZnNldD9lOmE6InN0YXJ0Ij09YVswXS5ldmVudD9lOmE6ZS5sZW5ndGg/ZTphfWZ1bmN0aW9uIG8oZSl7ZnVuY3Rpb24gYShlKXtyZXR1cm4iICIrZS5ub2RlTmFtZSsnPSInK3QoZS52YWx1ZSkrJyInfXArPSI8IityKGUpK0FycmF5LnByb3RvdHlwZS5tYXAuY2FsbChlLmF0dHJpYnV0ZXMsYSkuam9pbigiIikrIj4ifWZ1bmN0aW9uIHMoZSl7cCs9IjwvIityKGUpKyI+In1mdW5jdGlvbiBsKGUpeygic3RhcnQiPT1lLmV2ZW50P286cykoZS5ub2RlKX1mb3IodmFyIGM9MCxwPSIiLGQ9W107ZS5sZW5ndGh8fGEubGVuZ3RoOyl7dmFyIHU9bigpO2lmKHArPXQoaS5zdWJzdHIoYyx1WzBdLm9mZnNldC1jKSksYz11WzBdLm9mZnNldCx1PT1lKXtkLnJldmVyc2UoKS5mb3JFYWNoKHMpO2RvIGwodS5zcGxpY2UoMCwxKVswXSksdT1uKCk7d2hpbGUodT09ZSYmdS5sZW5ndGgmJnVbMF0ub2Zmc2V0PT1jKTtkLnJldmVyc2UoKS5mb3JFYWNoKG8pfWVsc2Uic3RhcnQiPT11WzBdLmV2ZW50P2QucHVzaCh1WzBdLm5vZGUpOmQucG9wKCksbCh1LnNwbGljZSgwLDEpWzBdKX1yZXR1cm4gcCt0KGkuc3Vic3RyKGMpKX1mdW5jdGlvbiBsKGUpe2Z1bmN0aW9uIHQoZSl7cmV0dXJuIGUmJmUuc291cmNlfHxlfWZ1bmN0aW9uIHIocixhKXtyZXR1cm4gUmVnRXhwKHQociksIm0iKyhlLmNJPyJpIjoiIikrKGE/ImciOiIiKSl9ZnVuY3Rpb24gYShpLG8pe2lmKCFpLmNvbXBpbGVkKXtpZihpLmNvbXBpbGVkPSEwLGkuaz1pLmt8fGkuYkssaS5rKXt2YXIgcz17fSxsPWZ1bmN0aW9uKHQscil7ZS5jSSYmKHI9ci50b0xvd2VyQ2FzZSgpKSxyLnNwbGl0KCIgIikuZm9yRWFjaChmdW5jdGlvbihlKXt2YXIgcj1lLnNwbGl0KCJ8Iik7c1tyWzBdXT1bdCxyWzFdP051bWJlcihyWzFdKToxXX0pfTsic3RyaW5nIj09dHlwZW9mIGkuaz9sKCJrZXl3b3JkIixpLmspOk9iamVjdC5rZXlzKGkuaykuZm9yRWFjaChmdW5jdGlvbihlKXtsKGUsaS5rW2VdKX0pLGkuaz1zfWkubFI9cihpLmx8fC9cYltBLVphLXowLTlfXStcYi8sITApLG8mJihpLmJLJiYoaS5iPSJcXGIoIitpLmJLLnNwbGl0KCIgIikuam9pbigifCIpKyIpXFxiIiksaS5ifHwoaS5iPS9cQnxcYi8pLGkuYlI9cihpLmIpLGkuZXx8aS5lV3x8KGkuZT0vXEJ8XGIvKSxpLmUmJihpLmVSPXIoaS5lKSksaS50RT10KGkuZSl8fCIiLGkuZVcmJm8udEUmJihpLnRFKz0oaS5lPyJ8IjoiIikrby50RSkpLGkuaSYmKGkuaVI9cihpLmkpKSx2b2lkIDA9PT1pLnImJihpLnI9MSksaS5jfHwoaS5jPVtdKTt2YXIgYz1bXTtpLmMuZm9yRWFjaChmdW5jdGlvbihlKXtlLnY/ZS52LmZvckVhY2goZnVuY3Rpb24odCl7Yy5wdXNoKG4oZSx0KSl9KTpjLnB1c2goInNlbGYiPT1lP2k6ZSl9KSxpLmM9YyxpLmMuZm9yRWFjaChmdW5jdGlvbihlKXthKGUsaSl9KSxpLnN0YXJ0cyYmYShpLnN0YXJ0cyxvKTt2YXIgcD1pLmMubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLmJLPyJcXC4/KCIrZS5iKyIpXFwuPyI6ZS5ifSkuY29uY2F0KFtpLnRFLGkuaV0pLm1hcCh0KS5maWx0ZXIoQm9vbGVhbik7aS50PXAubGVuZ3RoP3IocC5qb2luKCJ8IiksITApOntleGVjOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9fX19YShlKX1mdW5jdGlvbiBjKGUscixpLG4pe2Z1bmN0aW9uIG8oZSx0KXtmb3IodmFyIHI9MDtyPHQuYy5sZW5ndGg7cisrKWlmKGEodC5jW3JdLmJSLGUpKXJldHVybiB0LmNbcl19ZnVuY3Rpb24gcyhlLHQpe3JldHVybiBhKGUuZVIsdCk/ZTplLmVXP3MoZS5wYXJlbnQsdCk6dm9pZCAwfWZ1bmN0aW9uIGQoZSx0KXtyZXR1cm4haSYmYSh0LmlSLGUpfWZ1bmN0aW9uIHUoZSx0KXt2YXIgcj1TLmNJP3RbMF0udG9Mb3dlckNhc2UoKTp0WzBdO3JldHVybiBlLmsuaGFzT3duUHJvcGVydHkocikmJmUua1tyXX1mdW5jdGlvbiBtKGUsdCxyLGEpe3ZhciBpPWE/IiI6eS5jbGFzc1ByZWZpeCxuPSc8c3BhbiBjbGFzcz0iJytpLG89cj8iIjoiPC9zcGFuPiI7cmV0dXJuIG4rPWUrJyI+JyxuK3Qrb31mdW5jdGlvbiBiKCl7aWYoIUMuaylyZXR1cm4gdChrKTt2YXIgZT0iIixyPTA7Qy5sUi5sYXN0SW5kZXg9MDtmb3IodmFyIGE9Qy5sUi5leGVjKGspO2E7KXtlKz10KGsuc3Vic3RyKHIsYS5pbmRleC1yKSk7dmFyIGk9dShDLGEpO2k/KE0rPWlbMV0sZSs9bShpWzBdLHQoYVswXSkpKTplKz10KGFbMF0pLHI9Qy5sUi5sYXN0SW5kZXgsYT1DLmxSLmV4ZWMoayl9cmV0dXJuIGUrdChrLnN1YnN0cihyKSl9ZnVuY3Rpb24gZygpe2lmKEMuc0wmJiF4W0Muc0xdKXJldHVybiB0KGspO3ZhciBlPUMuc0w/YyhDLnNMLGssITAsd1tDLnNMXSk6cChrKTtyZXR1cm4gQy5yPjAmJihNKz1lLnIpLCJjb250aW51b3VzIj09Qy5zdWJMYW5ndWFnZU1vZGUmJih3W0Muc0xdPWUudG9wKSxtKGUubGFuZ3VhZ2UsZS52YWx1ZSwhMSwhMCl9ZnVuY3Rpb24gZigpe3JldHVybiB2b2lkIDAhPT1DLnNMP2coKTpiKCl9ZnVuY3Rpb24gdihlLHIpe3ZhciBhPWUuY04/bShlLmNOLCIiLCEwKToiIjtlLnJCPyhOKz1hLGs9IiIpOmUuZUI/KE4rPXQocikrYSxrPSIiKTooTis9YSxrPXIpLEM9T2JqZWN0LmNyZWF0ZShlLHtwYXJlbnQ6e3ZhbHVlOkN9fSl9ZnVuY3Rpb24gaChlLHIpe2lmKGsrPWUsdm9pZCAwPT09cilyZXR1cm4gTis9ZigpLDA7dmFyIGE9byhyLEMpO2lmKGEpcmV0dXJuIE4rPWYoKSx2KGEsciksYS5yQj8wOnIubGVuZ3RoO3ZhciBpPXMoQyxyKTtpZihpKXt2YXIgbj1DO24uckV8fG4uZUV8fChrKz1yKSxOKz1mKCk7ZG8gQy5jTiYmKE4rPSI8L3NwYW4+IiksTSs9Qy5yLEM9Qy5wYXJlbnQ7d2hpbGUoQyE9aS5wYXJlbnQpO3JldHVybiBuLmVFJiYoTis9dChyKSksaz0iIixpLnN0YXJ0cyYmdihpLnN0YXJ0cywiIiksbi5yRT8wOnIubGVuZ3RofWlmKGQocixDKSl0aHJvdyBuZXcgRXJyb3IoJ0lsbGVnYWwgbGV4ZW1lICInK3IrJyIgZm9yIG1vZGUgIicrKEMuY058fCI8dW5uYW1lZD4iKSsnIicpO3JldHVybiBrKz1yLHIubGVuZ3RofHwxfXZhciBTPV8oZSk7aWYoIVMpdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIGxhbmd1YWdlOiAiJytlKyciJyk7bChTKTtmb3IodmFyIEM9bnx8Uyx3PXt9LE49IiIsRD1DO0QhPVM7RD1ELnBhcmVudClELmNOJiYoTj1tKEQuY04sIiIsITApK04pO3ZhciBrPSIiLE09MDt0cnl7Zm9yKHZhciBULEUsQT0wOzspe2lmKEMudC5sYXN0SW5kZXg9QSxUPUMudC5leGVjKHIpLCFUKWJyZWFrO0U9aChyLnN1YnN0cihBLFQuaW5kZXgtQSksVFswXSksQT1ULmluZGV4K0V9aChyLnN1YnN0cihBKSk7Zm9yKHZhciBEPUM7RC5wYXJlbnQ7RD1ELnBhcmVudClELmNOJiYoTis9Ijwvc3Bhbj4iKTtyZXR1cm57cjpNLHZhbHVlOk4sbGFuZ3VhZ2U6ZSx0b3A6Q319Y2F0Y2goTCl7aWYoLTEhPUwubWVzc2FnZS5pbmRleE9mKCJJbGxlZ2FsIikpcmV0dXJue3I6MCx2YWx1ZTp0KHIpfTt0aHJvdyBMfX1mdW5jdGlvbiBwKGUscil7cj1yfHx5Lmxhbmd1YWdlc3x8T2JqZWN0LmtleXMoeCk7dmFyIGE9e3I6MCx2YWx1ZTp0KGUpfSxpPWE7cmV0dXJuIHIuZm9yRWFjaChmdW5jdGlvbih0KXtpZihfKHQpKXt2YXIgcj1jKHQsZSwhMSk7ci5sYW5ndWFnZT10LHIucj5pLnImJihpPXIpLHIucj5hLnImJihpPWEsYT1yKX19KSxpLmxhbmd1YWdlJiYoYS5zZWNvbmRfYmVzdD1pKSxhfWZ1bmN0aW9uIGQoZSl7cmV0dXJuIHkudGFiUmVwbGFjZSYmKGU9ZS5yZXBsYWNlKC9eKCg8W14+XSs+fFx0KSspL2dtLGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQucmVwbGFjZSgvXHQvZyx5LnRhYlJlcGxhY2UpfSkpLHkudXNlQlImJihlPWUucmVwbGFjZSgvXG4vZywiPGJyPiIpKSxlfWZ1bmN0aW9uIHUoZSx0LHIpe3ZhciBhPXQ/U1t0XTpyLGk9W2UudHJpbSgpXTtyZXR1cm4gZS5tYXRjaCgvKFxzfF4paGxqcyhcc3wkKS8pfHxpLnB1c2goImhsanMiKSxhJiZpLnB1c2goYSksaS5qb2luKCIgIikudHJpbSgpfWZ1bmN0aW9uIG0oZSl7dmFyIHQ9aShlKTtpZighL25vKC0/KWhpZ2hsaWdodC8udGVzdCh0KSl7dmFyIHI7eS51c2VCUj8ocj1kb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiLCJkaXYiKSxyLmlubmVySFRNTD1lLmlubmVySFRNTC5yZXBsYWNlKC9cbi9nLCIiKS5yZXBsYWNlKC88YnJbIFwvXSo+L2csIlxuIikpOnI9ZTt2YXIgYT1yLnRleHRDb250ZW50LG49dD9jKHQsYSwhMCk6cChhKSxsPW8ocik7aWYobC5sZW5ndGgpe3ZhciBtPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCIsImRpdiIpO20uaW5uZXJIVE1MPW4udmFsdWUsbi52YWx1ZT1zKGwsbyhtKSxhKX1uLnZhbHVlPWQobi52YWx1ZSksZS5pbm5lckhUTUw9bi52YWx1ZSxlLmNsYXNzTmFtZT11KGUuY2xhc3NOYW1lLHQsbi5sYW5ndWFnZSksZS5yZXN1bHQ9e2xhbmd1YWdlOm4ubGFuZ3VhZ2UscmU6bi5yfSxuLnNlY29uZF9iZXN0JiYoZS5zZWNvbmRfYmVzdD17bGFuZ3VhZ2U6bi5zZWNvbmRfYmVzdC5sYW5ndWFnZSxyZTpuLnNlY29uZF9iZXN0LnJ9KX19ZnVuY3Rpb24gYihlKXt5PW4oeSxlKX1mdW5jdGlvbiBnKCl7aWYoIWcuY2FsbGVkKXtnLmNhbGxlZD0hMDt2YXIgZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJwcmUgY29kZSIpO0FycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwoZSxtKX19ZnVuY3Rpb24gZigpe2FkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGcsITEpLGFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGcsITEpfWZ1bmN0aW9uIHYodCxyKXt2YXIgYT14W3RdPXIoZSk7YS5hbGlhc2VzJiZhLmFsaWFzZXMuZm9yRWFjaChmdW5jdGlvbihlKXtTW2VdPXR9KX1mdW5jdGlvbiBoKCl7cmV0dXJuIE9iamVjdC5rZXlzKHgpfWZ1bmN0aW9uIF8oZSl7cmV0dXJuIHhbZV18fHhbU1tlXV19dmFyIHk9e2NsYXNzUHJlZml4OiJobGpzLSIsdGFiUmVwbGFjZTpudWxsLHVzZUJSOiExLGxhbmd1YWdlczp2b2lkIDB9LHg9e30sUz17fTtyZXR1cm4gZS5oaWdobGlnaHQ9YyxlLmhpZ2hsaWdodEF1dG89cCxlLmZpeE1hcmt1cD1kLGUuaGlnaGxpZ2h0QmxvY2s9bSxlLmNvbmZpZ3VyZT1iLGUuaW5pdEhpZ2hsaWdodGluZz1nLGUuaW5pdEhpZ2hsaWdodGluZ09uTG9hZD1mLGUucmVnaXN0ZXJMYW5ndWFnZT12LGUubGlzdExhbmd1YWdlcz1oLGUuZ2V0TGFuZ3VhZ2U9XyxlLmluaGVyaXQ9bixlLklSPSJbYS16QS1aXVthLXpBLVowLTlfXSoiLGUuVUlSPSJbYS16QS1aX11bYS16QS1aMC05X10qIixlLk5SPSJcXGJcXGQrKFxcLlxcZCspPyIsZS5DTlI9IihcXGIwW3hYXVthLWZBLUYwLTldK3woXFxiXFxkKyhcXC5cXGQqKT98XFwuXFxkKykoW2VFXVstK10/XFxkKyk/KSIsZS5CTlI9IlxcYigwYlswMV0rKSIsZS5SU1I9IiF8IT18IT09fCV8JT18JnwmJnwmPXxcXCp8XFwqPXxcXCt8XFwrPXwsfC18LT18Lz18L3w6fDt8PDx8PDw9fDw9fDx8PT09fD09fD18Pj4+PXw+Pj18Pj18Pj4+fD4+fD58XFw/fFxcW3xcXHt8XFwofFxcXnxcXF49fFxcfHxcXHw9fFxcfFxcfHx+IixlLkJFPXtiOiJcXFxcW1xcc1xcU10iLHI6MH0sZS5BU009e2NOOiJzdHJpbmciLGI6IiciLGU6IiciLGk6IlxcbiIsYzpbZS5CRV19LGUuUVNNPXtjTjoic3RyaW5nIixiOiciJyxlOiciJyxpOiJcXG4iLGM6W2UuQkVdfSxlLlBXTT17YjovXGIoYXxhbnx0aGV8YXJlfEl8SSdtfGlzbid0fGRvbid0fGRvZXNuJ3R8d29uJ3R8YnV0fGp1c3R8c2hvdWxkfHByZXR0eXxzaW1wbHl8ZW5vdWdofGdvbm5hfGdvaW5nfHd0Znxzb3xzdWNoKVxiL30sZS5DTENNPXtjTjoiY29tbWVudCIsYjoiLy8iLGU6IiQiLGM6W2UuUFdNXX0sZS5DQkNNPXtjTjoiY29tbWVudCIsYjoiL1xcKiIsZToiXFwqLyIsYzpbZS5QV01dfSxlLkhDTT17Y046ImNvbW1lbnQiLGI6IiMiLGU6IiQiLGM6W2UuUFdNXX0sZS5OTT17Y046Im51bWJlciIsYjplLk5SLHI6MH0sZS5DTk09e2NOOiJudW1iZXIiLGI6ZS5DTlIscjowfSxlLkJOTT17Y046Im51bWJlciIsYjplLkJOUixyOjB9LGUuQ1NTTk09e2NOOiJudW1iZXIiLGI6ZS5OUisiKCV8ZW18ZXh8Y2h8cmVtfHZ3fHZofHZtaW58dm1heHxjbXxtbXxpbnxwdHxwY3xweHxkZWd8Z3JhZHxyYWR8dHVybnxzfG1zfEh6fGtIenxkcGl8ZHBjbXxkcHB4KT8iLHI6MH0sZS5STT17Y046InJlZ2V4cCIsYjovXC8vLGU6L1wvW2dpbXV5XSovLGk6L1xuLyxjOltlLkJFLHtiOi9cWy8sZTovXF0vLHI6MCxjOltlLkJFXX1dfSxlLlRNPXtjTjoidGl0bGUiLGI6ZS5JUixyOjB9LGUuVVRNPXtjTjoidGl0bGUiLGI6ZS5VSVIscjowfSxlfSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCIxYyIsZnVuY3Rpb24oZSl7dmFyIHQ9IlthLXpBLVrQsC3Rj9CQLdCvXVthLXpBLVowLTlf0LAt0Y/QkC3Qr10qIixyPSLQstC+0LfQstGA0LDRgiDQtNCw0YLQsCDQtNC70Y8g0LXRgdC70Lgg0Lgg0LjQu9C4INC40L3QsNGH0LUg0LjQvdCw0YfQtdC10YHQu9C4INC40YHQutC70Y7Rh9C10L3QuNC1INC60L7QvdC10YbQtdGB0LvQuCDQutC+0L3QtdGG0L/QvtC/0YvRgtC60Lgg0LrQvtC90LXRhtC/0YDQvtGG0LXQtNGD0YDRiyDQutC+0L3QtdGG0YTRg9C90LrRhtC40Lgg0LrQvtC90LXRhtGG0LjQutC70LAg0LrQvtC90YHRgtCw0L3RgtCwINC90LUg0L/QtdGA0LXQudGC0Lgg0L/QtdGA0LXQvCDQv9C10YDQtdGH0LjRgdC70LXQvdC40LUg0L/QviDQv9C+0LrQsCDQv9C+0L/Ri9GC0LrQsCDQv9GA0LXRgNCy0LDRgtGMINC/0YDQvtC00L7Qu9C20LjRgtGMINC/0YDQvtGG0LXQtNGD0YDQsCDRgdGC0YDQvtC60LAg0YLQvtCz0LTQsCDRhNGBINGE0YPQvdC60YbQuNGPINGG0LjQutC7INGH0LjRgdC70L4g0Y3QutGB0L/QvtGA0YIiLGE9ImFuc2l0b29lbSBvZW10b2Fuc2kg0LLQstC10YHRgtC40LLQuNC00YHRg9Cx0LrQvtC90YLQviDQstCy0LXRgdGC0LjQtNCw0YLRgyDQstCy0LXRgdGC0LjQt9C90LDRh9C10L3QuNC1INCy0LLQtdGB0YLQuNC/0LXRgNC10YfQuNGB0LvQtdC90LjQtSDQstCy0LXRgdGC0LjQv9C10YDQuNC+0LQg0LLQstC10YHRgtC40L/Qu9Cw0L3RgdGH0LXRgtC+0LIg0LLQstC10YHRgtC40YHRgtGA0L7QutGDINCy0LLQtdGB0YLQuNGH0LjRgdC70L4g0LLQvtC/0YDQvtGBINCy0L7RgdGB0YLQsNC90L7QstC40YLRjNC30L3QsNGH0LXQvdC40LUg0LLRgNC10LMg0LLRi9Cx0YDQsNC90L3Ri9C50L/Qu9Cw0L3RgdGH0LXRgtC+0LIg0LLRi9C30LLQsNGC0YzQuNGB0LrQu9GO0YfQtdC90LjQtSDQtNCw0YLQsNCz0L7QtCDQtNCw0YLQsNC80LXRgdGP0YYg0LTQsNGC0LDRh9C40YHQu9C+INC00L7QsdCw0LLQuNGC0YzQvNC10YHRj9GGINC30LDQstC10YDRiNC40YLRjNGA0LDQsdC+0YLRg9GB0LjRgdGC0LXQvNGLINC30LDQs9C+0LvQvtCy0L7QutGB0LjRgdGC0LXQvNGLINC30LDQv9C40YHRjNC20YPRgNC90LDQu9Cw0YDQtdCz0LjRgdGC0YDQsNGG0LjQuCDQt9Cw0L/Rg9GB0YLQuNGC0YzQv9GA0LjQu9C+0LbQtdC90LjQtSDQt9Cw0YTQuNC60YHQuNGA0L7QstCw0YLRjNGC0YDQsNC90LfQsNC60YbQuNGOINC30L3QsNGH0LXQvdC40LXQstGB0YLRgNC+0LrRgyDQt9C90LDRh9C10L3QuNC10LLRgdGC0YDQvtC60YPQstC90YPRgtGAINC30L3QsNGH0LXQvdC40LXQstGE0LDQudC7INC30L3QsNGH0LXQvdC40LXQuNC30YHRgtGA0L7QutC4INC30L3QsNGH0LXQvdC40LXQuNC30YHRgtGA0L7QutC40LLQvdGD0YLRgCDQt9C90LDRh9C10L3QuNC10LjQt9GE0LDQudC70LAg0LjQvNGP0LrQvtC80L/RjNGO0YLQtdGA0LAg0LjQvNGP0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPINC60LDRgtCw0LvQvtCz0LLRgNC10LzQtdC90L3Ri9GF0YTQsNC50LvQvtCyINC60LDRgtCw0LvQvtCz0LjQsSDQutCw0YLQsNC70L7Qs9C/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjyDQutCw0YLQsNC70L7Qs9C/0YDQvtCz0YDQsNC80LzRiyDQutC+0LTRgdC40LzQsiDQutC+0LzQsNC90LTQsNGB0LjRgdGC0LXQvNGLINC60L7QvdCz0L7QtNCwINC60L7QvdC10YbQv9C10YDQuNC+0LTQsNCx0Lgg0LrQvtC90LXRhtGA0LDRgdGB0YfQuNGC0LDQvdC90L7Qs9C+0L/QtdGA0LjQvtC00LDQsdC4INC60L7QvdC10YbRgdGC0LDQvdC00LDRgNGC0L3QvtCz0L7QuNC90YLQtdGA0LLQsNC70LAg0LrQvtC90LrQstCw0YDRgtCw0LvQsCDQutC+0L3QvNC10YHRj9GG0LAg0LrQvtC90L3QtdC00LXQu9C4INC70LXQsiDQu9C+0LMg0LvQvtCzMTAg0LzQsNC60YEg0LzQsNC60YHQuNC80LDQu9GM0L3QvtC10LrQvtC70LjRh9C10YHRgtCy0L7RgdGD0LHQutC+0L3RgtC+INC80LjQvSDQvNC+0L3QvtC/0L7Qu9GM0L3Ri9C50YDQtdC20LjQvCDQvdCw0LfQstCw0L3QuNC10LjQvdGC0LXRgNGE0LXQudGB0LAg0L3QsNC30LLQsNC90LjQtdC90LDQsdC+0YDQsNC/0YDQsNCyINC90LDQt9C90LDRh9C40YLRjNCy0LjQtCDQvdCw0LfQvdCw0YfQuNGC0YzRgdGH0LXRgiDQvdCw0LnRgtC4INC90LDQudGC0LjQv9C+0LzQtdGH0LXQvdC90YvQtdC90LDRg9C00LDQu9C10L3QuNC1INC90LDQudGC0LjRgdGB0YvQu9C60Lgg0L3QsNGH0LDQu9C+0L/QtdGA0LjQvtC00LDQsdC4INC90LDRh9Cw0LvQvtGB0YLQsNC90LTQsNGA0YLQvdC+0LPQvtC40L3RgtC10YDQstCw0LvQsCDQvdCw0YfQsNGC0YzRgtGA0LDQvdC30LDQutGG0LjRjiDQvdCw0YfQs9C+0LTQsCDQvdCw0YfQutCy0LDRgNGC0LDQu9CwINC90LDRh9C80LXRgdGP0YbQsCDQvdCw0YfQvdC10LTQtdC70Lgg0L3QvtC80LXRgNC00L3Rj9Cz0L7QtNCwINC90L7QvNC10YDQtNC90Y/QvdC10LTQtdC70Lgg0L3QvtC80LXRgNC90LXQtNC10LvQuNCz0L7QtNCwINC90YDQtdCzINC+0LHRgNCw0LHQvtGC0LrQsNC+0LbQuNC00LDQvdC40Y8g0L7QutGAINC+0L/QuNGB0LDQvdC40LXQvtGI0LjQsdC60Lgg0L7RgdC90L7QstC90L7QudC20YPRgNC90LDQu9GA0LDRgdGH0LXRgtC+0LIg0L7RgdC90L7QstC90L7QudC/0LvQsNC90YHRh9C10YLQvtCyINC+0YHQvdC+0LLQvdC+0LnRj9C30YvQuiDQvtGC0LrRgNGL0YLRjNGE0L7RgNC80YMg0L7RgtC60YDRi9GC0YzRhNC+0YDQvNGD0LzQvtC00LDQu9GM0L3QviDQvtGC0LzQtdC90LjRgtGM0YLRgNCw0L3Qt9Cw0LrRhtC40Y4g0L7Rh9C40YHRgtC40YLRjNC+0LrQvdC+0YHQvtC+0LHRidC10L3QuNC5INC/0LXRgNC40L7QtNGB0YLRgCDQv9C+0LvQvdC+0LXQuNC80Y/Qv9C+0LvRjNC30L7QstCw0YLQtdC70Y8g0L/QvtC70YPRh9C40YLRjNCy0YDQtdC80Y/RgtCwINC/0L7Qu9GD0YfQuNGC0YzQtNCw0YLRg9GC0LAg0L/QvtC70YPRh9C40YLRjNC00L7QutGD0LzQtdC90YLRgtCwINC/0L7Qu9GD0YfQuNGC0YzQt9C90LDRh9C10L3QuNGP0L7RgtCx0L7RgNCwINC/0L7Qu9GD0YfQuNGC0YzQv9C+0LfQuNGG0LjRjtGC0LAg0L/QvtC70YPRh9C40YLRjNC/0YPRgdGC0L7QtdC30L3QsNGH0LXQvdC40LUg0L/QvtC70YPRh9C40YLRjNGC0LAg0L/RgNCw0LIg0L/RgNCw0LLQvtC00L7RgdGC0YPQv9CwINC/0YDQtdC00YPQv9GA0LXQttC00LXQvdC40LUg0L/RgNC10YTQuNC60YHQsNCy0YLQvtC90YPQvNC10YDQsNGG0LjQuCDQv9GD0YHRgtCw0Y/RgdGC0YDQvtC60LAg0L/Rg9GB0YLQvtC10LfQvdCw0YfQtdC90LjQtSDRgNCw0LHQvtGH0LDRj9C00LDRgtGC0YzQv9GD0YHRgtC+0LXQt9C90LDRh9C10L3QuNC1INGA0LDQsdC+0YfQsNGP0LTQsNGC0LAg0YDQsNC30LTQtdC70LjRgtC10LvRjNGB0YLRgNCw0L3QuNGGINGA0LDQt9C00LXQu9C40YLQtdC70YzRgdGC0YDQvtC6INGA0LDQt9C8INGA0LDQt9C+0LHRgNCw0YLRjNC/0L7Qt9C40YbQuNGO0LTQvtC60YPQvNC10L3RgtCwINGA0LDRgdGB0YfQuNGC0LDRgtGM0YDQtdCz0LjRgdGC0YDRi9C90LAg0YDQsNGB0YHRh9C40YLQsNGC0YzRgNC10LPQuNGB0YLRgNGL0L/QviDRgdC40LPQvdCw0Lsg0YHQuNC80LIg0YHQuNC80LLQvtC70YLQsNCx0YPQu9GP0YbQuNC4INGB0L7Qt9C00LDRgtGM0L7QsdGK0LXQutGCINGB0L7QutGA0Lsg0YHQvtC60YDQu9C/INGB0L7QutGA0L8g0YHQvtC+0LHRidC40YLRjCDRgdC+0YHRgtC+0Y/QvdC40LUg0YHQvtGF0YDQsNC90LjRgtGM0LfQvdCw0YfQtdC90LjQtSDRgdGA0LXQtCDRgdGC0LDRgtGD0YHQstC+0LfQstGA0LDRgtCwINGB0YLRgNC00LvQuNC90LAg0YHRgtGA0LfQsNC80LXQvdC40YLRjCDRgdGC0YDQutC+0LvQuNGH0LXRgdGC0LLQvtGB0YLRgNC+0Log0YHRgtGA0L/QvtC70YPRh9C40YLRjNGB0YLRgNC+0LrRgyAg0YHRgtGA0YfQuNGB0LvQvtCy0YXQvtC20LTQtdC90LjQuSDRgdGE0L7RgNC80LjRgNC+0LLQsNGC0YzQv9C+0LfQuNGG0LjRjtC00L7QutGD0LzQtdC90YLQsCDRgdGH0LXRgtC/0L7QutC+0LTRgyDRgtC10LrRg9GJ0LDRj9C00LDRgtCwINGC0LXQutGD0YnQtdC10LLRgNC10LzRjyDRgtC40L/Qt9C90LDRh9C10L3QuNGPINGC0LjQv9C30L3QsNGH0LXQvdC40Y/RgdGC0YAg0YPQtNCw0LvQuNGC0YzQvtCx0YrQtdC60YLRiyDRg9GB0YLQsNC90L7QstC40YLRjNGC0LDQvdCwINGD0YHRgtCw0L3QvtCy0LjRgtGM0YLQsNC/0L4g0YTQuNC60YHRiNCw0LHQu9C+0L0g0YTQvtGA0LzQsNGCINGG0LXQuyDRiNCw0LHQu9C+0L0iLGk9e2NOOiJkcXVvdGUiLGI6JyIiJ30sbj17Y046InN0cmluZyIsYjonIicsZTonInwkJyxjOltpXX0sbz17Y046InN0cmluZyIsYjoiXFx8IixlOicifCQnLGM6W2ldfTtyZXR1cm57Y0k6ITAsbDp0LGs6e2tleXdvcmQ6cixidWlsdF9pbjphfSxjOltlLkNMQ00sZS5OTSxuLG8se2NOOiJmdW5jdGlvbiIsYjoiKNC/0YDQvtGG0LXQtNGD0YDQsHzRhNGD0L3QutGG0LjRjykiLGU6IiQiLGw6dCxrOiLQv9GA0L7RhtC10LTRg9GA0LAg0YTRg9C90LrRhtC40Y8iLGM6W2UuaW5oZXJpdChlLlRNLHtiOnR9KSx7Y046InRhaWwiLGVXOiEwLGM6W3tjTjoicGFyYW1zIixiOiJcXCgiLGU6IlxcKSIsbDp0LGs6ItC30L3QsNGHIixjOltuLG9dfSx7Y046ImV4cG9ydCIsYjoi0Y3QutGB0L/QvtGA0YIiLGVXOiEwLGw6dCxrOiLRjdC60YHQv9C+0YDRgiIsYzpbZS5DTENNXX1dfSxlLkNMQ01dfSx7Y046InByZXByb2Nlc3NvciIsYjoiIyIsZToiJCJ9LHtjTjoiZGF0ZSIsYjoiJ1xcZHsyfVxcLlxcZHsyfVxcLihcXGR7Mn18XFxkezR9KScifV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJhY3Rpb25zY3JpcHQiLGZ1bmN0aW9uKGUpe3ZhciB0PSJbYS16QS1aXyRdW2EtekEtWjAtOV8kXSoiLHI9IihbKl18W2EtekEtWl8kXVthLXpBLVowLTlfJF0qKSIsYT17Y046InJlc3RfYXJnIixiOiJbLl17M30iLGU6dCxyOjEwfTtyZXR1cm57YWxpYXNlczpbImFzIl0sazp7a2V5d29yZDoiYXMgYnJlYWsgY2FzZSBjYXRjaCBjbGFzcyBjb25zdCBjb250aW51ZSBkZWZhdWx0IGRlbGV0ZSBkbyBkeW5hbWljIGVhY2ggZWxzZSBleHRlbmRzIGZpbmFsIGZpbmFsbHkgZm9yIGZ1bmN0aW9uIGdldCBpZiBpbXBsZW1lbnRzIGltcG9ydCBpbiBpbmNsdWRlIGluc3RhbmNlb2YgaW50ZXJmYWNlIGludGVybmFsIGlzIG5hbWVzcGFjZSBuYXRpdmUgbmV3IG92ZXJyaWRlIHBhY2thZ2UgcHJpdmF0ZSBwcm90ZWN0ZWQgcHVibGljIHJldHVybiBzZXQgc3RhdGljIHN1cGVyIHN3aXRjaCB0aGlzIHRocm93IHRyeSB0eXBlb2YgdXNlIHZhciB2b2lkIHdoaWxlIHdpdGgiLGxpdGVyYWw6InRydWUgZmFsc2UgbnVsbCB1bmRlZmluZWQifSxjOltlLkFTTSxlLlFTTSxlLkNMQ00sZS5DQkNNLGUuQ05NLHtjTjoicGFja2FnZSIsYks6InBhY2thZ2UiLGU6InsiLGM6W2UuVE1dfSx7Y046ImNsYXNzIixiSzoiY2xhc3MgaW50ZXJmYWNlIixlOiJ7IixlRTohMCxjOlt7Yks6ImV4dGVuZHMgaW1wbGVtZW50cyJ9LGUuVE1dfSx7Y046InByZXByb2Nlc3NvciIsYks6ImltcG9ydCBpbmNsdWRlIixlOiI7In0se2NOOiJmdW5jdGlvbiIsYks6ImZ1bmN0aW9uIixlOiJbeztdIixlRTohMCxpOiJcXFMiLGM6W2UuVE0se2NOOiJwYXJhbXMiLGI6IlxcKCIsZToiXFwpIixjOltlLkFTTSxlLlFTTSxlLkNMQ00sZS5DQkNNLGFdfSx7Y046InR5cGUiLGI6IjoiLGU6cixyOjEwfV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImFwYWNoZSIsZnVuY3Rpb24oZSl7dmFyIHQ9e2NOOiJudW1iZXIiLGI6IltcXCQlXVxcZCsifTtyZXR1cm57YWxpYXNlczpbImFwYWNoZWNvbmYiXSxjSTohMCxjOltlLkhDTSx7Y046InRhZyIsYjoiPC8/IixlOiI+In0se2NOOiJrZXl3b3JkIixiOi9cdysvLHI6MCxrOntjb21tb246Im9yZGVyIGRlbnkgYWxsb3cgc2V0ZW52IHJld3JpdGVydWxlIHJld3JpdGVlbmdpbmUgcmV3cml0ZWNvbmQgZG9jdW1lbnRyb290IHNldGhhbmRsZXIgZXJyb3Jkb2N1bWVudCBsb2FkbW9kdWxlIG9wdGlvbnMgaGVhZGVyIGxpc3RlbiBzZXJ2ZXJyb290IHNlcnZlcm5hbWUifSxzdGFydHM6e2U6LyQvLHI6MCxrOntsaXRlcmFsOiJvbiBvZmYgYWxsIn0sYzpbe2NOOiJzcWJyYWNrZXQiLGI6Ilxcc1xcWyIsZToiXFxdJCJ9LHtjTjoiY2JyYWNrZXQiLGI6IltcXCQlXVxceyIsZToiXFx9IixjOlsic2VsZiIsdF19LHQsZS5RU01dfX1dLGk6L1xTL319KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImFwcGxlc2NyaXB0IixmdW5jdGlvbihlKXt2YXIgdD1lLmluaGVyaXQoZS5RU00se2k6IiJ9KSxyPXtjTjoicGFyYW1zIixiOiJcXCgiLGU6IlxcKSIsYzpbInNlbGYiLGUuQ05NLHRdfSxhPVt7Y046ImNvbW1lbnQiLGI6Ii0tIixlOiIkIn0se2NOOiJjb21tZW50IixiOiJcXChcXCoiLGU6IlxcKlxcKSIsYzpbInNlbGYiLHtiOiItLSIsZToiJCJ9XX0sZS5IQ01dO3JldHVybnthbGlhc2VzOlsib3Nhc2NyaXB0Il0sazp7a2V5d29yZDoiYWJvdXQgYWJvdmUgYWZ0ZXIgYWdhaW5zdCBhbmQgYXJvdW5kIGFzIGF0IGJhY2sgYmVmb3JlIGJlZ2lubmluZyBiZWhpbmQgYmVsb3cgYmVuZWF0aCBiZXNpZGUgYmV0d2VlbiBidXQgYnkgY29uc2lkZXJpbmcgY29udGFpbiBjb250YWlucyBjb250aW51ZSBjb3B5IGRpdiBkb2VzIGVpZ2h0aCBlbHNlIGVuZCBlcXVhbCBlcXVhbHMgZXJyb3IgZXZlcnkgZXhpdCBmaWZ0aCBmaXJzdCBmb3IgZm91cnRoIGZyb20gZnJvbnQgZ2V0IGdpdmVuIGdsb2JhbCBpZiBpZ25vcmluZyBpbiBpbnRvIGlzIGl0IGl0cyBsYXN0IGxvY2FsIG1lIG1pZGRsZSBtb2QgbXkgbmludGggbm90IG9mIG9uIG9udG8gb3Igb3ZlciBwcm9wIHByb3BlcnR5IHB1dCByZWYgcmVmZXJlbmNlIHJlcGVhdCByZXR1cm5pbmcgc2NyaXB0IHNlY29uZCBzZXQgc2V2ZW50aCBzaW5jZSBzaXh0aCBzb21lIHRlbGwgdGVudGggdGhhdCB0aGV8MCB0aGVuIHRoaXJkIHRocm91Z2ggdGhydSB0aW1lb3V0IHRpbWVzIHRvIHRyYW5zYWN0aW9uIHRyeSB1bnRpbCB3aGVyZSB3aGlsZSB3aG9zZSB3aXRoIHdpdGhvdXQiLGNvbnN0YW50OiJBcHBsZVNjcmlwdCBmYWxzZSBsaW5lZmVlZCByZXR1cm4gcGkgcXVvdGUgcmVzdWx0IHNwYWNlIHRhYiB0cnVlIix0eXBlOiJhbGlhcyBhcHBsaWNhdGlvbiBib29sZWFuIGNsYXNzIGNvbnN0YW50IGRhdGUgZmlsZSBpbnRlZ2VyIGxpc3QgbnVtYmVyIHJlYWwgcmVjb3JkIHN0cmluZyB0ZXh0Iixjb21tYW5kOiJhY3RpdmF0ZSBiZWVwIGNvdW50IGRlbGF5IGxhdW5jaCBsb2cgb2Zmc2V0IHJlYWQgcm91bmQgcnVuIHNheSBzdW1tYXJpemUgd3JpdGUiLHByb3BlcnR5OiJjaGFyYWN0ZXIgY2hhcmFjdGVycyBjb250ZW50cyBkYXkgZnJvbnRtb3N0IGlkIGl0ZW0gbGVuZ3RoIG1vbnRoIG5hbWUgcGFyYWdyYXBoIHBhcmFncmFwaHMgcmVzdCByZXZlcnNlIHJ1bm5pbmcgdGltZSB2ZXJzaW9uIHdlZWtkYXkgd29yZCB3b3JkcyB5ZWFyIn0sYzpbdCxlLkNOTSx7Y046InR5cGUiLGI6IlxcYlBPU0lYIGZpbGVcXGIifSx7Y046ImNvbW1hbmQiLGI6IlxcYihjbGlwYm9hcmQgaW5mb3x0aGUgY2xpcGJvYXJkfGluZm8gZm9yfGxpc3QgKGRpc2tzfGZvbGRlcil8bW91bnQgdm9sdW1lfHBhdGggdG98KGNsb3NlfG9wZW4gZm9yKSBhY2Nlc3N8KGdldHxzZXQpIGVvZnxjdXJyZW50IGRhdGV8ZG8gc2hlbGwgc2NyaXB0fGdldCB2b2x1bWUgc2V0dGluZ3N8cmFuZG9tIG51bWJlcnxzZXQgdm9sdW1lfHN5c3RlbSBhdHRyaWJ1dGV8c3lzdGVtIGluZm98dGltZSB0byBHTVR8KGxvYWR8cnVufHN0b3JlKSBzY3JpcHR8c2NyaXB0aW5nIGNvbXBvbmVudHN8QVNDSUkgKGNoYXJhY3RlcnxudW1iZXIpfGxvY2FsaXplZCBzdHJpbmd8Y2hvb3NlIChhcHBsaWNhdGlvbnxjb2xvcnxmaWxlfGZpbGUgbmFtZXxmb2xkZXJ8ZnJvbSBsaXN0fHJlbW90ZSBhcHBsaWNhdGlvbnxVUkwpfGRpc3BsYXkgKGFsZXJ0fGRpYWxvZykpXFxifF5cXHMqcmV0dXJuXFxiIn0se2NOOiJjb25zdGFudCIsYjoiXFxiKHRleHQgaXRlbSBkZWxpbWl0ZXJzfGN1cnJlbnQgYXBwbGljYXRpb258bWlzc2luZyB2YWx1ZSlcXGIifSx7Y046ImtleXdvcmQiLGI6IlxcYihhcGFydCBmcm9tfGFzaWRlIGZyb218aW5zdGVhZCBvZnxvdXQgb2Z8Z3JlYXRlciB0aGFufGlzbid0fChkb2Vzbid0fGRvZXMgbm90KSAoZXF1YWx8Y29tZSBiZWZvcmV8Y29tZSBhZnRlcnxjb250YWluKXwoZ3JlYXRlcnxsZXNzKSB0aGFuKCBvciBlcXVhbCk/fChzdGFydHM/fGVuZHN8YmVnaW5zPykgd2l0aHxjb250YWluZWQgYnl8Y29tZXMgKGJlZm9yZXxhZnRlcil8YSAocmVmfHJlZmVyZW5jZSkpXFxiIn0se2NOOiJwcm9wZXJ0eSIsYjoiXFxiKFBPU0lYIHBhdGh8KGRhdGV8dGltZSkgc3RyaW5nfHF1b3RlZCBmb3JtKVxcYiJ9LHtjTjoiZnVuY3Rpb25fc3RhcnQiLGJLOiJvbiIsaToiWyR7PTtcXG5dIixjOltlLlVUTSxyXX1dLmNvbmNhdChhKSxpOiIvL3wtPnw9PiJ9fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJ4bWwiLGZ1bmN0aW9uKCl7dmFyIGU9IltBLVphLXowLTlcXC5fOi1dKyIsdD17YjovPFw/KHBocCk/KD8hXHcpLyxlOi9cPz4vLHNMOiJwaHAiLHN1Ykxhbmd1YWdlTW9kZToiY29udGludW91cyJ9LHI9e2VXOiEwLGk6LzwvLHI6MCxjOlt0LHtjTjoiYXR0cmlidXRlIixiOmUscjowfSx7YjoiPSIscjowLGM6W3tjTjoidmFsdWUiLGM6W3RdLHY6W3tiOi8iLyxlOi8iL30se2I6LycvLGU6LycvfSx7YjovW15cc1wvPl0rL31dfV19XX07cmV0dXJue2FsaWFzZXM6WyJodG1sIiwieGh0bWwiLCJyc3MiLCJhdG9tIiwieHNsIiwicGxpc3QiXSxjSTohMCxjOlt7Y046ImRvY3R5cGUiLGI6IjwhRE9DVFlQRSIsZToiPiIscjoxMCxjOlt7YjoiXFxbIixlOiJcXF0ifV19LHtjTjoiY29tbWVudCIsYjoiPCEtLSIsZToiLS0+IixyOjEwfSx7Y046ImNkYXRhIixiOiI8XFwhXFxbQ0RBVEFcXFsiLGU6IlxcXVxcXT4iLHI6MTB9LHtjTjoidGFnIixiOiI8c3R5bGUoPz1cXHN8PnwkKSIsZToiPiIsazp7dGl0bGU6InN0eWxlIn0sYzpbcl0sc3RhcnRzOntlOiI8L3N0eWxlPiIsckU6ITAsc0w6ImNzcyJ9fSx7Y046InRhZyIsYjoiPHNjcmlwdCg/PVxcc3w+fCQpIixlOiI+IixrOnt0aXRsZToic2NyaXB0In0sYzpbcl0sc3RhcnRzOntlOiI8L3NjcmlwdD4iLHJFOiEwLHNMOiJqYXZhc2NyaXB0In19LHQse2NOOiJwaSIsYjovPFw/XHcrLyxlOi9cPz4vLHI6MTB9LHtjTjoidGFnIixiOiI8Lz8iLGU6Ii8/PiIsYzpbe2NOOiJ0aXRsZSIsYjovW14gXC8+PFxuXHRdKy8scjowfSxyXX1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiYXNjaWlkb2MiLGZ1bmN0aW9uKCl7cmV0dXJue2M6W3tjTjoiY29tbWVudCIsYjoiXi97NCx9XFxuIixlOiJcXG4vezQsfSQiLHI6MTB9LHtjTjoiY29tbWVudCIsYjoiXi8vIixlOiIkIixyOjB9LHtjTjoidGl0bGUiLGI6Il5cXC5cXHcuKiQifSx7YjoiXls9XFwqXXs0LH1cXG4iLGU6Ilxcbl5bPVxcKl17NCx9JCIscjoxMH0se2NOOiJoZWFkZXIiLGI6Il4oPXsxLDV9KSAuKz8oIFxcMSk/JCIscjoxMH0se2NOOiJoZWFkZXIiLGI6Il5bXlxcW1xcXVxcbl0rP1xcbls9XFwtflxcXlxcK117Mix9JCIscjoxMH0se2NOOiJhdHRyaWJ1dGUiLGI6Il46Lis/OiIsZToiXFxzIixlRTohMCxyOjEwfSx7Y046ImF0dHJpYnV0ZSIsYjoiXlxcWy4rP1xcXSQiLHI6MH0se2NOOiJibG9ja3F1b3RlIixiOiJeX3s0LH1cXG4iLGU6Ilxcbl97NCx9JCIscjoxMH0se2NOOiJjb2RlIixiOiJeW1xcLVxcLl17NCx9XFxuIixlOiJcXG5bXFwtXFwuXXs0LH0kIixyOjEwfSx7YjoiXlxcK3s0LH1cXG4iLGU6IlxcblxcK3s0LH0kIixjOlt7YjoiPCIsZToiPiIsc0w6InhtbCIscjowfV0scjoxMH0se2NOOiJidWxsZXQiLGI6Il4oXFwqK3xcXC0rfFxcLit8W15cXG5dKz86OilcXHMrIn0se2NOOiJsYWJlbCIsYjoiXihOT1RFfFRJUHxJTVBPUlRBTlR8V0FSTklOR3xDQVVUSU9OKTpcXHMrIixyOjEwfSx7Y046InN0cm9uZyIsYjoiXFxCXFwqKD8hW1xcKlxcc10pIixlOiIoXFxuezJ9fFxcKikiLGM6W3tiOiJcXFxcKlxcdyIscjowfV19LHtjTjoiZW1waGFzaXMiLGI6IlxcQicoPyFbJ1xcc10pIixlOiIoXFxuezJ9fCcpIixjOlt7YjoiXFxcXCdcXHciLHI6MH1dLHI6MH0se2NOOiJlbXBoYXNpcyIsYjoiXyg/IVtfXFxzXSkiLGU6IihcXG57Mn18XykiLHI6MH0se2NOOiJzbWFydHF1b3RlIix2Olt7YjoiYGAuKz8nJyJ9LHtiOiJgLis/JyJ9XX0se2NOOiJjb2RlIixiOiIoYC4rP2B8XFwrLis/XFwrKSIscjowfSx7Y046ImNvZGUiLGI6Il5bIFxcdF0iLGU6IiQiLHI6MH0se2NOOiJob3Jpem9udGFsX3J1bGUiLGI6Il4nezMsfVsgXFx0XSokIixyOjEwfSx7YjoiKGxpbms6KT8oaHR0cHxodHRwc3xmdHB8ZmlsZXxpcmN8aW1hZ2U6Pyk6XFxTK1xcWy4qP1xcXSIsckI6ITAsYzpbe2I6IihsaW5rfGltYWdlOj8pOiIscjowfSx7Y046ImxpbmtfdXJsIixiOiJcXHciLGU6IlteXFxbXSsiLHI6MH0se2NOOiJsaW5rX2xhYmVsIixiOiJcXFsiLGU6IlxcXSIsZUI6ITAsZUU6ITAscjowfV0scjoxMH1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiYXNwZWN0aiIsZnVuY3Rpb24oZSl7dmFyIHQ9ImZhbHNlIHN5bmNocm9uaXplZCBpbnQgYWJzdHJhY3QgZmxvYXQgcHJpdmF0ZSBjaGFyIGJvb2xlYW4gc3RhdGljIG51bGwgaWYgY29uc3QgZm9yIHRydWUgd2hpbGUgbG9uZyB0aHJvdyBzdHJpY3RmcCBmaW5hbGx5IHByb3RlY3RlZCBpbXBvcnQgbmF0aXZlIGZpbmFsIHJldHVybiB2b2lkIGVudW0gZWxzZSBleHRlbmRzIGltcGxlbWVudHMgYnJlYWsgdHJhbnNpZW50IG5ldyBjYXRjaCBpbnN0YW5jZW9mIGJ5dGUgc3VwZXIgdm9sYXRpbGUgY2FzZSBhc3NlcnQgc2hvcnQgcGFja2FnZSBkZWZhdWx0IGRvdWJsZSBwdWJsaWMgdHJ5IHRoaXMgc3dpdGNoIGNvbnRpbnVlIHRocm93cyBwcml2aWxlZ2VkIGFzcGVjdE9mIGFkdmljZWV4ZWN1dGlvbiBwcm9jZWVkIGNmbG93YmVsb3cgY2Zsb3cgaW5pdGlhbGl6YXRpb24gcHJlaW5pdGlhbGl6YXRpb24gc3RhdGljaW5pdGlhbGl6YXRpb24gd2l0aGluY29kZSB0YXJnZXQgd2l0aGluIGV4ZWN1dGlvbiBnZXRXaXRoaW5UeXBlTmFtZSBoYW5kbGVyIHRoaXNKb2luUG9pbnQgdGhpc0pvaW5Qb2ludFN0YXRpY1BhcnQgdGhpc0VuY2xvc2luZ0pvaW5Qb2ludFN0YXRpY1BhcnQgZGVjbGFyZSBwYXJlbnRzIHdhcm5pbmcgZXJyb3Igc29mdCBwcmVjZWRlbmNlIixyPSJnZXQgc2V0IGFyZ3MgY2FsbCI7cmV0dXJue2s6dCxpOi88XC8vLGM6W3tjTjoiamF2YWRvYyIsYjoiL1xcKlxcKiIsZToiXFwqLyIscjowLGM6W3tjTjoiamF2YWRvY3RhZyIsYjoiKF58XFxzKUBbQS1aYS16XSsifV19LGUuQ0xDTSxlLkNCQ00sZS5BU00sZS5RU00se2NOOiJhc3BlY3QiLGJLOiJhc3BlY3QiLGU6L1t7Oz1dLyxlRTohMCxpOi9bOjsiXFtcXV0vLGM6W3tiSzoiZXh0ZW5kcyBpbXBsZW1lbnRzIHBlcnR5cGV3aXRoaW4gcGVydGhpcyBwZXJ0YXJnZXQgcGVyY2Zsb3diZWxvdyBwZXJjZmxvdyBpc3NpbmdsZXRvbiJ9LGUuVVRNLHtiOi9cKFteXCldKi8sZTovWyldKy8sazp0KyIgIityLGVFOiExfV19LHtjTjoiY2xhc3MiLGJLOiJjbGFzcyBpbnRlcmZhY2UiLGU6L1t7Oz1dLyxlRTohMCxyOjAsazoiY2xhc3MgaW50ZXJmYWNlIixpOi9bOiJcW1xdXS8sYzpbe2JLOiJleHRlbmRzIGltcGxlbWVudHMifSxlLlVUTV19LHtiSzoicG9pbnRjdXQgYWZ0ZXIgYmVmb3JlIGFyb3VuZCB0aHJvd2luZyByZXR1cm5pbmciLGU6L1spXS8sZUU6ITEsaTovWyJcW1xdXS8sYzpbe2I6ZS5VSVIrIlxccypcXCgiLHJCOiEwLGM6W2UuVVRNXX1dfSx7YjovWzpdLyxyQjohMCxlOi9beztdLyxyOjAsZUU6ITEsazp0LGk6L1siXFtcXV0vLGM6W3tiOmUuVUlSKyJcXHMqXFwoIixrOnQrIiAiK3J9LGUuUVNNXX0se2JLOiJuZXcgdGhyb3ciLHI6MH0se2NOOiJmdW5jdGlvbiIsYjovXHcrICtcdysoXC4pP1x3K1xzKlwoW15cKV0qXClccyooKHRocm93cylbXHdcc1wsXSspP1tce1w7XS8sckI6ITAsZTovW3s7PV0vLGs6dCxlRTohMCxjOlt7YjplLlVJUisiXFxzKlxcKCIsckI6ITAscjowLGM6W2UuVVRNXX0se2NOOiJwYXJhbXMiLGI6L1woLyxlOi9cKS8scjowLGs6dCxjOltlLkFTTSxlLlFTTSxlLkNOTSxlLkNCQ01dfSxlLkNMQ00sZS5DQkNNXX0sZS5DTk0se2NOOiJhbm5vdGF0aW9uIixiOiJAW0EtWmEtel0rIn1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiYXV0b2hvdGtleSIsZnVuY3Rpb24oZSl7dmFyIHQ9e2NOOiJlc2NhcGUiLGI6ImBbXFxzXFxTXSJ9LHI9e2NOOiJjb21tZW50IixiOiI7IixlOiIkIixyOjB9LGE9W3tjTjoiYnVpbHRfaW4iLGI6IkFfW2EtekEtWjAtOV0rIn0se2NOOiJidWlsdF9pbiIsYks6IkNvbVNwZWMgQ2xpcGJvYXJkIENsaXBib2FyZEFsbCBFcnJvckxldmVsIn1dO3JldHVybntjSTohMCxrOntrZXl3b3JkOiJCcmVhayBDb250aW51ZSBFbHNlIEdvc3ViIElmIExvb3AgUmV0dXJuIFdoaWxlIixsaXRlcmFsOiJBIHRydWUgZmFsc2UgTk9UIEFORCBPUiJ9LGM6YS5jb25jYXQoW3QsZS5pbmhlcml0KGUuUVNNLHtjOlt0XX0pLHIse2NOOiJudW1iZXIiLGI6ZS5OUixyOjB9LHtjTjoidmFyX2V4cGFuZCIsYjoiJSIsZToiJSIsaToiXFxuIixjOlt0XX0se2NOOiJsYWJlbCIsYzpbdF0sdjpbe2I6J15bXlxcbiI7XSs6Oig/IT0pJ30se2I6J15bXlxcbiI7XSs6KD8hPSknLHI6MH1dfSx7YjoiLFxccyosIixyOjEwfV0pfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiYXZyYXNtIixmdW5jdGlvbihlKXtyZXR1cm57Y0k6ITAsbDoiXFwuPyIrZS5JUixrOntrZXl3b3JkOiJhZGMgYWRkIGFkaXcgYW5kIGFuZGkgYXNyIGJjbHIgYmxkIGJyYmMgYnJicyBicmNjIGJyY3MgYnJlYWsgYnJlcSBicmdlIGJyaGMgYnJocyBicmlkIGJyaWUgYnJsbyBicmx0IGJybWkgYnJuZSBicnBsIGJyc2ggYnJ0YyBicnRzIGJydmMgYnJ2cyBic2V0IGJzdCBjYWxsIGNiaSBjYnIgY2xjIGNsaCBjbGkgY2xuIGNsciBjbHMgY2x0IGNsdiBjbHogY29tIGNwIGNwYyBjcGkgY3BzZSBkZWMgZWljYWxsIGVpam1wIGVscG0gZW9yIGZtdWwgZm11bHMgZm11bHN1IGljYWxsIGlqbXAgaW4gaW5jIGptcCBsZCBsZGQgbGRpIGxkcyBscG0gbHNsIGxzciBtb3YgbW92dyBtdWwgbXVscyBtdWxzdSBuZWcgbm9wIG9yIG9yaSBvdXQgcG9wIHB1c2ggcmNhbGwgcmV0IHJldGkgcmptcCByb2wgcm9yIHNiYyBzYnIgc2JyYyBzYnJzIHNlYyBzZWggc2JpIHNiY2kgc2JpYyBzYmlzIHNiaXcgc2VpIHNlbiBzZXIgc2VzIHNldCBzZXYgc2V6IHNsZWVwIHNwbSBzdCBzdGQgc3RzIHN1YiBzdWJpIHN3YXAgdHN0IHdkciIsYnVpbHRfaW46InIwIHIxIHIyIHIzIHI0IHI1IHI2IHI3IHI4IHI5IHIxMCByMTEgcjEyIHIxMyByMTQgcjE1IHIxNiByMTcgcjE4IHIxOSByMjAgcjIxIHIyMiByMjMgcjI0IHIyNSByMjYgcjI3IHIyOCByMjkgcjMwIHIzMSB4fDAgeGggeGwgeXwwIHloIHlsIHp8MCB6aCB6bCB1Y3NyMWMgdWRyMSB1Y3NyMWEgdWNzcjFiIHVicnIxbCB1YnJyMWggdWNzcjBjIHVicnIwaCB0Y2NyM2MgdGNjcjNhIHRjY3IzYiB0Y250M2ggdGNudDNsIG9jcjNhaCBvY3IzYWwgb2NyM2JoIG9jcjNibCBvY3IzY2ggb2NyM2NsIGljcjNoIGljcjNsIGV0aW1zayBldGlmciB0Y2NyMWMgb2NyMWNoIG9jcjFjbCB0d2NyIHR3ZHIgdHdhciB0d3NyIHR3YnIgb3NjY2FsIHhtY3JhIHhtY3JiIGVpY3JhIHNwbWNzciBzcG1jciBwb3J0ZyBkZHJnIHBpbmcgcG9ydGYgZGRyZiBzcmVnIHNwaCBzcGwgeGRpdiByYW1weiBlaWNyYiBlaW1zayBnaW1zayBnaWNyIGVpZnIgZ2lmciB0aW1zayB0aWZyIG1jdWNyIG1jdWNzciB0Y2NyMCB0Y250MCBvY3IwIGFzc3IgdGNjcjFhIHRjY3IxYiB0Y250MWggdGNudDFsIG9jcjFhaCBvY3IxYWwgb2NyMWJoIG9jcjFibCBpY3IxaCBpY3IxbCB0Y2NyMiB0Y250MiBvY3IyIG9jZHIgd2R0Y3Igc2Zpb3IgZWVhcmggZWVhcmwgZWVkciBlZWNyIHBvcnRhIGRkcmEgcGluYSBwb3J0YiBkZHJiIHBpbmIgcG9ydGMgZGRyYyBwaW5jIHBvcnRkIGRkcmQgcGluZCBzcGRyIHNwc3Igc3BjciB1ZHIwIHVjc3IwYSB1Y3NyMGIgdWJycjBsIGFjc3IgYWRtdXggYWRjc3IgYWRjaCBhZGNsIHBvcnRlIGRkcmUgcGluZSBwaW5mIixwcmVwcm9jZXNzb3I6Ii5ieXRlIC5jc2VnIC5kYiAuZGVmIC5kZXZpY2UgLmRzZWcgLmR3IC5lbmRtYWNybyAuZXF1IC5lc2VnIC5leGl0IC5pbmNsdWRlIC5saXN0IC5saXN0bWFjIC5tYWNybyAubm9saXN0IC5vcmcgLnNldCJ9LGM6W2UuQ0JDTSx7Y046ImNvbW1lbnQiLGI6IjsiLGU6IiQiLHI6MH0sZS5DTk0sZS5CTk0se2NOOiJudW1iZXIiLGI6IlxcYihcXCRbYS16QS1aMC05XSt8MG9bMC03XSspIn0sZS5RU00se2NOOiJzdHJpbmciLGI6IiciLGU6IlteXFxcXF0nIixpOiJbXlxcXFxdW14nXSJ9LHtjTjoibGFiZWwiLGI6Il5bQS1aYS16MC05Xy4kXSs6In0se2NOOiJwcmVwcm9jZXNzb3IiLGI6IiMiLGU6IiQifSx7Y046ImxvY2FsdmFycyIsYjoiQFswLTldKyJ9XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImF4YXB0YSIsZnVuY3Rpb24oZSl7cmV0dXJue2s6ImZhbHNlIGludCBhYnN0cmFjdCBwcml2YXRlIGNoYXIgYm9vbGVhbiBzdGF0aWMgbnVsbCBpZiBmb3IgdHJ1ZSB3aGlsZSBsb25nIHRocm93IGZpbmFsbHkgcHJvdGVjdGVkIGZpbmFsIHJldHVybiB2b2lkIGVudW0gZWxzZSBicmVhayBuZXcgY2F0Y2ggYnl0ZSBzdXBlciBjYXNlIHNob3J0IGRlZmF1bHQgZG91YmxlIHB1YmxpYyB0cnkgdGhpcyBzd2l0Y2ggY29udGludWUgcmV2ZXJzZSBmaXJzdGZhc3QgZmlyc3Rvbmx5IGZvcnVwZGF0ZSBub2ZldGNoIHN1bSBhdmcgbWlub2YgbWF4b2YgY291bnQgb3JkZXIgZ3JvdXAgYnkgYXNjIGRlc2MgaW5kZXggaGludCBsaWtlIGRpc3BhbHkgZWRpdCBjbGllbnQgc2VydmVyIHR0c2JlZ2luIHR0c2NvbW1pdCBzdHIgcmVhbCBkYXRlIGNvbnRhaW5lciBhbnl0eXBlIGNvbW1vbiBkaXYgbW9kIixjOltlLkNMQ00sZS5DQkNNLGUuQVNNLGUuUVNNLGUuQ05NLHtjTjoicHJlcHJvY2Vzc29yIixiOiIjIixlOiIkIn0se2NOOiJjbGFzcyIsYks6ImNsYXNzIGludGVyZmFjZSIsZToieyIsZUU6ITAsaToiOiIsYzpbe2JLOiJleHRlbmRzIGltcGxlbWVudHMifSxlLlVUTV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImJhc2giLGZ1bmN0aW9uKGUpe3ZhciB0PXtjTjoidmFyaWFibGUiLHY6W3tiOi9cJFtcd1xkI0BdW1x3XGRfXSovfSx7YjovXCRceyguKj8pXH0vfV19LHI9e2NOOiJzdHJpbmciLGI6LyIvLGU6LyIvLGM6W2UuQkUsdCx7Y046InZhcmlhYmxlIixiOi9cJFwoLyxlOi9cKS8sYzpbZS5CRV19XX0sYT17Y046InN0cmluZyIsYjovJy8sZTovJy99O3JldHVybnthbGlhc2VzOlsic2giLCJ6c2giXSxsOi8tP1thLXpcLl0rLyxrOntrZXl3b3JkOiJpZiB0aGVuIGVsc2UgZWxpZiBmaSBmb3Igd2hpbGUgaW4gZG8gZG9uZSBjYXNlIGVzYWMgZnVuY3Rpb24iLGxpdGVyYWw6InRydWUgZmFsc2UiLGJ1aWx0X2luOiJicmVhayBjZCBjb250aW51ZSBldmFsIGV4ZWMgZXhpdCBleHBvcnQgZ2V0b3B0cyBoYXNoIHB3ZCByZWFkb25seSByZXR1cm4gc2hpZnQgdGVzdCB0aW1lcyB0cmFwIHVtYXNrIHVuc2V0IGFsaWFzIGJpbmQgYnVpbHRpbiBjYWxsZXIgY29tbWFuZCBkZWNsYXJlIGVjaG8gZW5hYmxlIGhlbHAgbGV0IGxvY2FsIGxvZ291dCBtYXBmaWxlIHByaW50ZiByZWFkIHJlYWRhcnJheSBzb3VyY2UgdHlwZSB0eXBlc2V0IHVsaW1pdCB1bmFsaWFzIHNldCBzaG9wdCBhdXRvbG9hZCBiZyBiaW5ka2V5IGJ5ZSBjYXAgY2hkaXIgY2xvbmUgY29tcGFyZ3VtZW50cyBjb21wY2FsbCBjb21wY3RsIGNvbXBkZXNjcmliZSBjb21wZmlsZXMgY29tcGdyb3VwcyBjb21wcXVvdGUgY29tcHRhZ3MgY29tcHRyeSBjb21wdmFsdWVzIGRpcnMgZGlzYWJsZSBkaXNvd24gZWNob3RjIGVjaG90aSBlbXVsYXRlIGZjIGZnIGZsb2F0IGZ1bmN0aW9ucyBnZXRjYXAgZ2V0bG4gaGlzdG9yeSBpbnRlZ2VyIGpvYnMga2lsbCBsaW1pdCBsb2cgbm9nbG9iIHBvcGQgcHJpbnQgcHVzaGQgcHVzaGxuIHJlaGFzaCBzY2hlZCBzZXRjYXAgc2V0b3B0IHN0YXQgc3VzcGVuZCB0dHljdGwgdW5mdW5jdGlvbiB1bmhhc2ggdW5saW1pdCB1bnNldG9wdCB2YXJlZCB3YWl0IHdoZW5jZSB3aGVyZSB3aGljaCB6Y29tcGlsZSB6Zm9ybWF0IHpmdHAgemxlIHptb2Rsb2FkIHpwYXJzZW9wdHMgenByb2YgenB0eSB6cmVnZXhwYXJzZSB6c29ja2V0IHpzdHlsZSB6dGNwIixvcGVyYXRvcjoiLW5lIC1lcSAtbHQgLWd0IC1mIC1kIC1lIC1zIC1sIC1hIn0sYzpbe2NOOiJzaGViYW5nIixiOi9eIyFbXlxuXStzaFxzKiQvLHI6MTB9LHtjTjoiZnVuY3Rpb24iLGI6L1x3W1x3XGRfXSpccypcKFxzKlwpXHMqXHsvLHJCOiEwLGM6W2UuaW5oZXJpdChlLlRNLHtiOi9cd1tcd1xkX10qL30pXSxyOjB9LGUuSENNLGUuTk0scixhLHRdfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiYnJhaW5mdWNrIixmdW5jdGlvbigpe3ZhciBlPXtjTjoibGl0ZXJhbCIsYjoiW1xcK1xcLV0iLHI6MH07cmV0dXJue2FsaWFzZXM6WyJiZiJdLGM6W3tjTjoiY29tbWVudCIsYjoiW15cXFtcXF1cXC4sXFwrXFwtPD4gXHJcbl0iLHJFOiEwLGU6IltcXFtcXF1cXC4sXFwrXFwtPD4gXHJcbl0iLHI6MH0se2NOOiJ0aXRsZSIsYjoiW1xcW1xcXV0iLHI6MH0se2NOOiJzdHJpbmciLGI6IltcXC4sXSIscjowfSx7YjovXCtcK3xcLVwtLyxyQjohMCxjOltlXX0sZV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJjYXBucHJvdG8iLGZ1bmN0aW9uKGUpe3JldHVybnthbGlhc2VzOlsiY2FwbnAiXSxrOntrZXl3b3JkOiJzdHJ1Y3QgZW51bSBpbnRlcmZhY2UgdW5pb24gZ3JvdXAgaW1wb3J0IHVzaW5nIGNvbnN0IGFubm90YXRpb24gZXh0ZW5kcyBpbiBvZiBvbiBhcyB3aXRoIGZyb20gZml4ZWQiLGJ1aWx0X2luOiJWb2lkIEJvb2wgSW50OCBJbnQxNiBJbnQzMiBJbnQ2NCBVSW50OCBVSW50MTYgVUludDMyIFVJbnQ2NCBGbG9hdDMyIEZsb2F0NjQgVGV4dCBEYXRhIEFueVBvaW50ZXIgQW55U3RydWN0IENhcGFiaWxpdHkgTGlzdCIsbGl0ZXJhbDoidHJ1ZSBmYWxzZSJ9LGM6W2UuUVNNLGUuTk0sZS5IQ00se2NOOiJzaGViYW5nIixiOi9AMHhbXHdcZF17MTZ9Oy8saTovXG4vfSx7Y046Im51bWJlciIsYjovQFxkK1xiL30se2NOOiJjbGFzcyIsYks6InN0cnVjdCBlbnVtIixlOi9cey8saTovXG4vLGM6W2UuaW5oZXJpdChlLlRNLHtzdGFydHM6e2VXOiEwLGVFOiEwfX0pXX0se2NOOiJjbGFzcyIsYks6ImludGVyZmFjZSIsZTovXHsvLGk6L1xuLyxjOltlLmluaGVyaXQoZS5UTSx7c3RhcnRzOntlVzohMCxlRTohMH19KV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImNsb2p1cmUiLGZ1bmN0aW9uKGUpe3ZhciB0PXtidWlsdF9pbjoiZGVmIGNvbmQgYXBwbHkgaWYtbm90IGlmLWxldCBpZiBub3Qgbm90PSA9IDwgPiA8PSA+PSA9PSArIC8gKiAtIHJlbSBxdW90IG5lZz8gcG9zPyBkZWxheT8gc3ltYm9sPyBrZXl3b3JkPyB0cnVlPyBmYWxzZT8gaW50ZWdlcj8gZW1wdHk/IGNvbGw/IGxpc3Q/IHNldD8gaWZuPyBmbj8gYXNzb2NpYXRpdmU/IHNlcXVlbnRpYWw/IHNvcnRlZD8gY291bnRlZD8gcmV2ZXJzaWJsZT8gbnVtYmVyPyBkZWNpbWFsPyBjbGFzcz8gZGlzdGluY3Q/IGlzYT8gZmxvYXQ/IHJhdGlvbmFsPyByZWR1Y2VkPyByYXRpbz8gb2RkPyBldmVuPyBjaGFyPyBzZXE/IHZlY3Rvcj8gc3RyaW5nPyBtYXA/IG5pbD8gY29udGFpbnM/IHplcm8/IGluc3RhbmNlPyBub3QtZXZlcnk/IG5vdC1hbnk/IGxpYnNwZWM/IC0+IC0+PiAuLiAuIGluYyBjb21wYXJlIGRvIGRvdGltZXMgbWFwY2F0IHRha2UgcmVtb3ZlIHRha2Utd2hpbGUgZHJvcCBsZXRmbiBkcm9wLWxhc3QgdGFrZS1sYXN0IGRyb3Atd2hpbGUgd2hpbGUgaW50ZXJuIGNvbmRwIGNhc2UgcmVkdWNlZCBjeWNsZSBzcGxpdC1hdCBzcGxpdC13aXRoIHJlcGVhdCByZXBsaWNhdGUgaXRlcmF0ZSByYW5nZSBtZXJnZSB6aXBtYXAgZGVjbGFyZSBsaW5lLXNlcSBzb3J0IGNvbXBhcmF0b3Igc29ydC1ieSBkb3J1biBkb2FsbCBudGhuZXh0IG50aHJlc3QgcGFydGl0aW9uIGV2YWwgZG9zZXEgYXdhaXQgYXdhaXQtZm9yIGxldCBhZ2VudCBhdG9tIHNlbmQgc2VuZC1vZmYgcmVsZWFzZS1wZW5kaW5nLXNlbmRzIGFkZC13YXRjaCBtYXB2IGZpbHRlcnYgcmVtb3ZlLXdhdGNoIGFnZW50LWVycm9yIHJlc3RhcnQtYWdlbnQgc2V0LWVycm9yLWhhbmRsZXIgZXJyb3ItaGFuZGxlciBzZXQtZXJyb3ItbW9kZSEgZXJyb3ItbW9kZSBzaHV0ZG93bi1hZ2VudHMgcXVvdGUgdmFyIGZuIGxvb3AgcmVjdXIgdGhyb3cgdHJ5IG1vbml0b3ItZW50ZXIgbW9uaXRvci1leGl0IGRlZm1hY3JvIGRlZm4gZGVmbi0gbWFjcm9leHBhbmQgbWFjcm9leHBhbmQtMSBmb3IgZG9zeW5jIGFuZCBvciB3aGVuIHdoZW4tbm90IHdoZW4tbGV0IGNvbXAganV4dCBwYXJ0aWFsIHNlcXVlbmNlIG1lbW9pemUgY29uc3RhbnRseSBjb21wbGVtZW50IGlkZW50aXR5IGFzc2VydCBwZWVrIHBvcCBkb3RvIHByb3h5IGRlZnN0cnVjdCBmaXJzdCByZXN0IGNvbnMgZGVmcHJvdG9jb2wgY2FzdCBjb2xsIGRlZnR5cGUgZGVmcmVjb3JkIGxhc3QgYnV0bGFzdCBzaWdzIHJlaWZ5IHNlY29uZCBmZmlyc3QgZm5leHQgbmZpcnN0IG5uZXh0IGRlZm11bHRpIGRlZm1ldGhvZCBtZXRhIHdpdGgtbWV0YSBucyBpbi1ucyBjcmVhdGUtbnMgaW1wb3J0IHJlZmVyIGtleXMgc2VsZWN0LWtleXMgdmFscyBrZXkgdmFsIHJzZXEgbmFtZSBuYW1lc3BhY2UgcHJvbWlzZSBpbnRvIHRyYW5zaWVudCBwZXJzaXN0ZW50ISBjb25qISBhc3NvYyEgZGlzc29jISBwb3AhIGRpc2ohIHVzZSBjbGFzcyB0eXBlIG51bSBmbG9hdCBkb3VibGUgc2hvcnQgYnl0ZSBib29sZWFuIGJpZ2ludCBiaWdpbnRlZ2VyIGJpZ2RlYyBwcmludC1tZXRob2QgcHJpbnQtZHVwIHRocm93LWlmIHByaW50ZiBmb3JtYXQgbG9hZCBjb21waWxlIGdldC1pbiB1cGRhdGUtaW4gcHIgcHItb24gbmV3bGluZSBmbHVzaCByZWFkIHNsdXJwIHJlYWQtbGluZSBzdWJ2ZWMgd2l0aC1vcGVuIG1lbWZuIHRpbWUgcmUtZmluZCByZS1ncm91cHMgcmFuZC1pbnQgcmFuZCBtb2QgbG9ja2luZyBhc3NlcnQtdmFsaWQtZmRlY2wgYWxpYXMgcmVzb2x2ZSByZWYgZGVyZWYgcmVmc2V0IHN3YXAhIHJlc2V0ISBzZXQtdmFsaWRhdG9yISBjb21wYXJlLWFuZC1zZXQhIGFsdGVyLW1ldGEhIHJlc2V0LW1ldGEhIGNvbW11dGUgZ2V0LXZhbGlkYXRvciBhbHRlciByZWYtc2V0IHJlZi1oaXN0b3J5LWNvdW50IHJlZi1taW4taGlzdG9yeSByZWYtbWF4LWhpc3RvcnkgZW5zdXJlIHN5bmMgaW8hIG5ldyBuZXh0IGNvbmogc2V0ISB0by1hcnJheSBmdXR1cmUgZnV0dXJlLWNhbGwgaW50by1hcnJheSBhc2V0IGdlbi1jbGFzcyByZWR1Y2UgbWFwIGZpbHRlciBmaW5kIGVtcHR5IGhhc2gtbWFwIGhhc2gtc2V0IHNvcnRlZC1tYXAgc29ydGVkLW1hcC1ieSBzb3J0ZWQtc2V0IHNvcnRlZC1zZXQtYnkgdmVjIHZlY3RvciBzZXEgZmxhdHRlbiByZXZlcnNlIGFzc29jIGRpc3NvYyBsaXN0IGRpc2ogZ2V0IHVuaW9uIGRpZmZlcmVuY2UgaW50ZXJzZWN0aW9uIGV4dGVuZCBleHRlbmQtdHlwZSBleHRlbmQtcHJvdG9jb2wgaW50IG50aCBkZWxheSBjb3VudCBjb25jYXQgY2h1bmsgY2h1bmstYnVmZmVyIGNodW5rLWFwcGVuZCBjaHVuay1maXJzdCBjaHVuay1yZXN0IG1heCBtaW4gZGVjIHVuY2hlY2tlZC1pbmMtaW50IHVuY2hlY2tlZC1pbmMgdW5jaGVja2VkLWRlYy1pbmMgdW5jaGVja2VkLWRlYyB1bmNoZWNrZWQtbmVnYXRlIHVuY2hlY2tlZC1hZGQtaW50IHVuY2hlY2tlZC1hZGQgdW5jaGVja2VkLXN1YnRyYWN0LWludCB1bmNoZWNrZWQtc3VidHJhY3QgY2h1bmstbmV4dCBjaHVuay1jb25zIGNodW5rZWQtc2VxPyBwcm4gdmFyeS1tZXRhIGxhenktc2VxIHNwcmVhZCBsaXN0KiBzdHIgZmluZC1rZXl3b3JkIGtleXdvcmQgc3ltYm9sIGdlbnN5bSBmb3JjZSByYXRpb25hbGl6ZSJ9LHI9ImEtekEtWl9cXC0hLj8rKj08PiYjJyIsYT0iWyIrcisiXVsiK3IrIjAtOS87Ol0qIixpPSJbLStdP1xcZCsoXFwuXFxkKyk/IixuPXtiOmEscjowfSxvPXtjTjoibnVtYmVyIixiOmkscjowfSxzPWUuaW5oZXJpdChlLlFTTSx7aTpudWxsfSksbD17Y046ImNvbW1lbnQiLGI6IjsiLGU6IiQiLHI6MH0sYz17Y046ImxpdGVyYWwiLGI6L1xiKHRydWV8ZmFsc2V8bmlsKVxiL30scD17Y046ImNvbGxlY3Rpb24iLGI6IltcXFtcXHtdIixlOiJbXFxdXFx9XSJ9LGQ9e2NOOiJjb21tZW50IixiOiJcXF4iK2F9LHU9e2NOOiJjb21tZW50IixiOiJcXF5cXHsiLGU6IlxcfSJ9LG09e2NOOiJhdHRyaWJ1dGUiLGI6Ils6XSIrYX0sYj17Y046Imxpc3QiLGI6IlxcKCIsZToiXFwpIn0sZz17ZVc6ITAscjowfSxmPXtrOnQsbDphLGNOOiJrZXl3b3JkIixiOmEsc3RhcnRzOmd9LHY9W2IscyxkLHUsbCxtLHAsbyxjLG5dO3JldHVybiBiLmM9W3tjTjoiY29tbWVudCIsYjoiY29tbWVudCJ9LGYsZ10sZy5jPXYscC5jPXYse2FsaWFzZXM6WyJjbGoiXSxpOi9cUy8sYzpbYixzLGQsdSxsLG0scCxvLGNdfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiY2xvanVyZS1yZXBsIixmdW5jdGlvbigpe3JldHVybntjOlt7Y046InByb21wdCIsYjovXihbXHcuLV0rfFxzKiNfKT0+LyxzdGFydHM6e2U6LyQvLHNMOiJjbG9qdXJlIixzdWJMYW5ndWFnZU1vZGU6ImNvbnRpbnVvdXMifX1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiY21ha2UiLGZ1bmN0aW9uKGUpe3JldHVybnthbGlhc2VzOlsiY21ha2UuaW4iXSxjSTohMCxrOntrZXl3b3JkOiJhZGRfY3VzdG9tX2NvbW1hbmQgYWRkX2N1c3RvbV90YXJnZXQgYWRkX2RlZmluaXRpb25zIGFkZF9kZXBlbmRlbmNpZXMgYWRkX2V4ZWN1dGFibGUgYWRkX2xpYnJhcnkgYWRkX3N1YmRpcmVjdG9yeSBhZGRfdGVzdCBhdXhfc291cmNlX2RpcmVjdG9yeSBicmVhayBidWlsZF9jb21tYW5kIGNtYWtlX21pbmltdW1fcmVxdWlyZWQgY21ha2VfcG9saWN5IGNvbmZpZ3VyZV9maWxlIGNyZWF0ZV90ZXN0X3NvdXJjZWxpc3QgZGVmaW5lX3Byb3BlcnR5IGVsc2UgZWxzZWlmIGVuYWJsZV9sYW5ndWFnZSBlbmFibGVfdGVzdGluZyBlbmRmb3JlYWNoIGVuZGZ1bmN0aW9uIGVuZGlmIGVuZG1hY3JvIGVuZHdoaWxlIGV4ZWN1dGVfcHJvY2VzcyBleHBvcnQgZmluZF9maWxlIGZpbmRfbGlicmFyeSBmaW5kX3BhY2thZ2UgZmluZF9wYXRoIGZpbmRfcHJvZ3JhbSBmbHRrX3dyYXBfdWkgZm9yZWFjaCBmdW5jdGlvbiBnZXRfY21ha2VfcHJvcGVydHkgZ2V0X2RpcmVjdG9yeV9wcm9wZXJ0eSBnZXRfZmlsZW5hbWVfY29tcG9uZW50IGdldF9wcm9wZXJ0eSBnZXRfc291cmNlX2ZpbGVfcHJvcGVydHkgZ2V0X3RhcmdldF9wcm9wZXJ0eSBnZXRfdGVzdF9wcm9wZXJ0eSBpZiBpbmNsdWRlIGluY2x1ZGVfZGlyZWN0b3JpZXMgaW5jbHVkZV9leHRlcm5hbF9tc3Byb2plY3QgaW5jbHVkZV9yZWd1bGFyX2V4cHJlc3Npb24gaW5zdGFsbCBsaW5rX2RpcmVjdG9yaWVzIGxvYWRfY2FjaGUgbG9hZF9jb21tYW5kIG1hY3JvIG1hcmtfYXNfYWR2YW5jZWQgbWVzc2FnZSBvcHRpb24gb3V0cHV0X3JlcXVpcmVkX2ZpbGVzIHByb2plY3QgcXRfd3JhcF9jcHAgcXRfd3JhcF91aSByZW1vdmVfZGVmaW5pdGlvbnMgcmV0dXJuIHNlcGFyYXRlX2FyZ3VtZW50cyBzZXQgc2V0X2RpcmVjdG9yeV9wcm9wZXJ0aWVzIHNldF9wcm9wZXJ0eSBzZXRfc291cmNlX2ZpbGVzX3Byb3BlcnRpZXMgc2V0X3RhcmdldF9wcm9wZXJ0aWVzIHNldF90ZXN0c19wcm9wZXJ0aWVzIHNpdGVfbmFtZSBzb3VyY2VfZ3JvdXAgc3RyaW5nIHRhcmdldF9saW5rX2xpYnJhcmllcyB0cnlfY29tcGlsZSB0cnlfcnVuIHVuc2V0IHZhcmlhYmxlX3dhdGNoIHdoaWxlIGJ1aWxkX25hbWUgZXhlY19wcm9ncmFtIGV4cG9ydF9saWJyYXJ5X2RlcGVuZGVuY2llcyBpbnN0YWxsX2ZpbGVzIGluc3RhbGxfcHJvZ3JhbXMgaW5zdGFsbF90YXJnZXRzIGxpbmtfbGlicmFyaWVzIG1ha2VfZGlyZWN0b3J5IHJlbW92ZSBzdWJkaXJfZGVwZW5kcyBzdWJkaXJzIHVzZV9tYW5nbGVkX21lc2EgdXRpbGl0eV9zb3VyY2UgdmFyaWFibGVfcmVxdWlyZXMgd3JpdGVfZmlsZSBxdDVfdXNlX21vZHVsZXMgcXQ1X3VzZV9wYWNrYWdlIHF0NV93cmFwX2NwcCBvbiBvZmYgdHJ1ZSBmYWxzZSBhbmQgb3IiLG9wZXJhdG9yOiJlcXVhbCBsZXNzIGdyZWF0ZXIgc3RybGVzcyBzdHJncmVhdGVyIHN0cmVxdWFsIG1hdGNoZXMifSxjOlt7Y046ImVudnZhciIsYjoiXFwkeyIsZToifSJ9LGUuSENNLGUuUVNNLGUuTk1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiY29mZmVlc2NyaXB0IixmdW5jdGlvbihlKXt2YXIgdD17a2V5d29yZDoiaW4gaWYgZm9yIHdoaWxlIGZpbmFsbHkgbmV3IGRvIHJldHVybiBlbHNlIGJyZWFrIGNhdGNoIGluc3RhbmNlb2YgdGhyb3cgdHJ5IHRoaXMgc3dpdGNoIGNvbnRpbnVlIHR5cGVvZiBkZWxldGUgZGVidWdnZXIgc3VwZXIgdGhlbiB1bmxlc3MgdW50aWwgbG9vcCBvZiBieSB3aGVuIGFuZCBvciBpcyBpc250IG5vdCIsbGl0ZXJhbDoidHJ1ZSBmYWxzZSBudWxsIHVuZGVmaW5lZCB5ZXMgbm8gb24gb2ZmIixyZXNlcnZlZDoiY2FzZSBkZWZhdWx0IGZ1bmN0aW9uIHZhciB2b2lkIHdpdGggY29uc3QgbGV0IGVudW0gZXhwb3J0IGltcG9ydCBuYXRpdmUgX19oYXNQcm9wIF9fZXh0ZW5kcyBfX3NsaWNlIF9fYmluZCBfX2luZGV4T2YiLGJ1aWx0X2luOiJucG0gcmVxdWlyZSBjb25zb2xlIHByaW50IG1vZHVsZSBnbG9iYWwgd2luZG93IGRvY3VtZW50In0scj0iW0EtWmEteiRfXVswLTlBLVphLXokX10qIixhPXtjTjoic3Vic3QiLGI6LyNcey8sZTovfS8sazp0fSxpPVtlLkJOTSxlLmluaGVyaXQoZS5DTk0se3N0YXJ0czp7ZToiKFxccyovKT8iLHI6MH19KSx7Y046InN0cmluZyIsdjpbe2I6LycnJy8sZTovJycnLyxjOltlLkJFXX0se2I6LycvLGU6LycvLGM6W2UuQkVdfSx7YjovIiIiLyxlOi8iIiIvLGM6W2UuQkUsYV19LHtiOi8iLyxlOi8iLyxjOltlLkJFLGFdfV19LHtjTjoicmVnZXhwIix2Olt7YjoiLy8vIixlOiIvLy8iLGM6W2EsZS5IQ01dfSx7YjoiLy9bZ2ltXSoiLHI6MH0se2I6L1wvKD8hWyAqXSkoXFxcL3wuKSo/XC9bZ2ltXSooPz1cV3wkKS99XX0se2NOOiJwcm9wZXJ0eSIsYjoiQCIrcn0se2I6ImAiLGU6ImAiLGVCOiEwLGVFOiEwLHNMOiJqYXZhc2NyaXB0In1dO2EuYz1pO3ZhciBuPWUuaW5oZXJpdChlLlRNLHtiOnJ9KSxvPSIoXFwoLipcXCkpP1xccypcXEJbLT1dPiIscz17Y046InBhcmFtcyIsYjoiXFwoW15cXChdIixyQjohMCxjOlt7YjovXCgvLGU6L1wpLyxrOnQsYzpbInNlbGYiXS5jb25jYXQoaSl9XX07cmV0dXJue2FsaWFzZXM6WyJjb2ZmZWUiLCJjc29uIiwiaWNlZCJdLGs6dCxpOi9cL1wqLyxjOmkuY29uY2F0KFt7Y046ImNvbW1lbnQiLGI6IiMjIyIsZToiIyMjIixjOltlLlBXTV19LGUuSENNLHtjTjoiZnVuY3Rpb24iLGI6Il5cXHMqIityKyJcXHMqPVxccyoiK28sZToiWy09XT4iLHJCOiEwLGM6W24sc119LHtiOi9bOlwoLD1dXHMqLyxyOjAsYzpbe2NOOiJmdW5jdGlvbiIsYjpvLGU6IlstPV0+IixyQjohMCxjOltzXX1dfSx7Y046ImNsYXNzIixiSzoiY2xhc3MiLGU6IiQiLGk6L1s6PSJcW1xdXS8sYzpbe2JLOiJleHRlbmRzIixlVzohMCxpOi9bOj0iXFtcXV0vLGM6W25dfSxuXX0se2NOOiJhdHRyaWJ1dGUiLGI6cisiOiIsZToiOiIsckI6ITAsckU6ITAscjowfV0pfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiY3BwIixmdW5jdGlvbihlKXt2YXIgdD17a2V5d29yZDoiZmFsc2UgaW50IGZsb2F0IHdoaWxlIHByaXZhdGUgY2hhciBjYXRjaCBleHBvcnQgdmlydHVhbCBvcGVyYXRvciBzaXplb2YgZHluYW1pY19jYXN0fDEwIHR5cGVkZWYgY29uc3RfY2FzdHwxMCBjb25zdCBzdHJ1Y3QgZm9yIHN0YXRpY19jYXN0fDEwIHVuaW9uIG5hbWVzcGFjZSB1bnNpZ25lZCBsb25nIHZvbGF0aWxlIHN0YXRpYyBwcm90ZWN0ZWQgYm9vbCB0ZW1wbGF0ZSBtdXRhYmxlIGlmIHB1YmxpYyBmcmllbmQgZG8gZ290byBhdXRvIHZvaWQgZW51bSBlbHNlIGJyZWFrIGV4dGVybiB1c2luZyB0cnVlIGNsYXNzIGFzbSBjYXNlIHR5cGVpZCBzaG9ydCByZWludGVycHJldF9jYXN0fDEwIGRlZmF1bHQgZG91YmxlIHJlZ2lzdGVyIGV4cGxpY2l0IHNpZ25lZCB0eXBlbmFtZSB0cnkgdGhpcyBzd2l0Y2ggY29udGludWUgd2NoYXJfdCBpbmxpbmUgZGVsZXRlIGFsaWdub2YgY2hhcjE2X3QgY2hhcjMyX3QgY29uc3RleHByIGRlY2x0eXBlIG5vZXhjZXB0IG51bGxwdHIgc3RhdGljX2Fzc2VydCB0aHJlYWRfbG9jYWwgcmVzdHJpY3QgX0Jvb2wgY29tcGxleCBfQ29tcGxleCBfSW1hZ2luYXJ5aW50bWF4X3QgdWludG1heF90IGludDhfdCB1aW50OF90IGludDE2X3QgdWludDE2X3QgaW50MzJfdCB1aW50MzJfdCAgaW50NjRfdCB1aW50NjRfdGludF9sZWFzdDhfdCB1aW50X2xlYXN0OF90IGludF9sZWFzdDE2X3QgdWludF9sZWFzdDE2X3QgaW50X2xlYXN0MzJfdCB1aW50X2xlYXN0MzJfdGludF9sZWFzdDY0X3QgdWludF9sZWFzdDY0X3QgaW50X2Zhc3Q4X3QgdWludF9mYXN0OF90IGludF9mYXN0MTZfdCB1aW50X2Zhc3QxNl90IGludF9mYXN0MzJfdHVpbnRfZmFzdDMyX3QgaW50X2Zhc3Q2NF90IHVpbnRfZmFzdDY0X3QgaW50cHRyX3QgdWludHB0cl90IGF0b21pY19ib29sIGF0b21pY19jaGFyIGF0b21pY19zY2hhcmF0b21pY191Y2hhciBhdG9taWNfc2hvcnQgYXRvbWljX3VzaG9ydCBhdG9taWNfaW50IGF0b21pY191aW50IGF0b21pY19sb25nIGF0b21pY191bG9uZyBhdG9taWNfbGxvbmdhdG9taWNfdWxsb25nIGF0b21pY193Y2hhcl90IGF0b21pY19jaGFyMTZfdCBhdG9taWNfY2hhcjMyX3QgYXRvbWljX2ludG1heF90IGF0b21pY191aW50bWF4X3RhdG9taWNfaW50cHRyX3QgYXRvbWljX3VpbnRwdHJfdCBhdG9taWNfc2l6ZV90IGF0b21pY19wdHJkaWZmX3QgYXRvbWljX2ludF9sZWFzdDhfdCBhdG9taWNfaW50X2xlYXN0MTZfdGF0b21pY19pbnRfbGVhc3QzMl90IGF0b21pY19pbnRfbGVhc3Q2NF90IGF0b21pY191aW50X2xlYXN0OF90IGF0b21pY191aW50X2xlYXN0MTZfdCBhdG9taWNfdWludF9sZWFzdDMyX3RhdG9taWNfdWludF9sZWFzdDY0X3QgYXRvbWljX2ludF9mYXN0OF90IGF0b21pY19pbnRfZmFzdDE2X3QgYXRvbWljX2ludF9mYXN0MzJfdCBhdG9taWNfaW50X2Zhc3Q2NF90YXRvbWljX3VpbnRfZmFzdDhfdCBhdG9taWNfdWludF9mYXN0MTZfdCBhdG9taWNfdWludF9mYXN0MzJfdCBhdG9taWNfdWludF9mYXN0NjRfdCIsYnVpbHRfaW46InN0ZCBzdHJpbmcgY2luIGNvdXQgY2VyciBjbG9nIHN0cmluZ3N0cmVhbSBpc3RyaW5nc3RyZWFtIG9zdHJpbmdzdHJlYW0gYXV0b19wdHIgZGVxdWUgbGlzdCBxdWV1ZSBzdGFjayB2ZWN0b3IgbWFwIHNldCBiaXRzZXQgbXVsdGlzZXQgbXVsdGltYXAgdW5vcmRlcmVkX3NldCB1bm9yZGVyZWRfbWFwIHVub3JkZXJlZF9tdWx0aXNldCB1bm9yZGVyZWRfbXVsdGltYXAgYXJyYXkgc2hhcmVkX3B0ciBhYm9ydCBhYnMgYWNvcyBhc2luIGF0YW4yIGF0YW4gY2FsbG9jIGNlaWwgY29zaCBjb3MgZXhpdCBleHAgZmFicyBmbG9vciBmbW9kIGZwcmludGYgZnB1dHMgZnJlZSBmcmV4cCBmc2NhbmYgaXNhbG51bSBpc2FscGhhIGlzY250cmwgaXNkaWdpdCBpc2dyYXBoIGlzbG93ZXIgaXNwcmludCBpc3B1bmN0IGlzc3BhY2UgaXN1cHBlciBpc3hkaWdpdCB0b2xvd2VyIHRvdXBwZXIgbGFicyBsZGV4cCBsb2cxMCBsb2cgbWFsbG9jIG1lbWNociBtZW1jbXAgbWVtY3B5IG1lbXNldCBtb2RmIHBvdyBwcmludGYgcHV0Y2hhciBwdXRzIHNjYW5mIHNpbmggc2luIHNucHJpbnRmIHNwcmludGYgc3FydCBzc2NhbmYgc3RyY2F0IHN0cmNociBzdHJjbXAgc3RyY3B5IHN0cmNzcG4gc3RybGVuIHN0cm5jYXQgc3RybmNtcCBzdHJuY3B5IHN0cnBicmsgc3RycmNociBzdHJzcG4gc3Ryc3RyIHRhbmggdGFuIHZmcHJpbnRmIHZwcmludGYgdnNwcmludGYifTtyZXR1cm57YWxpYXNlczpbImMiLCJoIiwiYysrIiwiaCsrIl0sazp0LGk6IjwvIixjOltlLkNMQ00sZS5DQkNNLGUuUVNNLHtjTjoic3RyaW5nIixiOiInXFxcXD8uIixlOiInIixpOiIuIn0se2NOOiJudW1iZXIiLGI6IlxcYihcXGQrKFxcLlxcZCopP3xcXC5cXGQrKSh1fFV8bHxMfHVsfFVMfGZ8RikifSxlLkNOTSx7Y046InByZXByb2Nlc3NvciIsYjoiIyIsZToiJCIsazoiaWYgZWxzZSBlbGlmIGVuZGlmIGRlZmluZSB1bmRlZiB3YXJuaW5nIGVycm9yIGxpbmUgcHJhZ21hIixjOlt7YjonaW5jbHVkZVxccypbPCJdJyxlOidbPiJdJyxrOiJpbmNsdWRlIixpOiJcXG4ifSxlLkNMQ01dfSx7Y046InN0bF9jb250YWluZXIiLGI6IlxcYihkZXF1ZXxsaXN0fHF1ZXVlfHN0YWNrfHZlY3RvcnxtYXB8c2V0fGJpdHNldHxtdWx0aXNldHxtdWx0aW1hcHx1bm9yZGVyZWRfbWFwfHVub3JkZXJlZF9zZXR8dW5vcmRlcmVkX211bHRpc2V0fHVub3JkZXJlZF9tdWx0aW1hcHxhcnJheSlcXHMqPCIsZToiPiIsazp0LGM6WyJzZWxmIl19LHtiOmUuSVIrIjo6In0se2JLOiJuZXcgdGhyb3cgcmV0dXJuIixyOjB9LHtjTjoiZnVuY3Rpb24iLGI6IigiK2UuSVIrIlxccyspKyIrZS5JUisiXFxzKlxcKCIsckI6ITAsZTovW3s7PV0vLGVFOiEwLGs6dCxjOlt7YjplLklSKyJcXHMqXFwoIixyQjohMCxjOltlLlRNXSxyOjB9LHtjTjoicGFyYW1zIixiOi9cKC8sZTovXCkvLGs6dCxyOjAsYzpbZS5DQkNNXX0sZS5DTENNLGUuQ0JDTV19XX0KfSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJjcyIsZnVuY3Rpb24oZSl7dmFyIHQ9ImFic3RyYWN0IGFzIGJhc2UgYm9vbCBicmVhayBieXRlIGNhc2UgY2F0Y2ggY2hhciBjaGVja2VkIGNvbnN0IGNvbnRpbnVlIGRlY2ltYWwgZGVmYXVsdCBkZWxlZ2F0ZSBkbyBkb3VibGUgZWxzZSBlbnVtIGV2ZW50IGV4cGxpY2l0IGV4dGVybiBmYWxzZSBmaW5hbGx5IGZpeGVkIGZsb2F0IGZvciBmb3JlYWNoIGdvdG8gaWYgaW1wbGljaXQgaW4gaW50IGludGVyZmFjZSBpbnRlcm5hbCBpcyBsb2NrIGxvbmcgbnVsbCBvYmplY3Qgb3BlcmF0b3Igb3V0IG92ZXJyaWRlIHBhcmFtcyBwcml2YXRlIHByb3RlY3RlZCBwdWJsaWMgcmVhZG9ubHkgcmVmIHNieXRlIHNlYWxlZCBzaG9ydCBzaXplb2Ygc3RhY2thbGxvYyBzdGF0aWMgc3RyaW5nIHN0cnVjdCBzd2l0Y2ggdGhpcyB0cnVlIHRyeSB0eXBlb2YgdWludCB1bG9uZyB1bmNoZWNrZWQgdW5zYWZlIHVzaG9ydCB1c2luZyB2aXJ0dWFsIHZvbGF0aWxlIHZvaWQgd2hpbGUgYXN5bmMgcHJvdGVjdGVkIHB1YmxpYyBwcml2YXRlIGludGVybmFsIGFzY2VuZGluZyBkZXNjZW5kaW5nIGZyb20gZ2V0IGdyb3VwIGludG8gam9pbiBsZXQgb3JkZXJieSBwYXJ0aWFsIHNlbGVjdCBzZXQgdmFsdWUgdmFyIHdoZXJlIHlpZWxkIixyPWUuSVIrIig8IitlLklSKyI+KT8iO3JldHVybnthbGlhc2VzOlsiY3NoYXJwIl0sazp0LGk6Lzo6LyxjOlt7Y046ImNvbW1lbnQiLGI6Ii8vLyIsZToiJCIsckI6ITAsYzpbe2NOOiJ4bWxEb2NUYWciLHY6W3tiOiIvLy8iLHI6MH0se2I6IjwhLS18LS0+In0se2I6IjwvPyIsZToiPiJ9XX1dfSxlLkNMQ00sZS5DQkNNLHtjTjoicHJlcHJvY2Vzc29yIixiOiIjIixlOiIkIixrOiJpZiBlbHNlIGVsaWYgZW5kaWYgZGVmaW5lIHVuZGVmIHdhcm5pbmcgZXJyb3IgbGluZSByZWdpb24gZW5kcmVnaW9uIHByYWdtYSBjaGVja3N1bSJ9LHtjTjoic3RyaW5nIixiOidAIicsZTonIicsYzpbe2I6JyIiJ31dfSxlLkFTTSxlLlFTTSxlLkNOTSx7Yks6ImNsYXNzIG5hbWVzcGFjZSBpbnRlcmZhY2UiLGU6L1t7Oz1dLyxpOi9bXlxzOl0vLGM6W2UuVE0sZS5DTENNLGUuQ0JDTV19LHtiSzoibmV3IHJldHVybiB0aHJvdyBhd2FpdCIscjowfSx7Y046ImZ1bmN0aW9uIixiOiIoIityKyJcXHMrKSsiK2UuSVIrIlxccypcXCgiLHJCOiEwLGU6L1t7Oz1dLyxlRTohMCxrOnQsYzpbe2I6ZS5JUisiXFxzKlxcKCIsckI6ITAsYzpbZS5UTV0scjowfSx7Y046InBhcmFtcyIsYjovXCgvLGU6L1wpLyxrOnQscjowLGM6W2UuQVNNLGUuUVNNLGUuQ05NLGUuQ0JDTV19LGUuQ0xDTSxlLkNCQ01dfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJjc3MiLGZ1bmN0aW9uKGUpe3ZhciB0PSJbYS16QS1aLV1bYS16QS1aMC05Xy1dKiIscj17Y046ImZ1bmN0aW9uIixiOnQrIlxcKCIsckI6ITAsZUU6ITAsZToiXFwoIn07cmV0dXJue2NJOiEwLGk6Ils9L3wnXSIsYzpbZS5DQkNNLHtjTjoiaWQiLGI6IlxcI1tBLVphLXowLTlfLV0rIn0se2NOOiJjbGFzcyIsYjoiXFwuW0EtWmEtejAtOV8tXSsiLHI6MH0se2NOOiJhdHRyX3NlbGVjdG9yIixiOiJcXFsiLGU6IlxcXSIsaToiJCJ9LHtjTjoicHNldWRvIixiOiI6KDopP1thLXpBLVowLTlcXF9cXC1cXCtcXChcXClcXFwiXFwnXSsifSx7Y046ImF0X3J1bGUiLGI6IkAoZm9udC1mYWNlfHBhZ2UpIixsOiJbYS16LV0rIixrOiJmb250LWZhY2UgcGFnZSJ9LHtjTjoiYXRfcnVsZSIsYjoiQCIsZToiW3s7XSIsYzpbe2NOOiJrZXl3b3JkIixiOi9cUysvfSx7YjovXHMvLGVXOiEwLGVFOiEwLHI6MCxjOltyLGUuQVNNLGUuUVNNLGUuQ1NTTk1dfV19LHtjTjoidGFnIixiOnQscjowfSx7Y046InJ1bGVzIixiOiJ7IixlOiJ9IixpOiJbXlxcc10iLHI6MCxjOltlLkNCQ00se2NOOiJydWxlIixiOiJbXlxcc10iLHJCOiEwLGU6IjsiLGVXOiEwLGM6W3tjTjoiYXR0cmlidXRlIixiOiJbQS1aXFxfXFwuXFwtXSsiLGU6IjoiLGVFOiEwLGk6IlteXFxzXSIsc3RhcnRzOntjTjoidmFsdWUiLGVXOiEwLGVFOiEwLGM6W3IsZS5DU1NOTSxlLlFTTSxlLkFTTSxlLkNCQ00se2NOOiJoZXhjb2xvciIsYjoiI1swLTlBLUZhLWZdKyJ9LHtjTjoiaW1wb3J0YW50IixiOiIhaW1wb3J0YW50In1dfX1dfV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImQiLGZ1bmN0aW9uKGUpe3ZhciB0PXtrZXl3b3JkOiJhYnN0cmFjdCBhbGlhcyBhbGlnbiBhc20gYXNzZXJ0IGF1dG8gYm9keSBicmVhayBieXRlIGNhc2UgY2FzdCBjYXRjaCBjbGFzcyBjb25zdCBjb250aW51ZSBkZWJ1ZyBkZWZhdWx0IGRlbGV0ZSBkZXByZWNhdGVkIGRvIGVsc2UgZW51bSBleHBvcnQgZXh0ZXJuIGZpbmFsIGZpbmFsbHkgZm9yIGZvcmVhY2ggZm9yZWFjaF9yZXZlcnNlfDEwIGdvdG8gaWYgaW1tdXRhYmxlIGltcG9ydCBpbiBpbm91dCBpbnQgaW50ZXJmYWNlIGludmFyaWFudCBpcyBsYXp5IG1hY3JvIG1peGluIG1vZHVsZSBuZXcgbm90aHJvdyBvdXQgb3ZlcnJpZGUgcGFja2FnZSBwcmFnbWEgcHJpdmF0ZSBwcm90ZWN0ZWQgcHVibGljIHB1cmUgcmVmIHJldHVybiBzY29wZSBzaGFyZWQgc3RhdGljIHN0cnVjdCBzdXBlciBzd2l0Y2ggc3luY2hyb25pemVkIHRlbXBsYXRlIHRoaXMgdGhyb3cgdHJ5IHR5cGVkZWYgdHlwZWlkIHR5cGVvZiB1bmlvbiB1bml0dGVzdCB2ZXJzaW9uIHZvaWQgdm9sYXRpbGUgd2hpbGUgd2l0aCBfX0ZJTEVfXyBfX0xJTkVfXyBfX2dzaGFyZWR8MTAgX190aHJlYWQgX190cmFpdHMgX19EQVRFX18gX19FT0ZfXyBfX1RJTUVfXyBfX1RJTUVTVEFNUF9fIF9fVkVORE9SX18gX19WRVJTSU9OX18iLGJ1aWx0X2luOiJib29sIGNkb3VibGUgY2VudCBjZmxvYXQgY2hhciBjcmVhbCBkY2hhciBkZWxlZ2F0ZSBkb3VibGUgZHN0cmluZyBmbG9hdCBmdW5jdGlvbiBpZG91YmxlIGlmbG9hdCBpcmVhbCBsb25nIHJlYWwgc2hvcnQgc3RyaW5nIHVieXRlIHVjZW50IHVpbnQgdWxvbmcgdXNob3J0IHdjaGFyIHdzdHJpbmciLGxpdGVyYWw6ImZhbHNlIG51bGwgdHJ1ZSJ9LHI9IigwfFsxLTldW1xcZF9dKikiLGE9IigwfFsxLTldW1xcZF9dKnxcXGRbXFxkX10qfFtcXGRfXSs/XFxkKSIsaT0iMFtiQl1bMDFfXSsiLG49IihbXFxkYS1mQS1GXVtcXGRhLWZBLUZfXSp8X1tcXGRhLWZBLUZdW1xcZGEtZkEtRl9dKikiLG89IjBbeFhdIituLHM9IihbZUVdWystXT8iK2ErIikiLGw9IigiK2ErIihcXC5cXGQqfCIrcysiKXxcXGQrXFwuIithK2ErInxcXC4iK3IrcysiPykiLGM9IigwW3hYXSgiK24rIlxcLiIrbisifFxcLj8iK24rIilbcFBdWystXT8iK2ErIikiLHA9IigiK3IrInwiK2krInwiK28rIikiLGQ9IigiK2MrInwiK2wrIikiLHU9IlxcXFwoWydcIlxcP1xcXFxhYmZucnR2XXx1W1xcZEEtRmEtZl17NH18WzAtN117MSwzfXx4W1xcZEEtRmEtZl17Mn18VVtcXGRBLUZhLWZdezh9KXwmW2EtekEtWlxcZF17Mix9OyIsbT17Y046Im51bWJlciIsYjoiXFxiIitwKyIoTHx1fFV8THV8TFV8dUx8VUwpPyIscjowfSxiPXtjTjoibnVtYmVyIixiOiJcXGIoIitkKyIoW2ZGXXxMfGl8W2ZGXWl8TGkpP3wiK3ArIihpfFtmRl1pfExpKSkiLHI6MH0sZz17Y046InN0cmluZyIsYjoiJygiK3UrInwuKSIsZToiJyIsaToiLiJ9LGY9e2I6dSxyOjB9LHY9e2NOOiJzdHJpbmciLGI6JyInLGM6W2ZdLGU6JyJbY3dkXT8nfSxoPXtjTjoic3RyaW5nIixiOidbcnFdIicsZTonIltjd2RdPycscjo1fSxfPXtjTjoic3RyaW5nIixiOiJgIixlOiJgW2N3ZF0/In0seT17Y046InN0cmluZyIsYjoneCJbXFxkYS1mQS1GXFxzXFxuXFxyXSoiW2N3ZF0/JyxyOjEwfSx4PXtjTjoic3RyaW5nIixiOidxIlxceycsZTonXFx9Iid9LFM9e2NOOiJzaGViYW5nIixiOiJeIyEiLGU6IiQiLHI6NX0sQz17Y046InByZXByb2Nlc3NvciIsYjoiIyhsaW5lKSIsZToiJCIscjo1fSx3PXtjTjoia2V5d29yZCIsYjoiQFthLXpBLVpfXVthLXpBLVpfXFxkXSoifSxOPXtjTjoiY29tbWVudCIsYjoiXFwvXFwrIixjOlsic2VsZiJdLGU6IlxcK1xcLyIscjoxMH07cmV0dXJue2w6ZS5VSVIsazp0LGM6W2UuQ0xDTSxlLkNCQ00sTix5LHYsaCxfLHgsYixtLGcsUyxDLHddfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgibWFya2Rvd24iLGZ1bmN0aW9uKCl7cmV0dXJue2FsaWFzZXM6WyJtZCIsIm1rZG93biIsIm1rZCJdLGM6W3tjTjoiaGVhZGVyIix2Olt7YjoiXiN7MSw2fSIsZToiJCJ9LHtiOiJeLis/XFxuWz0tXXsyLH0kIn1dfSx7YjoiPCIsZToiPiIsc0w6InhtbCIscjowfSx7Y046ImJ1bGxldCIsYjoiXihbKistXXwoXFxkK1xcLikpXFxzKyJ9LHtjTjoic3Ryb25nIixiOiJbKl9dezJ9Lis/WypfXXsyfSJ9LHtjTjoiZW1waGFzaXMiLHY6W3tiOiJcXCouKz9cXCoifSx7YjoiXy4rP18iLHI6MH1dfSx7Y046ImJsb2NrcXVvdGUiLGI6Il4+XFxzKyIsZToiJCJ9LHtjTjoiY29kZSIsdjpbe2I6ImAuKz9gIn0se2I6Il4oIHs0fXwJKSIsZToiJCIscjowfV19LHtjTjoiaG9yaXpvbnRhbF9ydWxlIixiOiJeWy1cXCpdezMsfSIsZToiJCJ9LHtiOiJcXFsuKz9cXF1bXFwoXFxbXS4qP1tcXClcXF1dIixyQjohMCxjOlt7Y046ImxpbmtfbGFiZWwiLGI6IlxcWyIsZToiXFxdIixlQjohMCxyRTohMCxyOjB9LHtjTjoibGlua191cmwiLGI6IlxcXVxcKCIsZToiXFwpIixlQjohMCxlRTohMH0se2NOOiJsaW5rX3JlZmVyZW5jZSIsYjoiXFxdXFxbIixlOiJcXF0iLGVCOiEwLGVFOiEwfV0scjoxMH0se2I6Il5cXFsuK1xcXToiLHJCOiEwLGM6W3tjTjoibGlua19yZWZlcmVuY2UiLGI6IlxcWyIsZToiXFxdOiIsZUI6ITAsZUU6ITAsc3RhcnRzOntjTjoibGlua191cmwiLGU6IiQifX1dfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJkYXJ0IixmdW5jdGlvbihlKXt2YXIgdD17Y046InN1YnN0IixiOiJcXCRcXHsiLGU6In0iLGs6InRydWUgZmFsc2UgbnVsbCB0aGlzIGlzIG5ldyBzdXBlciJ9LHI9e2NOOiJzdHJpbmciLHY6W3tiOiJyJycnIixlOiInJycifSx7YjonciIiIicsZTonIiIiJ30se2I6InInIixlOiInIixpOiJcXG4ifSx7YjonciInLGU6JyInLGk6IlxcbiJ9LHtiOiInJyciLGU6IicnJyIsYzpbZS5CRSx0XX0se2I6JyIiIicsZTonIiIiJyxjOltlLkJFLHRdfSx7YjoiJyIsZToiJyIsaToiXFxuIixjOltlLkJFLHRdfSx7YjonIicsZTonIicsaToiXFxuIixjOltlLkJFLHRdfV19O3QuYz1bZS5DTk0scl07dmFyIGE9e2tleXdvcmQ6ImFzc2VydCBicmVhayBjYXNlIGNhdGNoIGNsYXNzIGNvbnN0IGNvbnRpbnVlIGRlZmF1bHQgZG8gZWxzZSBlbnVtIGV4dGVuZHMgZmFsc2UgZmluYWwgZmluYWxseSBmb3IgaWYgaW4gaXMgbmV3IG51bGwgcmV0aHJvdyByZXR1cm4gc3VwZXIgc3dpdGNoIHRoaXMgdGhyb3cgdHJ1ZSB0cnkgdmFyIHZvaWQgd2hpbGUgd2l0aCIsbGl0ZXJhbDoiYWJzdHJhY3QgYXMgZHluYW1pYyBleHBvcnQgZXh0ZXJuYWwgZmFjdG9yeSBnZXQgaW1wbGVtZW50cyBpbXBvcnQgbGlicmFyeSBvcGVyYXRvciBwYXJ0IHNldCBzdGF0aWMgdHlwZWRlZiIsYnVpbHRfaW46InByaW50IENvbXBhcmFibGUgRGF0ZVRpbWUgRHVyYXRpb24gRnVuY3Rpb24gSXRlcmFibGUgSXRlcmF0b3IgTGlzdCBNYXAgTWF0Y2ggTnVsbCBPYmplY3QgUGF0dGVybiBSZWdFeHAgU2V0IFN0b3B3YXRjaCBTdHJpbmcgU3RyaW5nQnVmZmVyIFN0cmluZ1NpbmsgU3ltYm9sIFR5cGUgVXJpIGJvb2wgZG91YmxlIGludCBudW0gZG9jdW1lbnQgd2luZG93IHF1ZXJ5U2VsZWN0b3IgcXVlcnlTZWxlY3RvckFsbCBFbGVtZW50IEVsZW1lbnRMaXN0In07cmV0dXJue2s6YSxjOltyLHtjTjoiZGFydGRvYyIsYjoiL1xcKlxcKiIsZToiXFwqLyIsc0w6Im1hcmtkb3duIixzdWJMYW5ndWFnZU1vZGU6ImNvbnRpbnVvdXMifSx7Y046ImRhcnRkb2MiLGI6Ii8vLyIsZToiJCIsc0w6Im1hcmtkb3duIixzdWJMYW5ndWFnZU1vZGU6ImNvbnRpbnVvdXMifSxlLkNMQ00sZS5DQkNNLHtjTjoiY2xhc3MiLGJLOiJjbGFzcyBpbnRlcmZhY2UiLGU6InsiLGVFOiEwLGM6W3tiSzoiZXh0ZW5kcyBpbXBsZW1lbnRzIn0sZS5VVE1dfSxlLkNOTSx7Y046ImFubm90YXRpb24iLGI6IkBbQS1aYS16XSsifSx7YjoiPT4ifV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJkZWxwaGkiLGZ1bmN0aW9uKGUpe3ZhciB0PSJleHBvcnRzIHJlZ2lzdGVyIGZpbGUgc2hsIGFycmF5IHJlY29yZCBwcm9wZXJ0eSBmb3IgbW9kIHdoaWxlIHNldCBhbGx5IGxhYmVsIHVzZXMgcmFpc2Ugbm90IHN0b3JlZCBjbGFzcyBzYWZlY2FsbCB2YXIgaW50ZXJmYWNlIG9yIHByaXZhdGUgc3RhdGljIGV4aXQgaW5kZXggaW5oZXJpdGVkIHRvIGVsc2Ugc3RkY2FsbCBvdmVycmlkZSBzaHIgYXNtIGZhciByZXNvdXJjZXN0cmluZyBmaW5hbGl6YXRpb24gcGFja2VkIHZpcnR1YWwgb3V0IGFuZCBwcm90ZWN0ZWQgbGlicmFyeSBkbyB4b3J3cml0ZSBnb3RvIG5lYXIgZnVuY3Rpb24gZW5kIGRpdiBvdmVybG9hZCBvYmplY3QgdW5pdCBiZWdpbiBzdHJpbmcgb24gaW5saW5lIHJlcGVhdCB1bnRpbCBkZXN0cnVjdG9yIHdyaXRlIG1lc3NhZ2UgcHJvZ3JhbSB3aXRoIHJlYWQgaW5pdGlhbGl6YXRpb24gZXhjZXB0IGRlZmF1bHQgbmlsIGlmIGNhc2UgY2RlY2wgaW4gZG93bnRvIHRocmVhZHZhciBvZiB0cnkgcGFzY2FsIGNvbnN0IGV4dGVybmFsIGNvbnN0cnVjdG9yIHR5cGUgcHVibGljIHRoZW4gaW1wbGVtZW50YXRpb24gZmluYWxseSBwdWJsaXNoZWQgcHJvY2VkdXJlIixyPXtjTjoiY29tbWVudCIsdjpbe2I6L1x7LyxlOi9cfS8scjowfSx7YjovXChcKi8sZTovXCpcKS8scjoxMH1dfSxhPXtjTjoic3RyaW5nIixiOi8nLyxlOi8nLyxjOlt7YjovJycvfV19LGk9e2NOOiJzdHJpbmciLGI6LygjXGQrKSsvfSxuPXtiOmUuSVIrIlxccyo9XFxzKmNsYXNzXFxzKlxcKCIsckI6ITAsYzpbZS5UTV19LG89e2NOOiJmdW5jdGlvbiIsYks6ImZ1bmN0aW9uIGNvbnN0cnVjdG9yIGRlc3RydWN0b3IgcHJvY2VkdXJlIixlOi9bOjtdLyxrOiJmdW5jdGlvbiBjb25zdHJ1Y3RvcnwxMCBkZXN0cnVjdG9yfDEwIHByb2NlZHVyZXwxMCIsYzpbZS5UTSx7Y046InBhcmFtcyIsYjovXCgvLGU6L1wpLyxrOnQsYzpbYSxpXX0scl19O3JldHVybntjSTohMCxrOnQsaTovInxcJFtHLVpnLXpdfFwvXCp8PFwvfFx8LyxjOltyLGUuQ0xDTSxhLGksZS5OTSxuLG9dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiZGlmZiIsZnVuY3Rpb24oKXtyZXR1cm57YWxpYXNlczpbInBhdGNoIl0sYzpbe2NOOiJjaHVuayIscjoxMCx2Olt7YjovXlxAXEAgK1wtXGQrLFxkKyArXCtcZCssXGQrICtcQFxAJC99LHtiOi9eXCpcKlwqICtcZCssXGQrICtcKlwqXCpcKiQvfSx7YjovXlwtXC1cLSArXGQrLFxkKyArXC1cLVwtXC0kL31dfSx7Y046ImhlYWRlciIsdjpbe2I6L0luZGV4OiAvLGU6LyQvfSx7YjovPT09PT0vLGU6Lz09PT09JC99LHtiOi9eXC1cLVwtLyxlOi8kL30se2I6L15cKnszfSAvLGU6LyQvfSx7YjovXlwrXCtcKy8sZTovJC99LHtiOi9cKns1fS8sZTovXCp7NX0kL31dfSx7Y046ImFkZGl0aW9uIixiOiJeXFwrIixlOiIkIn0se2NOOiJkZWxldGlvbiIsYjoiXlxcLSIsZToiJCJ9LHtjTjoiY2hhbmdlIixiOiJeXFwhIixlOiIkIn1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiZGphbmdvIixmdW5jdGlvbigpe3ZhciBlPXtjTjoiZmlsdGVyIixiOi9cfFtBLVphLXpdK1w6Py8sazoidHJ1bmNhdGV3b3JkcyByZW1vdmV0YWdzIGxpbmVicmVha3NiciB5ZXNubyBnZXRfZGlnaXQgdGltZXNpbmNlIHJhbmRvbSBzdHJpcHRhZ3MgZmlsZXNpemVmb3JtYXQgZXNjYXBlIGxpbmVicmVha3MgbGVuZ3RoX2lzIGxqdXN0IHJqdXN0IGN1dCB1cmxpemUgZml4X2FtcGVyc2FuZHMgdGl0bGUgZmxvYXRmb3JtYXQgY2FwZmlyc3QgcHByaW50IGRpdmlzaWJsZWJ5IGFkZCBtYWtlX2xpc3QgdW5vcmRlcmVkX2xpc3QgdXJsZW5jb2RlIHRpbWV1bnRpbCB1cmxpemV0cnVuYyB3b3JkY291bnQgc3RyaW5nZm9ybWF0IGxpbmVudW1iZXJzIHNsaWNlIGRhdGUgZGljdHNvcnQgZGljdHNvcnRyZXZlcnNlZCBkZWZhdWx0X2lmX25vbmUgcGx1cmFsaXplIGxvd2VyIGpvaW4gY2VudGVyIGRlZmF1bHQgdHJ1bmNhdGV3b3Jkc19odG1sIHVwcGVyIGxlbmd0aCBwaG9uZTJudW1lcmljIHdvcmR3cmFwIHRpbWUgYWRkc2xhc2hlcyBzbHVnaWZ5IGZpcnN0IGVzY2FwZWpzIGZvcmNlX2VzY2FwZSBpcmllbmNvZGUgbGFzdCBzYWZlIHNhZmVzZXEgdHJ1bmNhdGVjaGFycyBsb2NhbGl6ZSB1bmxvY2FsaXplIGxvY2FsdGltZSB1dGMgdGltZXpvbmUiLGM6W3tjTjoiYXJndW1lbnQiLGI6LyIvLGU6LyIvfSx7Y046ImFyZ3VtZW50IixiOi8nLyxlOi8nL31dfTtyZXR1cm57YWxpYXNlczpbImppbmphIl0sY0k6ITAsc0w6InhtbCIsc3ViTGFuZ3VhZ2VNb2RlOiJjb250aW51b3VzIixjOlt7Y046ImNvbW1lbnQiLGI6L1x7JVxzKmNvbW1lbnRccyolfS8sZTovXHslXHMqZW5kY29tbWVudFxzKiV9L30se2NOOiJjb21tZW50IixiOi9ceyMvLGU6LyN9L30se2NOOiJ0ZW1wbGF0ZV90YWciLGI6L1x7JS8sZTovJX0vLGs6ImNvbW1lbnQgZW5kY29tbWVudCBsb2FkIHRlbXBsYXRldGFnIGlmY2hhbmdlZCBlbmRpZmNoYW5nZWQgaWYgZW5kaWYgZmlyc3RvZiBmb3IgZW5kZm9yIGluIGlmbm90ZXF1YWwgZW5kaWZub3RlcXVhbCB3aWR0aHJhdGlvIGV4dGVuZHMgaW5jbHVkZSBzcGFjZWxlc3MgZW5kc3BhY2VsZXNzIHJlZ3JvdXAgYnkgYXMgaWZlcXVhbCBlbmRpZmVxdWFsIHNzaSBub3cgd2l0aCBjeWNsZSB1cmwgZmlsdGVyIGVuZGZpbHRlciBkZWJ1ZyBibG9jayBlbmRibG9jayBlbHNlIGF1dG9lc2NhcGUgZW5kYXV0b2VzY2FwZSBjc3JmX3Rva2VuIGVtcHR5IGVsaWYgZW5kd2l0aCBzdGF0aWMgdHJhbnMgYmxvY2t0cmFucyBlbmRibG9ja3RyYW5zIGdldF9zdGF0aWNfcHJlZml4IGdldF9tZWRpYV9wcmVmaXggcGx1cmFsIGdldF9jdXJyZW50X2xhbmd1YWdlIGxhbmd1YWdlIGdldF9hdmFpbGFibGVfbGFuZ3VhZ2VzIGdldF9jdXJyZW50X2xhbmd1YWdlX2JpZGkgZ2V0X2xhbmd1YWdlX2luZm8gZ2V0X2xhbmd1YWdlX2luZm9fbGlzdCBsb2NhbGl6ZSBlbmRsb2NhbGl6ZSBsb2NhbHRpbWUgZW5kbG9jYWx0aW1lIHRpbWV6b25lIGVuZHRpbWV6b25lIGdldF9jdXJyZW50X3RpbWV6b25lIHZlcmJhdGltIixjOltlXX0se2NOOiJ2YXJpYWJsZSIsYjovXHtcey8sZTovfX0vLGM6W2VdfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJkb3MiLGZ1bmN0aW9uKGUpe3ZhciB0PXtjTjoiY29tbWVudCIsYjovQD9yZW1cYi8sZTovJC8scjoxMH0scj17Y046ImxhYmVsIixiOiJeXFxzKltBLVphLXouXz9dW0EtWmEtejAtOV8kI0B+Lj9dKig6fFxccytsYWJlbCkiLHI6MH07cmV0dXJue2FsaWFzZXM6WyJiYXQiLCJjbWQiXSxjSTohMCxrOntmbG93OiJpZiBlbHNlIGdvdG8gZm9yIGluIGRvIGNhbGwgZXhpdCBub3QgZXhpc3QgZXJyb3JsZXZlbCBkZWZpbmVkIixvcGVyYXRvcjoiZXF1IG5lcSBsc3MgbGVxIGd0ciBnZXEiLGtleXdvcmQ6InNoaWZ0IGNkIGRpciBlY2hvIHNldGxvY2FsIGVuZGxvY2FsIHNldCBwYXVzZSBjb3B5IixzdHJlYW06InBybiBudWwgbHB0MyBscHQyIGxwdDEgY29uIGNvbTQgY29tMyBjb20yIGNvbTEgYXV4Iix3aW51dGlsczoicGluZyBuZXQgaXBjb25maWcgdGFza2tpbGwgeGNvcHkgcmVuIGRlbCIsYnVpbHRfaW46ImFwcGVuZCBhc3NvYyBhdCBhdHRyaWIgYnJlYWsgY2FjbHMgY2QgY2hjcCBjaGRpciBjaGtkc2sgY2hrbnRmcyBjbHMgY21kIGNvbG9yIGNvbXAgY29tcGFjdCBjb252ZXJ0IGRhdGUgZGlyIGRpc2tjb21wIGRpc2tjb3B5IGRvc2tleSBlcmFzZSBmcyBmaW5kIGZpbmRzdHIgZm9ybWF0IGZ0eXBlIGdyYWZ0YWJsIGhlbHAga2V5YiBsYWJlbCBtZCBta2RpciBtb2RlIG1vcmUgbW92ZSBwYXRoIHBhdXNlIHByaW50IHBvcGQgcHVzaGQgcHJvbXQgcmQgcmVjb3ZlciByZW0gcmVuYW1lIHJlcGxhY2UgcmVzdG9yZSBybWRpciBzaGlmdHNvcnQgc3RhcnQgc3Vic3QgdGltZSB0aXRsZSB0cmVlIHR5cGUgdmVyIHZlcmlmeSB2b2wifSxjOlt7Y046ImVudnZhciIsYjovJSVbXiBdfCVbXiBdKz8lfCFbXiBdKz8hL30se2NOOiJmdW5jdGlvbiIsYjpyLmIsZToiZ290bzplb2YiLGM6W2UuaW5oZXJpdChlLlRNLHtiOiIoW19hLXpBLVpdXFx3KlxcLikqKFtfYS16QS1aXVxcdyo6KT9bX2EtekEtWl1cXHcqIn0pLHRdfSx7Y046Im51bWJlciIsYjoiXFxiXFxkKyIscjowfSx0XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImR1c3QiLGZ1bmN0aW9uKCl7dmFyIGU9ImlmIGVxIG5lIGx0IGx0ZSBndCBndGUgc2VsZWN0IGRlZmF1bHQgbWF0aCBzZXAiO3JldHVybnthbGlhc2VzOlsiZHN0Il0sY0k6ITAsc0w6InhtbCIsc3ViTGFuZ3VhZ2VNb2RlOiJjb250aW51b3VzIixjOlt7Y046ImV4cHJlc3Npb24iLGI6InsiLGU6In0iLHI6MCxjOlt7Y046ImJlZ2luLWJsb2NrIixiOiIjW2EtekEtWi0gLl0rIixrOmV9LHtjTjoic3RyaW5nIixiOiciJyxlOiciJ30se2NOOiJlbmQtYmxvY2siLGI6IlxcL1thLXpBLVotIC5dKyIsazplfSx7Y046InZhcmlhYmxlIixiOiJbYS16QS1aLS5dKyIsazplLHI6MH1dfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJlbGl4aXIiLGZ1bmN0aW9uKGUpe3ZhciB0PSJbYS16QS1aX11bYS16QS1aMC05X10qKFxcIXxcXD8pPyIscj0iW2EtekEtWl9dXFx3KlshPz1dP3xbLSt+XVxcQHw8PHw+Pnw9fnw9PT0/fDw9PnxbPD5dPT98XFwqXFwqfFstLyslXiYqfmB8XXxcXFtcXF09PyIsYT0iYW5kIGZhbHNlIHRoZW4gZGVmaW5lZCBtb2R1bGUgaW4gcmV0dXJuIHJlZG8gcmV0cnkgZW5kIGZvciB0cnVlIHNlbGYgd2hlbiBuZXh0IHVudGlsIGRvIGJlZ2luIHVubGVzcyBuaWwgYnJlYWsgbm90IGNhc2UgY29uZCBhbGlhcyB3aGlsZSBlbnN1cmUgb3IgaW5jbHVkZSB1c2UgYWxpYXMgZm4gcXVvdGUiLGk9e2NOOiJzdWJzdCIsYjoiI1xceyIsZToifSIsbDp0LGs6YX0sbj17Y046InN0cmluZyIsYzpbZS5CRSxpXSx2Olt7YjovJy8sZTovJy99LHtiOi8iLyxlOi8iL31dfSxvPXtlVzohMCxyRTohMCxsOnQsazphLHI6MH0scz17Y046ImZ1bmN0aW9uIixiSzoiZGVmIGRlZm1hY3JvIixlOi9cYmRvXGIvLGM6W2UuaW5oZXJpdChlLlRNLHtiOnIsc3RhcnRzOm99KV19LGw9ZS5pbmhlcml0KHMse2NOOiJjbGFzcyIsYks6ImRlZm1vZHVsZSBkZWZyZWNvcmQiLGU6L1xiZG9cYnwkfDsvfSksYz1bbixlLkhDTSxsLHMse2NOOiJjb25zdGFudCIsYjoiKFxcYltBLVpfXVxcdyooLik/KSsiLHI6MH0se2NOOiJzeW1ib2wiLGI6IjoiLGM6W24se2I6cn1dLHI6MH0se2NOOiJzeW1ib2wiLGI6dCsiOiIscjowfSx7Y046Im51bWJlciIsYjoiKFxcYjBbMC03X10rKXwoXFxiMHhbMC05YS1mQS1GX10rKXwoXFxiWzEtOV1bMC05X10qKFxcLlswLTlfXSspPyl8WzBfXVxcYiIscjowfSx7Y046InZhcmlhYmxlIixiOiIoXFwkXFxXKXwoKFxcJHxcXEBcXEA/KShcXHcrKSkifSx7YjoiLT4ifSx7YjoiKCIrZS5SU1IrIilcXHMqIixjOltlLkhDTSx7Y046InJlZ2V4cCIsaToiXFxuIixjOltlLkJFLGldLHY6W3tiOiIvIixlOiIvW2Etel0qIn0se2I6IiVyXFxbIixlOiJcXF1bYS16XSoifV19XSxyOjB9XTtyZXR1cm4gaS5jPWMsby5jPWMse2w6dCxrOmEsYzpjfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgicnVieSIsZnVuY3Rpb24oZSl7dmFyIHQ9IlthLXpBLVpfXVxcdypbIT89XT98Wy0rfl1cXEB8PDx8Pj58PX58PT09P3w8PT58Wzw+XT0/fFxcKlxcKnxbLS8rJV4mKn5gfF18XFxbXFxdPT8iLHI9ImFuZCBmYWxzZSB0aGVuIGRlZmluZWQgbW9kdWxlIGluIHJldHVybiByZWRvIGlmIEJFR0lOIHJldHJ5IGVuZCBmb3IgdHJ1ZSBzZWxmIHdoZW4gbmV4dCB1bnRpbCBkbyBiZWdpbiB1bmxlc3MgRU5EIHJlc2N1ZSBuaWwgZWxzZSBicmVhayB1bmRlZiBub3Qgc3VwZXIgY2xhc3MgY2FzZSByZXF1aXJlIHlpZWxkIGFsaWFzIHdoaWxlIGVuc3VyZSBlbHNpZiBvciBpbmNsdWRlIGF0dHJfcmVhZGVyIGF0dHJfd3JpdGVyIGF0dHJfYWNjZXNzb3IiLGE9e2NOOiJ5YXJkb2N0YWciLGI6IkBbQS1aYS16XSsifSxpPXtjTjoidmFsdWUiLGI6IiM8IixlOiI+In0sbj17Y046ImNvbW1lbnQiLHY6W3tiOiIjIixlOiIkIixjOlthXX0se2I6Il5cXD1iZWdpbiIsZToiXlxcPWVuZCIsYzpbYV0scjoxMH0se2I6Il5fX0VORF9fIixlOiJcXG4kIn1dfSxvPXtjTjoic3Vic3QiLGI6IiNcXHsiLGU6In0iLGs6cn0scz17Y046InN0cmluZyIsYzpbZS5CRSxvXSx2Olt7YjovJy8sZTovJy99LHtiOi8iLyxlOi8iL30se2I6L2AvLGU6L2AvfSx7YjoiJVtxUXdXeF0/XFwoIixlOiJcXCkifSx7YjoiJVtxUXdXeF0/XFxbIixlOiJcXF0ifSx7YjoiJVtxUXdXeF0/eyIsZToifSJ9LHtiOiIlW3FRd1d4XT88IixlOiI+In0se2I6IiVbcVF3V3hdPy8iLGU6Ii8ifSx7YjoiJVtxUXdXeF0/JSIsZToiJSJ9LHtiOiIlW3FRd1d4XT8tIixlOiItIn0se2I6IiVbcVF3V3hdP1xcfCIsZToiXFx8In0se2I6L1xCXD8oXFxcZHsxLDN9fFxceFtBLUZhLWYwLTldezEsMn18XFx1W0EtRmEtZjAtOV17NH18XFw/XFMpXGIvfV19LGw9e2NOOiJwYXJhbXMiLGI6IlxcKCIsZToiXFwpIixrOnJ9LGM9W3MsaSxuLHtjTjoiY2xhc3MiLGJLOiJjbGFzcyBtb2R1bGUiLGU6IiR8OyIsaTovPS8sYzpbZS5pbmhlcml0KGUuVE0se2I6IltBLVphLXpfXVxcdyooOjpcXHcrKSooXFw/fFxcISk/In0pLHtjTjoiaW5oZXJpdGFuY2UiLGI6IjxcXHMqIixjOlt7Y046InBhcmVudCIsYjoiKCIrZS5JUisiOjopPyIrZS5JUn1dfSxuXX0se2NOOiJmdW5jdGlvbiIsYks6ImRlZiIsZToiIHwkfDsiLHI6MCxjOltlLmluaGVyaXQoZS5UTSx7Yjp0fSksbCxuXX0se2NOOiJjb25zdGFudCIsYjoiKDo6KT8oXFxiW0EtWl1cXHcqKDo6KT8pKyIscjowfSx7Y046InN5bWJvbCIsYjplLlVJUisiKFxcIXxcXD8pPzoiLHI6MH0se2NOOiJzeW1ib2wiLGI6IjoiLGM6W3Mse2I6dH1dLHI6MH0se2NOOiJudW1iZXIiLGI6IihcXGIwWzAtN19dKyl8KFxcYjB4WzAtOWEtZkEtRl9dKyl8KFxcYlsxLTldWzAtOV9dKihcXC5bMC05X10rKT8pfFswX11cXGIiLHI6MH0se2NOOiJ2YXJpYWJsZSIsYjoiKFxcJFxcVyl8KChcXCR8XFxAXFxAPykoXFx3KykpIn0se2I6IigiK2UuUlNSKyIpXFxzKiIsYzpbaSxuLHtjTjoicmVnZXhwIixjOltlLkJFLG9dLGk6L1xuLyx2Olt7YjoiLyIsZToiL1thLXpdKiJ9LHtiOiIlcnsiLGU6In1bYS16XSoifSx7YjoiJXJcXCgiLGU6IlxcKVthLXpdKiJ9LHtiOiIlciEiLGU6IiFbYS16XSoifSx7YjoiJXJcXFsiLGU6IlxcXVthLXpdKiJ9XX1dLHI6MH1dO28uYz1jLGwuYz1jO3ZhciBwPSJbPj9dPiIsZD0iW1xcdyNdK1xcKFxcdytcXCk6XFxkKzpcXGQrPiIsdT0iKFxcdystKT9cXGQrXFwuXFxkK1xcLlxcZChwXFxkKyk/W14+XSs+IixtPVt7YjovXlxzKj0+LyxjTjoic3RhdHVzIixzdGFydHM6e2U6IiQiLGM6Y319LHtjTjoicHJvbXB0IixiOiJeKCIrcCsifCIrZCsifCIrdSsiKSIsc3RhcnRzOntlOiIkIixjOmN9fV07cmV0dXJue2FsaWFzZXM6WyJyYiIsImdlbXNwZWMiLCJwb2RzcGVjIiwidGhvciIsImlyYiJdLGs6cixjOltuXS5jb25jYXQobSkuY29uY2F0KGMpfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiZXJiIixmdW5jdGlvbigpe3JldHVybntzTDoieG1sIixzdWJMYW5ndWFnZU1vZGU6ImNvbnRpbnVvdXMiLGM6W3tjTjoiY29tbWVudCIsYjoiPCUjIixlOiIlPiJ9LHtiOiI8JVslPS1dPyIsZToiWyUtXT8lPiIsc0w6InJ1YnkiLGVCOiEwLGVFOiEwfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJlcmxhbmctcmVwbCIsZnVuY3Rpb24oZSl7cmV0dXJue2s6e3NwZWNpYWxfZnVuY3Rpb25zOiJzcGF3biBzcGF3bl9saW5rIHNlbGYiLHJlc2VydmVkOiJhZnRlciBhbmQgYW5kYWxzb3wxMCBiYW5kIGJlZ2luIGJub3QgYm9yIGJzbCBic3IgYnhvciBjYXNlIGNhdGNoIGNvbmQgZGl2IGVuZCBmdW4gaWYgbGV0IG5vdCBvZiBvciBvcmVsc2V8MTAgcXVlcnkgcmVjZWl2ZSByZW0gdHJ5IHdoZW4geG9yIn0sYzpbe2NOOiJwcm9tcHQiLGI6Il5bMC05XSs+ICIscjoxMH0se2NOOiJjb21tZW50IixiOiIlIixlOiIkIn0se2NOOiJudW1iZXIiLGI6IlxcYihcXGQrI1thLWZBLUYwLTldK3xcXGQrKFxcLlxcZCspPyhbZUVdWy0rXT9cXGQrKT8pIixyOjB9LGUuQVNNLGUuUVNNLHtjTjoiY29uc3RhbnQiLGI6IlxcPyg6Oik/KFtBLVpdXFx3Kig6Oik/KSsifSx7Y046ImFycm93IixiOiItPiJ9LHtjTjoib2siLGI6Im9rIn0se2NOOiJleGNsYW1hdGlvbl9tYXJrIixiOiIhIn0se2NOOiJmdW5jdGlvbl9vcl9hdG9tIixiOiIoXFxiW2EteiddW2EtekEtWjAtOV8nXSo6W2EteiddW2EtekEtWjAtOV8nXSopfChcXGJbYS16J11bYS16QS1aMC05XyddKikiLHI6MH0se2NOOiJ2YXJpYWJsZSIsYjoiW0EtWl1bYS16QS1aMC05XyddKiIscjowfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJlcmxhbmciLGZ1bmN0aW9uKGUpe3ZhciB0PSJbYS16J11bYS16QS1aMC05XyddKiIscj0iKCIrdCsiOiIrdCsifCIrdCsiKSIsYT17a2V5d29yZDoiYWZ0ZXIgYW5kIGFuZGFsc298MTAgYmFuZCBiZWdpbiBibm90IGJvciBic2wgYnpyIGJ4b3IgY2FzZSBjYXRjaCBjb25kIGRpdiBlbmQgZnVuIGlmIGxldCBub3Qgb2Ygb3JlbHNlfDEwIHF1ZXJ5IHJlY2VpdmUgcmVtIHRyeSB3aGVuIHhvciIsbGl0ZXJhbDoiZmFsc2UgdHJ1ZSJ9LGk9e2NOOiJjb21tZW50IixiOiIlIixlOiIkIn0sbj17Y046Im51bWJlciIsYjoiXFxiKFxcZCsjW2EtZkEtRjAtOV0rfFxcZCsoXFwuXFxkKyk/KFtlRV1bLStdP1xcZCspPykiLHI6MH0sbz17YjoiZnVuXFxzKyIrdCsiL1xcZCsifSxzPXtiOnIrIlxcKCIsZToiXFwpIixyQjohMCxyOjAsYzpbe2NOOiJmdW5jdGlvbl9uYW1lIixiOnIscjowfSx7YjoiXFwoIixlOiJcXCkiLGVXOiEwLHJFOiEwLHI6MH1dfSxsPXtjTjoidHVwbGUiLGI6InsiLGU6In0iLHI6MH0sYz17Y046InZhcmlhYmxlIixiOiJcXGJfKFtBLVpdW0EtWmEtejAtOV9dKik/IixyOjB9LHA9e2NOOiJ2YXJpYWJsZSIsYjoiW0EtWl1bYS16QS1aMC05X10qIixyOjB9LGQ9e2I6IiMiK2UuVUlSLHI6MCxyQjohMCxjOlt7Y046InJlY29yZF9uYW1lIixiOiIjIitlLlVJUixyOjB9LHtiOiJ7IixlOiJ9IixyOjB9XX0sdT17Yks6ImZ1biByZWNlaXZlIGlmIHRyeSBjYXNlIixlOiJlbmQiLGs6YX07dS5jPVtpLG8sZS5pbmhlcml0KGUuQVNNLHtjTjoiIn0pLHUscyxlLlFTTSxuLGwsYyxwLGRdO3ZhciBtPVtpLG8sdSxzLGUuUVNNLG4sbCxjLHAsZF07cy5jWzFdLmM9bSxsLmM9bSxkLmNbMV0uYz1tO3ZhciBiPXtjTjoicGFyYW1zIixiOiJcXCgiLGU6IlxcKSIsYzptfTtyZXR1cm57YWxpYXNlczpbImVybCJdLGs6YSxpOiIoPC98XFwqPXxcXCs9fC09fC9cXCp8XFwqL3xcXChcXCp8XFwqXFwpKSIsYzpbe2NOOiJmdW5jdGlvbiIsYjoiXiIrdCsiXFxzKlxcKCIsZToiLT4iLHJCOiEwLGk6IlxcKHwjfC8vfC9cXCp8XFxcXHw6fDsiLGM6W2IsZS5pbmhlcml0KGUuVE0se2I6dH0pXSxzdGFydHM6e2U6Ijt8XFwuIixrOmEsYzptfX0saSx7Y046InBwIixiOiJeLSIsZToiXFwuIixyOjAsZUU6ITAsckI6ITAsbDoiLSIrZS5JUixrOiItbW9kdWxlIC1yZWNvcmQgLXVuZGVmIC1leHBvcnQgLWlmZGVmIC1pZm5kZWYgLWF1dGhvciAtY29weXJpZ2h0IC1kb2MgLXZzbiAtaW1wb3J0IC1pbmNsdWRlIC1pbmNsdWRlX2xpYiAtY29tcGlsZSAtZGVmaW5lIC1lbHNlIC1lbmRpZiAtZmlsZSAtYmVoYXZpb3VyIC1iZWhhdmlvciAtc3BlYyIsYzpbYl19LG4sZS5RU00sZCxjLHAsbCx7YjovXC4kL31dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiZml4IixmdW5jdGlvbigpe3JldHVybntjOlt7YjovW15cdTI0MDFcdTAwMDFdKy8sZTovW1x1MjQwMVx1MDAwMV0vLGVFOiEwLHJCOiEwLHJFOiExLGM6W3tiOi8oW15cdTI0MDFcdTAwMDE9XSspLyxlOi89KFteXHUyNDAxXHUwMDAxPV0rKS8sckU6ITAsckI6ITEsY046ImF0dHJpYnV0ZSJ9LHtiOi89LyxlOi8oW1x1MjQwMVx1MDAwMV0pLyxlRTohMCxlQjohMCxjTjoic3RyaW5nIn1dfV0sY0k6ITB9fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJmc2hhcnAiLGZ1bmN0aW9uKGUpe3ZhciB0PXtiOiI8IixlOiI+IixjOltlLmluaGVyaXQoZS5UTSx7YjovJ1thLXpBLVowLTlfXSsvfSldfTtyZXR1cm57YWxpYXNlczpbImZzIl0sazoieWllbGQhIHJldHVybiEgbGV0ISBkbyFhYnN0cmFjdCBhbmQgYXMgYXNzZXJ0IGJhc2UgYmVnaW4gY2xhc3MgZGVmYXVsdCBkZWxlZ2F0ZSBkbyBkb25lIGRvd25jYXN0IGRvd250byBlbGlmIGVsc2UgZW5kIGV4Y2VwdGlvbiBleHRlcm4gZmFsc2UgZmluYWxseSBmb3IgZnVuIGZ1bmN0aW9uIGdsb2JhbCBpZiBpbiBpbmhlcml0IGlubGluZSBpbnRlcmZhY2UgaW50ZXJuYWwgbGF6eSBsZXQgbWF0Y2ggbWVtYmVyIG1vZHVsZSBtdXRhYmxlIG5hbWVzcGFjZSBuZXcgbnVsbCBvZiBvcGVuIG9yIG92ZXJyaWRlIHByaXZhdGUgcHVibGljIHJlYyByZXR1cm4gc2lnIHN0YXRpYyBzdHJ1Y3QgdGhlbiB0byB0cnVlIHRyeSB0eXBlIHVwY2FzdCB1c2UgdmFsIHZvaWQgd2hlbiB3aGlsZSB3aXRoIHlpZWxkIixjOlt7Y046InN0cmluZyIsYjonQCInLGU6JyInLGM6W3tiOiciIid9XX0se2NOOiJzdHJpbmciLGI6JyIiIicsZTonIiIiJ30se2NOOiJjb21tZW50IixiOiJcXChcXCoiLGU6IlxcKlxcKSJ9LHtjTjoiY2xhc3MiLGJLOiJ0eXBlIixlOiJcXCh8PXwkIixlRTohMCxjOltlLlVUTSx0XX0se2NOOiJhbm5vdGF0aW9uIixiOiJcXFs8IixlOiI+XFxdIixyOjEwfSx7Y046ImF0dHJpYnV0ZSIsYjoiXFxCKCdbQS1aYS16XSlcXGIiLGM6W2UuQkVdfSxlLkNMQ00sZS5pbmhlcml0KGUuUVNNLHtpOm51bGx9KSxlLkNOTV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJnY29kZSIsZnVuY3Rpb24oZSl7dmFyIHQ9IltBLVpfXVtBLVowLTlfLl0qIixyPSJcXCUiLGE9e2xpdGVyYWw6IiIsYnVpbHRfaW46IiIsa2V5d29yZDoiSUYgRE8gV0hJTEUgRU5EV0hJTEUgQ0FMTCBFTkRJRiBTVUIgRU5EU1VCIEdPVE8gUkVQRUFUIEVORFJFUEVBVCBFUSBMVCBHVCBORSBHRSBMRSBPUiBYT1IifSxpPXtjTjoicHJlcHJvY2Vzc29yIixiOiIoW09dKShbMC05XSspIn0sbj1bZS5DTENNLHtjTjoiY29tbWVudCIsYjovXCgvLGU6L1wpLyxjOltlLlBXTV19LGUuQ0JDTSxlLmluaGVyaXQoZS5DTk0se2I6IihbLStdPyhbMC05XSpcXC4/WzAtOV0rXFwuPykpfCIrZS5DTlJ9KSxlLmluaGVyaXQoZS5BU00se2k6bnVsbH0pLGUuaW5oZXJpdChlLlFTTSx7aTpudWxsfSkse2NOOiJrZXl3b3JkIixiOiIoW0ddKShbMC05XStcXC4/WzAtOV0/KSJ9LHtjTjoidGl0bGUiLGI6IihbTV0pKFswLTldK1xcLj9bMC05XT8pIn0se2NOOiJ0aXRsZSIsYjoiKFZDfFZTfCMpIixlOiIoXFxkKykifSx7Y046InRpdGxlIixiOiIoVlpPRlh8VlpPRll8VlpPRlopIn0se2NOOiJidWlsdF9pbiIsYjoiKEFUQU58QUJTfEFDT1N8QVNJTnxTSU58Q09TfEVYUHxGSVh8RlVQfFJPVU5EfExOfFRBTikoXFxbKSIsZToiKFstK10/KFswLTldKlxcLj9bMC05XStcXC4/KSkoXFxdKSJ9LHtjTjoibGFiZWwiLHY6W3tiOiJOIixlOiJcXGQrIixpOiJcXFcifV19XTtyZXR1cm57YWxpYXNlczpbIm5jIl0sY0k6ITAsbDp0LGs6YSxjOlt7Y046InByZXByb2Nlc3NvciIsYjpyfSxpXS5jb25jYXQobil9fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJnaGVya2luIixmdW5jdGlvbihlKXtyZXR1cm57YWxpYXNlczpbImZlYXR1cmUiXSxrOiJGZWF0dXJlIEJhY2tncm91bmQgQWJpbGl0eSBCdXNpbmVzcyBOZWVkIFNjZW5hcmlvIFNjZW5hcmlvcyBTY2VuYXJpbyBPdXRsaW5lIFNjZW5hcmlvIFRlbXBsYXRlIEV4YW1wbGVzIEdpdmVuIEFuZCBUaGVuIEJ1dCBXaGVuIixjOlt7Y046ImtleXdvcmQiLGI6IlxcKiJ9LHtjTjoiY29tbWVudCIsYjoiQFteQFxyXG4JIF0rIixlOiIkIn0se2NOOiJzdHJpbmciLGI6IlxcfCIsZToiXFwkIn0se2NOOiJ2YXJpYWJsZSIsYjoiPCIsZToiPiJ9LGUuSENNLHtjTjoic3RyaW5nIixiOiciIiInLGU6JyIiIid9LGUuUVNNXX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImdsc2wiLGZ1bmN0aW9uKGUpe3JldHVybntrOntrZXl3b3JkOiJhdG9taWNfdWludCBhdHRyaWJ1dGUgYm9vbCBicmVhayBidmVjMiBidmVjMyBidmVjNCBjYXNlIGNlbnRyb2lkIGNvaGVyZW50IGNvbnN0IGNvbnRpbnVlIGRlZmF1bHQgZGlzY2FyZCBkbWF0MiBkbWF0MngyIGRtYXQyeDMgZG1hdDJ4NCBkbWF0MyBkbWF0M3gyIGRtYXQzeDMgZG1hdDN4NCBkbWF0NCBkbWF0NHgyIGRtYXQ0eDMgZG1hdDR4NCBkbyBkb3VibGUgZHZlYzIgZHZlYzMgZHZlYzQgZWxzZSBmbGF0IGZsb2F0IGZvciBoaWdocCBpZiBpaW1hZ2UxRCBpaW1hZ2UxREFycmF5IGlpbWFnZTJEIGlpbWFnZTJEQXJyYXkgaWltYWdlMkRNUyBpaW1hZ2UyRE1TQXJyYXkgaWltYWdlMkRSZWN0IGlpbWFnZTNEIGlpbWFnZUJ1ZmZlciBpaW1hZ2VDdWJlIGlpbWFnZUN1YmVBcnJheSBpbWFnZTFEIGltYWdlMURBcnJheSBpbWFnZTJEIGltYWdlMkRBcnJheSBpbWFnZTJETVMgaW1hZ2UyRE1TQXJyYXkgaW1hZ2UyRFJlY3QgaW1hZ2UzRCBpbWFnZUJ1ZmZlciBpbWFnZUN1YmUgaW1hZ2VDdWJlQXJyYXkgaW4gaW5vdXQgaW50IGludmFyaWFudCBpc2FtcGxlcjFEIGlzYW1wbGVyMURBcnJheSBpc2FtcGxlcjJEIGlzYW1wbGVyMkRBcnJheSBpc2FtcGxlcjJETVMgaXNhbXBsZXIyRE1TQXJyYXkgaXNhbXBsZXIyRFJlY3QgaXNhbXBsZXIzRCBpc2FtcGxlckJ1ZmZlciBpc2FtcGxlckN1YmUgaXNhbXBsZXJDdWJlQXJyYXkgaXZlYzIgaXZlYzMgaXZlYzQgbGF5b3V0IGxvd3AgbWF0MiBtYXQyeDIgbWF0MngzIG1hdDJ4NCBtYXQzIG1hdDN4MiBtYXQzeDMgbWF0M3g0IG1hdDQgbWF0NHgyIG1hdDR4MyBtYXQ0eDQgbWVkaXVtcCBub3BlcnNwZWN0aXZlIG91dCBwYXRjaCBwcmVjaXNpb24gcmVhZG9ubHkgcmVzdHJpY3QgcmV0dXJuIHNhbXBsZSBzYW1wbGVyMUQgc2FtcGxlcjFEQXJyYXkgc2FtcGxlcjFEQXJyYXlTaGFkb3cgc2FtcGxlcjFEU2hhZG93IHNhbXBsZXIyRCBzYW1wbGVyMkRBcnJheSBzYW1wbGVyMkRBcnJheVNoYWRvdyBzYW1wbGVyMkRNUyBzYW1wbGVyMkRNU0FycmF5IHNhbXBsZXIyRFJlY3Qgc2FtcGxlcjJEUmVjdFNoYWRvdyBzYW1wbGVyMkRTaGFkb3cgc2FtcGxlcjNEIHNhbXBsZXJCdWZmZXIgc2FtcGxlckN1YmUgc2FtcGxlckN1YmVBcnJheSBzYW1wbGVyQ3ViZUFycmF5U2hhZG93IHNhbXBsZXJDdWJlU2hhZG93IHNtb290aCBzdHJ1Y3Qgc3Vicm91dGluZSBzd2l0Y2ggdWltYWdlMUQgdWltYWdlMURBcnJheSB1aW1hZ2UyRCB1aW1hZ2UyREFycmF5IHVpbWFnZTJETVMgdWltYWdlMkRNU0FycmF5IHVpbWFnZTJEUmVjdCB1aW1hZ2UzRCB1aW1hZ2VCdWZmZXIgdWltYWdlQ3ViZSB1aW1hZ2VDdWJlQXJyYXkgdWludCB1bmlmb3JtIHVzYW1wbGVyMUQgdXNhbXBsZXIxREFycmF5IHVzYW1wbGVyMkQgdXNhbXBsZXIyREFycmF5IHVzYW1wbGVyMkRNUyB1c2FtcGxlcjJETVNBcnJheSB1c2FtcGxlcjJEUmVjdCB1c2FtcGxlcjNEIHVzYW1wbGVyQnVmZmVyIHVzYW1wbGVyQ3ViZSB1c2FtcGxlckN1YmVBcnJheSB1dmVjMiB1dmVjMyB1dmVjNCB2YXJ5aW5nIHZlYzIgdmVjMyB2ZWM0IHZvaWQgdm9sYXRpbGUgd2hpbGUgd3JpdGVvbmx5IixidWlsdF9pbjoiZ2xfQmFja0NvbG9yIGdsX0JhY2tMaWdodE1vZGVsUHJvZHVjdCBnbF9CYWNrTGlnaHRQcm9kdWN0IGdsX0JhY2tNYXRlcmlhbCBnbF9CYWNrU2Vjb25kYXJ5Q29sb3IgZ2xfQ2xpcERpc3RhbmNlIGdsX0NsaXBQbGFuZSBnbF9DbGlwVmVydGV4IGdsX0NvbG9yIGdsX0RlcHRoUmFuZ2UgZ2xfRXllUGxhbmVRIGdsX0V5ZVBsYW5lUiBnbF9FeWVQbGFuZVMgZ2xfRXllUGxhbmVUIGdsX0ZvZyBnbF9Gb2dDb29yZCBnbF9Gb2dGcmFnQ29vcmQgZ2xfRnJhZ0NvbG9yIGdsX0ZyYWdDb29yZCBnbF9GcmFnRGF0YSBnbF9GcmFnRGVwdGggZ2xfRnJvbnRDb2xvciBnbF9Gcm9udEZhY2luZyBnbF9Gcm9udExpZ2h0TW9kZWxQcm9kdWN0IGdsX0Zyb250TGlnaHRQcm9kdWN0IGdsX0Zyb250TWF0ZXJpYWwgZ2xfRnJvbnRTZWNvbmRhcnlDb2xvciBnbF9JbnN0YW5jZUlEIGdsX0ludm9jYXRpb25JRCBnbF9MYXllciBnbF9MaWdodE1vZGVsIGdsX0xpZ2h0U291cmNlIGdsX01heEF0b21pY0NvdW50ZXJCaW5kaW5ncyBnbF9NYXhBdG9taWNDb3VudGVyQnVmZmVyU2l6ZSBnbF9NYXhDbGlwRGlzdGFuY2VzIGdsX01heENsaXBQbGFuZXMgZ2xfTWF4Q29tYmluZWRBdG9taWNDb3VudGVyQnVmZmVycyBnbF9NYXhDb21iaW5lZEF0b21pY0NvdW50ZXJzIGdsX01heENvbWJpbmVkSW1hZ2VVbmlmb3JtcyBnbF9NYXhDb21iaW5lZEltYWdlVW5pdHNBbmRGcmFnbWVudE91dHB1dHMgZ2xfTWF4Q29tYmluZWRUZXh0dXJlSW1hZ2VVbml0cyBnbF9NYXhEcmF3QnVmZmVycyBnbF9NYXhGcmFnbWVudEF0b21pY0NvdW50ZXJCdWZmZXJzIGdsX01heEZyYWdtZW50QXRvbWljQ291bnRlcnMgZ2xfTWF4RnJhZ21lbnRJbWFnZVVuaWZvcm1zIGdsX01heEZyYWdtZW50SW5wdXRDb21wb25lbnRzIGdsX01heEZyYWdtZW50VW5pZm9ybUNvbXBvbmVudHMgZ2xfTWF4RnJhZ21lbnRVbmlmb3JtVmVjdG9ycyBnbF9NYXhHZW9tZXRyeUF0b21pY0NvdW50ZXJCdWZmZXJzIGdsX01heEdlb21ldHJ5QXRvbWljQ291bnRlcnMgZ2xfTWF4R2VvbWV0cnlJbWFnZVVuaWZvcm1zIGdsX01heEdlb21ldHJ5SW5wdXRDb21wb25lbnRzIGdsX01heEdlb21ldHJ5T3V0cHV0Q29tcG9uZW50cyBnbF9NYXhHZW9tZXRyeU91dHB1dFZlcnRpY2VzIGdsX01heEdlb21ldHJ5VGV4dHVyZUltYWdlVW5pdHMgZ2xfTWF4R2VvbWV0cnlUb3RhbE91dHB1dENvbXBvbmVudHMgZ2xfTWF4R2VvbWV0cnlVbmlmb3JtQ29tcG9uZW50cyBnbF9NYXhHZW9tZXRyeVZhcnlpbmdDb21wb25lbnRzIGdsX01heEltYWdlU2FtcGxlcyBnbF9NYXhJbWFnZVVuaXRzIGdsX01heExpZ2h0cyBnbF9NYXhQYXRjaFZlcnRpY2VzIGdsX01heFByb2dyYW1UZXhlbE9mZnNldCBnbF9NYXhUZXNzQ29udHJvbEF0b21pY0NvdW50ZXJCdWZmZXJzIGdsX01heFRlc3NDb250cm9sQXRvbWljQ291bnRlcnMgZ2xfTWF4VGVzc0NvbnRyb2xJbWFnZVVuaWZvcm1zIGdsX01heFRlc3NDb250cm9sSW5wdXRDb21wb25lbnRzIGdsX01heFRlc3NDb250cm9sT3V0cHV0Q29tcG9uZW50cyBnbF9NYXhUZXNzQ29udHJvbFRleHR1cmVJbWFnZVVuaXRzIGdsX01heFRlc3NDb250cm9sVG90YWxPdXRwdXRDb21wb25lbnRzIGdsX01heFRlc3NDb250cm9sVW5pZm9ybUNvbXBvbmVudHMgZ2xfTWF4VGVzc0V2YWx1YXRpb25BdG9taWNDb3VudGVyQnVmZmVycyBnbF9NYXhUZXNzRXZhbHVhdGlvbkF0b21pY0NvdW50ZXJzIGdsX01heFRlc3NFdmFsdWF0aW9uSW1hZ2VVbmlmb3JtcyBnbF9NYXhUZXNzRXZhbHVhdGlvbklucHV0Q29tcG9uZW50cyBnbF9NYXhUZXNzRXZhbHVhdGlvbk91dHB1dENvbXBvbmVudHMgZ2xfTWF4VGVzc0V2YWx1YXRpb25UZXh0dXJlSW1hZ2VVbml0cyBnbF9NYXhUZXNzRXZhbHVhdGlvblVuaWZvcm1Db21wb25lbnRzIGdsX01heFRlc3NHZW5MZXZlbCBnbF9NYXhUZXNzUGF0Y2hDb21wb25lbnRzIGdsX01heFRleHR1cmVDb29yZHMgZ2xfTWF4VGV4dHVyZUltYWdlVW5pdHMgZ2xfTWF4VGV4dHVyZVVuaXRzIGdsX01heFZhcnlpbmdDb21wb25lbnRzIGdsX01heFZhcnlpbmdGbG9hdHMgZ2xfTWF4VmFyeWluZ1ZlY3RvcnMgZ2xfTWF4VmVydGV4QXRvbWljQ291bnRlckJ1ZmZlcnMgZ2xfTWF4VmVydGV4QXRvbWljQ291bnRlcnMgZ2xfTWF4VmVydGV4QXR0cmlicyBnbF9NYXhWZXJ0ZXhJbWFnZVVuaWZvcm1zIGdsX01heFZlcnRleE91dHB1dENvbXBvbmVudHMgZ2xfTWF4VmVydGV4VGV4dHVyZUltYWdlVW5pdHMgZ2xfTWF4VmVydGV4VW5pZm9ybUNvbXBvbmVudHMgZ2xfTWF4VmVydGV4VW5pZm9ybVZlY3RvcnMgZ2xfTWF4Vmlld3BvcnRzIGdsX01pblByb2dyYW1UZXhlbE9mZnNldGdsX01vZGVsVmlld01hdHJpeCBnbF9Nb2RlbFZpZXdNYXRyaXhJbnZlcnNlIGdsX01vZGVsVmlld01hdHJpeEludmVyc2VUcmFuc3Bvc2UgZ2xfTW9kZWxWaWV3TWF0cml4VHJhbnNwb3NlIGdsX01vZGVsVmlld1Byb2plY3Rpb25NYXRyaXggZ2xfTW9kZWxWaWV3UHJvamVjdGlvbk1hdHJpeEludmVyc2UgZ2xfTW9kZWxWaWV3UHJvamVjdGlvbk1hdHJpeEludmVyc2VUcmFuc3Bvc2UgZ2xfTW9kZWxWaWV3UHJvamVjdGlvbk1hdHJpeFRyYW5zcG9zZSBnbF9NdWx0aVRleENvb3JkMCBnbF9NdWx0aVRleENvb3JkMSBnbF9NdWx0aVRleENvb3JkMiBnbF9NdWx0aVRleENvb3JkMyBnbF9NdWx0aVRleENvb3JkNCBnbF9NdWx0aVRleENvb3JkNSBnbF9NdWx0aVRleENvb3JkNiBnbF9NdWx0aVRleENvb3JkNyBnbF9Ob3JtYWwgZ2xfTm9ybWFsTWF0cml4IGdsX05vcm1hbFNjYWxlIGdsX09iamVjdFBsYW5lUSBnbF9PYmplY3RQbGFuZVIgZ2xfT2JqZWN0UGxhbmVTIGdsX09iamVjdFBsYW5lVCBnbF9QYXRjaFZlcnRpY2VzSW4gZ2xfUGVyVmVydGV4IGdsX1BvaW50IGdsX1BvaW50Q29vcmQgZ2xfUG9pbnRTaXplIGdsX1Bvc2l0aW9uIGdsX1ByaW1pdGl2ZUlEIGdsX1ByaW1pdGl2ZUlESW4gZ2xfUHJvamVjdGlvbk1hdHJpeCBnbF9Qcm9qZWN0aW9uTWF0cml4SW52ZXJzZSBnbF9Qcm9qZWN0aW9uTWF0cml4SW52ZXJzZVRyYW5zcG9zZSBnbF9Qcm9qZWN0aW9uTWF0cml4VHJhbnNwb3NlIGdsX1NhbXBsZUlEIGdsX1NhbXBsZU1hc2sgZ2xfU2FtcGxlTWFza0luIGdsX1NhbXBsZVBvc2l0aW9uIGdsX1NlY29uZGFyeUNvbG9yIGdsX1Rlc3NDb29yZCBnbF9UZXNzTGV2ZWxJbm5lciBnbF9UZXNzTGV2ZWxPdXRlciBnbF9UZXhDb29yZCBnbF9UZXh0dXJlRW52Q29sb3IgZ2xfVGV4dHVyZU1hdHJpeEludmVyc2VUcmFuc3Bvc2UgZ2xfVGV4dHVyZU1hdHJpeFRyYW5zcG9zZSBnbF9WZXJ0ZXggZ2xfVmVydGV4SUQgZ2xfVmlld3BvcnRJbmRleCBnbF9pbiBnbF9vdXQgRW1pdFN0cmVhbVZlcnRleCBFbWl0VmVydGV4IEVuZFByaW1pdGl2ZSBFbmRTdHJlYW1QcmltaXRpdmUgYWJzIGFjb3MgYWNvc2ggYWxsIGFueSBhc2luIGFzaW5oIGF0YW4gYXRhbmggYXRvbWljQ291bnRlciBhdG9taWNDb3VudGVyRGVjcmVtZW50IGF0b21pY0NvdW50ZXJJbmNyZW1lbnQgYmFycmllciBiaXRDb3VudCBiaXRmaWVsZEV4dHJhY3QgYml0ZmllbGRJbnNlcnQgYml0ZmllbGRSZXZlcnNlIGNlaWwgY2xhbXAgY29zIGNvc2ggY3Jvc3MgZEZkeCBkRmR5IGRlZ3JlZXMgZGV0ZXJtaW5hbnQgZGlzdGFuY2UgZG90IGVxdWFsIGV4cCBleHAyIGZhY2Vmb3J3YXJkIGZpbmRMU0IgZmluZE1TQiBmbG9hdEJpdHNUb0ludCBmbG9hdEJpdHNUb1VpbnQgZmxvb3IgZm1hIGZyYWN0IGZyZXhwIGZ0cmFuc2Zvcm0gZndpZHRoIGdyZWF0ZXJUaGFuIGdyZWF0ZXJUaGFuRXF1YWwgaW1hZ2VBdG9taWNBZGQgaW1hZ2VBdG9taWNBbmQgaW1hZ2VBdG9taWNDb21wU3dhcCBpbWFnZUF0b21pY0V4Y2hhbmdlIGltYWdlQXRvbWljTWF4IGltYWdlQXRvbWljTWluIGltYWdlQXRvbWljT3IgaW1hZ2VBdG9taWNYb3IgaW1hZ2VMb2FkIGltYWdlU3RvcmUgaW11bEV4dGVuZGVkIGludEJpdHNUb0Zsb2F0IGludGVycG9sYXRlQXRDZW50cm9pZCBpbnRlcnBvbGF0ZUF0T2Zmc2V0IGludGVycG9sYXRlQXRTYW1wbGUgaW52ZXJzZSBpbnZlcnNlc3FydCBpc2luZiBpc25hbiBsZGV4cCBsZW5ndGggbGVzc1RoYW4gbGVzc1RoYW5FcXVhbCBsb2cgbG9nMiBtYXRyaXhDb21wTXVsdCBtYXggbWVtb3J5QmFycmllciBtaW4gbWl4IG1vZCBtb2RmIG5vaXNlMSBub2lzZTIgbm9pc2UzIG5vaXNlNCBub3JtYWxpemUgbm90IG5vdEVxdWFsIG91dGVyUHJvZHVjdCBwYWNrRG91YmxlMngzMiBwYWNrSGFsZjJ4MTYgcGFja1Nub3JtMngxNiBwYWNrU25vcm00eDggcGFja1Vub3JtMngxNiBwYWNrVW5vcm00eDggcG93IHJhZGlhbnMgcmVmbGVjdCByZWZyYWN0IHJvdW5kIHJvdW5kRXZlbiBzaGFkb3cxRCBzaGFkb3cxRExvZCBzaGFkb3cxRFByb2ogc2hhZG93MURQcm9qTG9kIHNoYWRvdzJEIHNoYWRvdzJETG9kIHNoYWRvdzJEUHJvaiBzaGFkb3cyRFByb2pMb2Qgc2lnbiBzaW4gc2luaCBzbW9vdGhzdGVwIHNxcnQgc3RlcCB0YW4gdGFuaCB0ZXhlbEZldGNoIHRleGVsRmV0Y2hPZmZzZXQgdGV4dHVyZSB0ZXh0dXJlMUQgdGV4dHVyZTFETG9kIHRleHR1cmUxRFByb2ogdGV4dHVyZTFEUHJvakxvZCB0ZXh0dXJlMkQgdGV4dHVyZTJETG9kIHRleHR1cmUyRFByb2ogdGV4dHVyZTJEUHJvakxvZCB0ZXh0dXJlM0QgdGV4dHVyZTNETG9kIHRleHR1cmUzRFByb2ogdGV4dHVyZTNEUHJvakxvZCB0ZXh0dXJlQ3ViZSB0ZXh0dXJlQ3ViZUxvZCB0ZXh0dXJlR2F0aGVyIHRleHR1cmVHYXRoZXJPZmZzZXQgdGV4dHVyZUdhdGhlck9mZnNldHMgdGV4dHVyZUdyYWQgdGV4dHVyZUdyYWRPZmZzZXQgdGV4dHVyZUxvZCB0ZXh0dXJlTG9kT2Zmc2V0IHRleHR1cmVPZmZzZXQgdGV4dHVyZVByb2ogdGV4dHVyZVByb2pHcmFkIHRleHR1cmVQcm9qR3JhZE9mZnNldCB0ZXh0dXJlUHJvakxvZCB0ZXh0dXJlUHJvakxvZE9mZnNldCB0ZXh0dXJlUHJvak9mZnNldCB0ZXh0dXJlUXVlcnlMb2QgdGV4dHVyZVNpemUgdHJhbnNwb3NlIHRydW5jIHVhZGRDYXJyeSB1aW50Qml0c1RvRmxvYXQgdW11bEV4dGVuZGVkIHVucGFja0RvdWJsZTJ4MzIgdW5wYWNrSGFsZjJ4MTYgdW5wYWNrU25vcm0yeDE2IHVucGFja1Nub3JtNHg4IHVucGFja1Vub3JtMngxNiB1bnBhY2tVbm9ybTR4OCB1c3ViQm9ycm93IGdsX1RleHR1cmVNYXRyaXggZ2xfVGV4dHVyZU1hdHJpeEludmVyc2UiLGxpdGVyYWw6InRydWUgZmFsc2UifSxpOiciJyxjOltlLkNMQ00sZS5DQkNNLGUuQ05NLHtjTjoicHJlcHJvY2Vzc29yIixiOiIjIixlOiIkIn1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiZ28iLGZ1bmN0aW9uKGUpe3ZhciB0PXtrZXl3b3JkOiJicmVhayBkZWZhdWx0IGZ1bmMgaW50ZXJmYWNlIHNlbGVjdCBjYXNlIG1hcCBzdHJ1Y3QgY2hhbiBlbHNlIGdvdG8gcGFja2FnZSBzd2l0Y2ggY29uc3QgZmFsbHRocm91Z2ggaWYgcmFuZ2UgdHlwZSBjb250aW51ZSBmb3IgaW1wb3J0IHJldHVybiB2YXIgZ28gZGVmZXIiLGNvbnN0YW50OiJ0cnVlIGZhbHNlIGlvdGEgbmlsIix0eXBlbmFtZToiYm9vbCBieXRlIGNvbXBsZXg2NCBjb21wbGV4MTI4IGZsb2F0MzIgZmxvYXQ2NCBpbnQ4IGludDE2IGludDMyIGludDY0IHN0cmluZyB1aW50OCB1aW50MTYgdWludDMyIHVpbnQ2NCBpbnQgdWludCB1aW50cHRyIHJ1bmUiLGJ1aWx0X2luOiJhcHBlbmQgY2FwIGNsb3NlIGNvbXBsZXggY29weSBpbWFnIGxlbiBtYWtlIG5ldyBwYW5pYyBwcmludCBwcmludGxuIHJlYWwgcmVjb3ZlciBkZWxldGUifTtyZXR1cm57YWxpYXNlczpbImdvbGFuZyJdLGs6dCxpOiI8LyIsYzpbZS5DTENNLGUuQ0JDTSxlLlFTTSx7Y046InN0cmluZyIsYjoiJyIsZToiW15cXFxcXScifSx7Y046InN0cmluZyIsYjoiYCIsZToiYCJ9LHtjTjoibnVtYmVyIixiOmUuQ05SKyJbZGZsc2ldPyIscjowfSxlLkNOTV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJncmFkbGUiLGZ1bmN0aW9uKGUpe3JldHVybntjSTohMCxrOntrZXl3b3JkOiJ0YXNrIHByb2plY3QgYWxscHJvamVjdHMgc3VicHJvamVjdHMgYXJ0aWZhY3RzIGJ1aWxkc2NyaXB0IGNvbmZpZ3VyYXRpb25zIGRlcGVuZGVuY2llcyByZXBvc2l0b3JpZXMgc291cmNlU2V0cyBkZXNjcmlwdGlvbiBkZWxldGUgZnJvbSBpbnRvIGluY2x1ZGUgZXhjbHVkZSBzb3VyY2UgY2xhc3NwYXRoIGRlc3RpbmF0aW9uRGlyIGluY2x1ZGVzIG9wdGlvbnMgc291cmNlQ29tcGF0aWJpbGl0eSB0YXJnZXRDb21wYXRpYmlsaXR5IGdyb3VwIGZsYXREaXIgZG9MYXN0IGRvRmlyc3QgZmxhdHRlbiB0b2RpciBmcm9tZGlyIGFudCBkZWYgYWJzdHJhY3QgYnJlYWsgY2FzZSBjYXRjaCBjb250aW51ZSBkZWZhdWx0IGRvIGVsc2UgZXh0ZW5kcyBmaW5hbCBmaW5hbGx5IGZvciBpZiBpbXBsZW1lbnRzIGluc3RhbmNlb2YgbmF0aXZlIG5ldyBwcml2YXRlIHByb3RlY3RlZCBwdWJsaWMgcmV0dXJuIHN0YXRpYyBzd2l0Y2ggc3luY2hyb25pemVkIHRocm93IHRocm93cyB0cmFuc2llbnQgdHJ5IHZvbGF0aWxlIHdoaWxlIHN0cmljdGZwIHBhY2thZ2UgaW1wb3J0IGZhbHNlIG51bGwgc3VwZXIgdGhpcyB0cnVlIGFudGxydGFzayBjaGVja3N0eWxlIGNvZGVuYXJjIGNvcHkgYm9vbGVhbiBieXRlIGNoYXIgY2xhc3MgZG91YmxlIGZsb2F0IGludCBpbnRlcmZhY2UgbG9uZyBzaG9ydCB2b2lkIGNvbXBpbGUgcnVuVGltZSBmaWxlIGZpbGVUcmVlIGFicyBhbnkgYXBwZW5kIGFzTGlzdCBhc1dyaXRhYmxlIGNhbGwgY29sbGVjdCBjb21wYXJlVG8gY291bnQgZGl2IGR1bXAgZWFjaCBlYWNoQnl0ZSBlYWNoRmlsZSBlYWNoTGluZSBldmVyeSBmaW5kIGZpbmRBbGwgZmxhdHRlbiBnZXRBdCBnZXRFcnIgZ2V0SW4gZ2V0T3V0IGdldFRleHQgZ3JlcCBpbW11dGFibGUgaW5qZWN0IGluc3BlY3QgaW50ZXJzZWN0IGludm9rZU1ldGhvZHMgaXNDYXNlIGpvaW4gbGVmdFNoaWZ0IG1pbnVzIG11bHRpcGx5IG5ld0lucHV0U3RyZWFtIG5ld091dHB1dFN0cmVhbSBuZXdQcmludFdyaXRlciBuZXdSZWFkZXIgbmV3V3JpdGVyIG5leHQgcGx1cyBwb3AgcG93ZXIgcHJldmlvdXMgcHJpbnQgcHJpbnRsbiBwdXNoIHB1dEF0IHJlYWQgcmVhZEJ5dGVzIHJlYWRMaW5lcyByZXZlcnNlIHJldmVyc2VFYWNoIHJvdW5kIHNpemUgc29ydCBzcGxpdEVhY2hMaW5lIHN0ZXAgc3ViTWFwIHRpbWVzIHRvSW50ZWdlciB0b0xpc3QgdG9rZW5pemUgdXB0byB3YWl0Rm9yT3JLaWxsIHdpdGhQcmludFdyaXRlciB3aXRoUmVhZGVyIHdpdGhTdHJlYW0gd2l0aFdyaXRlciB3aXRoV3JpdGVyQXBwZW5kIHdyaXRlIHdyaXRlTGluZSJ9LGM6W2UuQ0xDTSxlLkNCQ00sZS5BU00sZS5RU00sZS5OTSxlLlJNXX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImdyb292eSIsZnVuY3Rpb24oZSl7cmV0dXJue2s6e3R5cGVuYW1lOiJieXRlIHNob3J0IGNoYXIgaW50IGxvbmcgYm9vbGVhbiBmbG9hdCBkb3VibGUgdm9pZCIsbGl0ZXJhbDoidHJ1ZSBmYWxzZSBudWxsIixrZXl3b3JkOiJkZWYgYXMgaW4gYXNzZXJ0IHRyYWl0IHN1cGVyIHRoaXMgYWJzdHJhY3Qgc3RhdGljIHZvbGF0aWxlIHRyYW5zaWVudCBwdWJsaWMgcHJpdmF0ZSBwcm90ZWN0ZWQgc3luY2hyb25pemVkIGZpbmFsIGNsYXNzIGludGVyZmFjZSBlbnVtIGlmIGVsc2UgZm9yIHdoaWxlIHN3aXRjaCBjYXNlIGJyZWFrIGRlZmF1bHQgY29udGludWUgdGhyb3cgdGhyb3dzIHRyeSBjYXRjaCBmaW5hbGx5IGltcGxlbWVudHMgZXh0ZW5kcyBuZXcgaW1wb3J0IHBhY2thZ2UgcmV0dXJuIGluc3RhbmNlb2YifSxjOltlLkNMQ00se2NOOiJqYXZhZG9jIixiOiIvXFwqXFwqIixlOiJcXCovLyoiLHI6MCxjOlt7Y046ImphdmFkb2N0YWciLGI6IihefFxccylAW0EtWmEtel0rIn1dfSxlLkNCQ00se2NOOiJzdHJpbmciLGI6JyIiIicsZTonIiIiJ30se2NOOiJzdHJpbmciLGI6IicnJyIsZToiJycnIn0se2NOOiJzdHJpbmciLGI6IlxcJC8iLGU6Ii9cXCQiLHI6MTB9LGUuQVNNLHtjTjoicmVnZXhwIixiOi9+P1wvW15cL1xuXStcLy8sYzpbZS5CRV19LGUuUVNNLHtjTjoic2hlYmFuZyIsYjoiXiMhL3Vzci9iaW4vZW52IixlOiIkIixpOiJcbiJ9LGUuQk5NLHtjTjoiY2xhc3MiLGJLOiJjbGFzcyBpbnRlcmZhY2UgdHJhaXQgZW51bSIsZToieyIsaToiOiIsYzpbe2JLOiJleHRlbmRzIGltcGxlbWVudHMifSxlLlVUTV19LGUuQ05NLHtjTjoiYW5ub3RhdGlvbiIsYjoiQFtBLVphLXpdKyJ9LHtjTjoic3RyaW5nIixiOi9bXlw/XXswfVtBLVphLXowLTlfJF0rICo6L30se2I6L1w/LyxlOi9cOi99LHtjTjoibGFiZWwiLGI6Il5cXHMqW0EtWmEtejAtOV8kXSs6IixyOjB9XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImhhbWwiLGZ1bmN0aW9uKCl7cmV0dXJue2NJOiEwLGM6W3tjTjoiZG9jdHlwZSIsYjoiXiEhISggKDV8MVxcLjF8U3RyaWN0fEZyYW1lc2V0fEJhc2ljfE1vYmlsZXxSREZhfFhNTFxcYi4qKSk/JCIscjoxMH0se2NOOiJjb21tZW50IixiOiJeXFxzKighPSN8PSN8LSN8LykuKiQiLHI6MH0se2I6Il5cXHMqKC18PXwhPSkoPyEjKSIsc3RhcnRzOntlOiJcXG4iLHNMOiJydWJ5In19LHtjTjoidGFnIixiOiJeXFxzKiUiLGM6W3tjTjoidGl0bGUiLGI6IlxcdysifSx7Y046InZhbHVlIixiOiJbI1xcLl1cXHcrIn0se2I6IntcXHMqIixlOiJcXHMqfSIsZUU6ITAsYzpbe2I6IjpcXHcrXFxzKj0+IixlOiIsXFxzKyIsckI6ITAsZVc6ITAsYzpbe2NOOiJzeW1ib2wiLGI6IjpcXHcrIn0se2NOOiJzdHJpbmciLGI6JyInLGU6JyInfSx7Y046InN0cmluZyIsYjoiJyIsZToiJyJ9LHtiOiJcXHcrIixyOjB9XX1dfSx7YjoiXFwoXFxzKiIsZToiXFxzKlxcKSIsZUU6ITAsYzpbe2I6IlxcdytcXHMqPSIsZToiXFxzKyIsckI6ITAsZVc6ITAsYzpbe2NOOiJhdHRyaWJ1dGUiLGI6IlxcdysiLHI6MH0se2NOOiJzdHJpbmciLGI6JyInLGU6JyInfSx7Y046InN0cmluZyIsYjoiJyIsZToiJyJ9LHtiOiJcXHcrIixyOjB9XX1dfV19LHtjTjoiYnVsbGV0IixiOiJeXFxzKls9fl1cXHMqIixyOjB9LHtiOiIjeyIsc3RhcnRzOntlOiJ9IixzTDoicnVieSJ9fV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJoYW5kbGViYXJzIixmdW5jdGlvbigpe3ZhciBlPSJlYWNoIGluIHdpdGggaWYgZWxzZSB1bmxlc3MgYmluZGF0dHIgYWN0aW9uIGNvbGxlY3Rpb24gZGVidWdnZXIgbG9nIG91dGxldCB0ZW1wbGF0ZSB1bmJvdW5kIHZpZXcgeWllbGQiO3JldHVybnthbGlhc2VzOlsiaGJzIiwiaHRtbC5oYnMiLCJodG1sLmhhbmRsZWJhcnMiXSxjSTohMCxzTDoieG1sIixzdWJMYW5ndWFnZU1vZGU6ImNvbnRpbnVvdXMiLGM6W3tjTjoiZXhwcmVzc2lvbiIsYjoie3siLGU6In19IixjOlt7Y046ImJlZ2luLWJsb2NrIixiOiIjW2EtekEtWi0gLl0rIixrOmV9LHtjTjoic3RyaW5nIixiOiciJyxlOiciJ30se2NOOiJlbmQtYmxvY2siLGI6IlxcL1thLXpBLVotIC5dKyIsazplfSx7Y046InZhcmlhYmxlIixiOiJbYS16QS1aLS5dKyIsazplfV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImhhc2tlbGwiLGZ1bmN0aW9uKGUpe3ZhciB0PXtjTjoiY29tbWVudCIsdjpbe2I6Ii0tIixlOiIkIn0se2I6InstIixlOiItfSIsYzpbInNlbGYiXX1dfSxyPXtjTjoicHJhZ21hIixiOiJ7LSMiLGU6IiMtfSJ9LGE9e2NOOiJwcmVwcm9jZXNzb3IiLGI6Il4jIixlOiIkIn0saT17Y046InR5cGUiLGI6IlxcYltBLVpdW1xcdyddKiIscjowfSxuPXtjTjoiY29udGFpbmVyIixiOiJcXCgiLGU6IlxcKSIsaTonIicsYzpbcix0LGEse2NOOiJ0eXBlIixiOiJcXGJbQS1aXVtcXHddKihcXCgoXFwuXFwufCx8XFx3KylcXCkpPyJ9LGUuaW5oZXJpdChlLlRNLHtiOiJbX2Etel1bXFx3J10qIn0pXX0sbz17Y046ImNvbnRhaW5lciIsYjoieyIsZToifSIsYzpuLmN9O3JldHVybnthbGlhc2VzOlsiaHMiXSxrOiJsZXQgaW4gaWYgdGhlbiBlbHNlIGNhc2Ugb2Ygd2hlcmUgZG8gbW9kdWxlIGltcG9ydCBoaWRpbmcgcXVhbGlmaWVkIHR5cGUgZGF0YSBuZXd0eXBlIGRlcml2aW5nIGNsYXNzIGluc3RhbmNlIGFzIGRlZmF1bHQgaW5maXggaW5maXhsIGluZml4ciBmb3JlaWduIGV4cG9ydCBjY2FsbCBzdGRjYWxsIGNwbHVzcGx1cyBqdm0gZG90bmV0IHNhZmUgdW5zYWZlIGZhbWlseSBmb3JhbGwgbWRvIHByb2MgcmVjIixjOlt7Y046Im1vZHVsZSIsYjoiXFxibW9kdWxlXFxiIixlOiJ3aGVyZSIsazoibW9kdWxlIHdoZXJlIixjOltuLHRdLGk6IlxcV1xcLnw7In0se2NOOiJpbXBvcnQiLGI6IlxcYmltcG9ydFxcYiIsZToiJCIsazoiaW1wb3J0fDAgcXVhbGlmaWVkIGFzIGhpZGluZyIsYzpbbix0XSxpOiJcXFdcXC58OyJ9LHtjTjoiY2xhc3MiLGI6Il4oXFxzKik/KGNsYXNzfGluc3RhbmNlKVxcYiIsZToid2hlcmUiLGs6ImNsYXNzIGZhbWlseSBpbnN0YW5jZSB3aGVyZSIsYzpbaSxuLHRdfSx7Y046InR5cGVkZWYiLGI6IlxcYihkYXRhfChuZXcpP3R5cGUpXFxiIixlOiIkIixrOiJkYXRhIGZhbWlseSB0eXBlIG5ld3R5cGUgZGVyaXZpbmciLGM6W3IsdCxpLG4sb119LHtjTjoiZGVmYXVsdCIsYks6ImRlZmF1bHQiLGU6IiQiLGM6W2ksbix0XX0se2NOOiJpbmZpeCIsYks6ImluZml4IGluZml4bCBpbmZpeHIiLGU6IiQiLGM6W2UuQ05NLHRdfSx7Y046ImZvcmVpZ24iLGI6IlxcYmZvcmVpZ25cXGIiLGU6IiQiLGs6ImZvcmVpZ24gaW1wb3J0IGV4cG9ydCBjY2FsbCBzdGRjYWxsIGNwbHVzcGx1cyBqdm0gZG90bmV0IHNhZmUgdW5zYWZlIixjOltpLGUuUVNNLHRdfSx7Y046InNoZWJhbmciLGI6IiMhXFwvdXNyXFwvYmluXFwvZW52IHJ1bmhhc2tlbGwiLGU6IiQifSxyLHQsYSxlLlFTTSxlLkNOTSxpLGUuaW5oZXJpdChlLlRNLHtiOiJeW19hLXpdW1xcdyddKiJ9KSx7YjoiLT58PC0ifV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJoYXhlIixmdW5jdGlvbihlKXt2YXIgdD0iKFsqXXxbYS16QS1aXyRdW2EtekEtWjAtOV8kXSopIjtyZXR1cm57YWxpYXNlczpbImh4Il0sazp7a2V5d29yZDoiYnJlYWsgY2FsbGJhY2sgY2FzZSBjYXN0IGNhdGNoIGNsYXNzIGNvbnRpbnVlIGRlZmF1bHQgZG8gZHluYW1pYyBlbHNlIGVudW0gZXh0ZW5kcyBleHRlcm4gZm9yIGZ1bmN0aW9uIGhlcmUgaWYgaW1wbGVtZW50cyBpbXBvcnQgaW4gaW5saW5lIGludGVyZmFjZSBuZXZlciBuZXcgb3ZlcnJpZGUgcGFja2FnZSBwcml2YXRlIHB1YmxpYyByZXR1cm4gc3RhdGljIHN1cGVyIHN3aXRjaCB0aGlzIHRocm93IHRyYWNlIHRyeSB0eXBlZGVmIHVudHlwZWQgdXNpbmcgdmFyIHdoaWxlIixsaXRlcmFsOiJ0cnVlIGZhbHNlIG51bGwifSxjOltlLkFTTSxlLlFTTSxlLkNMQ00sZS5DQkNNLGUuQ05NLHtjTjoiY2xhc3MiLGJLOiJjbGFzcyBpbnRlcmZhY2UiLGU6InsiLGVFOiEwLGM6W3tiSzoiZXh0ZW5kcyBpbXBsZW1lbnRzIn0sZS5UTV19LHtjTjoicHJlcHJvY2Vzc29yIixiOiIjIixlOiIkIixrOiJpZiBlbHNlIGVsc2VpZiBlbmQgZXJyb3IifSx7Y046ImZ1bmN0aW9uIixiSzoiZnVuY3Rpb24iLGU6Ilt7O10iLGVFOiEwLGk6IlxcUyIsYzpbZS5UTSx7Y046InBhcmFtcyIsYjoiXFwoIixlOiJcXCkiLGM6W2UuQVNNLGUuUVNNLGUuQ0xDTSxlLkNCQ01dfSx7Y046InR5cGUiLGI6IjoiLGU6dCxyOjEwfV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImh0dHAiLGZ1bmN0aW9uKCl7cmV0dXJue2k6IlxcUyIsYzpbe2NOOiJzdGF0dXMiLGI6Il5IVFRQL1swLTlcXC5dKyIsZToiJCIsYzpbe2NOOiJudW1iZXIiLGI6IlxcYlxcZHszfVxcYiJ9XX0se2NOOiJyZXF1ZXN0IixiOiJeW0EtWl0rICguKj8pIEhUVFAvWzAtOVxcLl0rJCIsckI6ITAsZToiJCIsYzpbe2NOOiJzdHJpbmciLGI6IiAiLGU6IiAiLGVCOiEwLGVFOiEwfV19LHtjTjoiYXR0cmlidXRlIixiOiJeXFx3IixlOiI6ICIsZUU6ITAsaToiXFxufFxcc3w9IixzdGFydHM6e2NOOiJzdHJpbmciLGU6IiQifX0se2I6IlxcblxcbiIsc3RhcnRzOntzTDoiIixlVzohMH19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImluaSIsZnVuY3Rpb24oZSl7cmV0dXJue2NJOiEwLGk6L1xTLyxjOlt7Y046ImNvbW1lbnQiLGI6IjsiLGU6IiQifSx7Y046InRpdGxlIixiOiJeXFxbIixlOiJcXF0ifSx7Y046InNldHRpbmciLGI6Il5bYS16MC05XFxbXFxdXy1dK1sgXFx0XSo9WyBcXHRdKiIsZToiJCIsYzpbe2NOOiJ2YWx1ZSIsZVc6ITAsazoib24gb2ZmIHRydWUgZmFsc2UgeWVzIG5vIixjOltlLlFTTSxlLk5NXSxyOjB9XX1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgiamF2YSIsZnVuY3Rpb24oZSl7dmFyIHQ9ZS5VSVIrIig8IitlLlVJUisiPik/IixyPSJmYWxzZSBzeW5jaHJvbml6ZWQgaW50IGFic3RyYWN0IGZsb2F0IHByaXZhdGUgY2hhciBib29sZWFuIHN0YXRpYyBudWxsIGlmIGNvbnN0IGZvciB0cnVlIHdoaWxlIGxvbmcgc3RyaWN0ZnAgZmluYWxseSBwcm90ZWN0ZWQgaW1wb3J0IG5hdGl2ZSBmaW5hbCB2b2lkIGVudW0gZWxzZSBicmVhayB0cmFuc2llbnQgY2F0Y2ggaW5zdGFuY2VvZiBieXRlIHN1cGVyIHZvbGF0aWxlIGNhc2UgYXNzZXJ0IHNob3J0IHBhY2thZ2UgZGVmYXVsdCBkb3VibGUgcHVibGljIHRyeSB0aGlzIHN3aXRjaCBjb250aW51ZSB0aHJvd3MgcHJvdGVjdGVkIHB1YmxpYyBwcml2YXRlIixhPSIoXFxiKDBiWzAxX10rKXxcXGIwW3hYXVthLWZBLUYwLTlfXSt8KFxcYltcXGRfXSsoXFwuW1xcZF9dKik/fFxcLltcXGRfXSspKFtlRV1bLStdP1xcZCspPylbbExmRl0/IixpPXtjTjoibnVtYmVyIixiOmEscjowfTsKICAgIHJldHVybnthbGlhc2VzOlsianNwIl0sazpyLGk6LzxcLy8sYzpbe2NOOiJqYXZhZG9jIixiOiIvXFwqXFwqIixlOiJcXCovIixyOjAsYzpbe2NOOiJqYXZhZG9jdGFnIixiOiIoXnxcXHMpQFtBLVphLXpdKyJ9XX0sZS5DTENNLGUuQ0JDTSxlLkFTTSxlLlFTTSx7Y046ImNsYXNzIixiSzoiY2xhc3MgaW50ZXJmYWNlIixlOi9bezs9XS8sZUU6ITAsazoiY2xhc3MgaW50ZXJmYWNlIixpOi9bOiJcW1xdXS8sYzpbe2JLOiJleHRlbmRzIGltcGxlbWVudHMifSxlLlVUTV19LHtiSzoibmV3IHRocm93IHJldHVybiIscjowfSx7Y046ImZ1bmN0aW9uIixiOiIoIit0KyJcXHMrKSsiK2UuVUlSKyJcXHMqXFwoIixyQjohMCxlOi9bezs9XS8sZUU6ITAsazpyLGM6W3tiOmUuVUlSKyJcXHMqXFwoIixyQjohMCxyOjAsYzpbZS5VVE1dfSx7Y046InBhcmFtcyIsYjovXCgvLGU6L1wpLyxrOnIscjowLGM6W2UuQVNNLGUuUVNNLGUuQ05NLGUuQ0JDTV19LGUuQ0xDTSxlLkNCQ01dfSxpLHtjTjoiYW5ub3RhdGlvbiIsYjoiQFtBLVphLXpdKyJ9XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImphdmFzY3JpcHQiLGZ1bmN0aW9uKGUpe3JldHVybnthbGlhc2VzOlsianMiXSxrOntrZXl3b3JkOiJpbiBpZiBmb3Igd2hpbGUgZmluYWxseSB2YXIgbmV3IGZ1bmN0aW9uIGRvIHJldHVybiB2b2lkIGVsc2UgYnJlYWsgY2F0Y2ggaW5zdGFuY2VvZiB3aXRoIHRocm93IGNhc2UgZGVmYXVsdCB0cnkgdGhpcyBzd2l0Y2ggY29udGludWUgdHlwZW9mIGRlbGV0ZSBsZXQgeWllbGQgY29uc3QgY2xhc3MiLGxpdGVyYWw6InRydWUgZmFsc2UgbnVsbCB1bmRlZmluZWQgTmFOIEluZmluaXR5IixidWlsdF9pbjoiZXZhbCBpc0Zpbml0ZSBpc05hTiBwYXJzZUZsb2F0IHBhcnNlSW50IGRlY29kZVVSSSBkZWNvZGVVUklDb21wb25lbnQgZW5jb2RlVVJJIGVuY29kZVVSSUNvbXBvbmVudCBlc2NhcGUgdW5lc2NhcGUgT2JqZWN0IEZ1bmN0aW9uIEJvb2xlYW4gRXJyb3IgRXZhbEVycm9yIEludGVybmFsRXJyb3IgUmFuZ2VFcnJvciBSZWZlcmVuY2VFcnJvciBTdG9wSXRlcmF0aW9uIFN5bnRheEVycm9yIFR5cGVFcnJvciBVUklFcnJvciBOdW1iZXIgTWF0aCBEYXRlIFN0cmluZyBSZWdFeHAgQXJyYXkgRmxvYXQzMkFycmF5IEZsb2F0NjRBcnJheSBJbnQxNkFycmF5IEludDMyQXJyYXkgSW50OEFycmF5IFVpbnQxNkFycmF5IFVpbnQzMkFycmF5IFVpbnQ4QXJyYXkgVWludDhDbGFtcGVkQXJyYXkgQXJyYXlCdWZmZXIgRGF0YVZpZXcgSlNPTiBJbnRsIGFyZ3VtZW50cyByZXF1aXJlIG1vZHVsZSBjb25zb2xlIHdpbmRvdyBkb2N1bWVudCJ9LGM6W3tjTjoicGkiLHI6MTAsdjpbe2I6L15ccyooJ3wiKXVzZSBzdHJpY3QoJ3wiKS99LHtiOi9eXHMqKCd8Iil1c2UgYXNtKCd8IikvfV19LGUuQVNNLGUuUVNNLGUuQ0xDTSxlLkNCQ00sZS5DTk0se2I6IigiK2UuUlNSKyJ8XFxiKGNhc2V8cmV0dXJufHRocm93KVxcYilcXHMqIixrOiJyZXR1cm4gdGhyb3cgY2FzZSIsYzpbZS5DTENNLGUuQ0JDTSxlLlJNLHtiOi88LyxlOi8+Oy8scjowLHNMOiJ4bWwifV0scjowfSx7Y046ImZ1bmN0aW9uIixiSzoiZnVuY3Rpb24iLGU6L1x7LyxlRTohMCxjOltlLmluaGVyaXQoZS5UTSx7YjovW0EtWmEteiRfXVswLTlBLVphLXokX10qL30pLHtjTjoicGFyYW1zIixiOi9cKC8sZTovXCkvLGM6W2UuQ0xDTSxlLkNCQ01dLGk6L1siJ1woXS99XSxpOi9cW3wlL30se2I6L1wkWyguXS99LHtiOiJcXC4iK2UuSVIscjowfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJqc29uIixmdW5jdGlvbihlKXt2YXIgdD17bGl0ZXJhbDoidHJ1ZSBmYWxzZSBudWxsIn0scj1bZS5RU00sZS5DTk1dLGE9e2NOOiJ2YWx1ZSIsZToiLCIsZVc6ITAsZUU6ITAsYzpyLGs6dH0saT17YjoieyIsZToifSIsYzpbe2NOOiJhdHRyaWJ1dGUiLGI6J1xccyoiJyxlOiciXFxzKjpcXHMqJyxlQjohMCxlRTohMCxjOltlLkJFXSxpOiJcXG4iLHN0YXJ0czphfV0saToiXFxTIn0sbj17YjoiXFxbIixlOiJcXF0iLGM6W2UuaW5oZXJpdChhLHtjTjpudWxsfSldLGk6IlxcUyJ9O3JldHVybiByLnNwbGljZShyLmxlbmd0aCwwLGksbikse2M6cixrOnQsaToiXFxTIn19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImxhc3NvIixmdW5jdGlvbihlKXt2YXIgdD0iW2EtekEtWl9dW2EtekEtWjAtOV8uXSoiLHI9IjxcXD8obGFzc28oc2NyaXB0KT98PSkiLGE9IlxcXXxcXD8+IixpPXtsaXRlcmFsOiJ0cnVlIGZhbHNlIG5vbmUgbWluaW1hbCBmdWxsIGFsbCB2b2lkIGFuZCBvciBub3QgYncgbmJ3IGV3IG5ldyBjbiBuY24gbHQgbHRlIGd0IGd0ZSBlcSBuZXEgcnggbnJ4IGZ0IixidWlsdF9pbjoiYXJyYXkgZGF0ZSBkZWNpbWFsIGR1cmF0aW9uIGludGVnZXIgbWFwIHBhaXIgc3RyaW5nIHRhZyB4bWwgbnVsbCBib29sZWFuIGJ5dGVzIGtleXdvcmQgbGlzdCBsb2NhbGUgcXVldWUgc2V0IHN0YWNrIHN0YXRpY2FycmF5IGxvY2FsIHZhciB2YXJpYWJsZSBnbG9iYWwgZGF0YSBzZWxmIGluaGVyaXRlZCIsa2V5d29yZDoiZXJyb3JfY29kZSBlcnJvcl9tc2cgZXJyb3JfcG9wIGVycm9yX3B1c2ggZXJyb3JfcmVzZXQgY2FjaGUgZGF0YWJhc2VfbmFtZXMgZGF0YWJhc2Vfc2NoZW1hbmFtZXMgZGF0YWJhc2VfdGFibGVuYW1lcyBkZWZpbmVfdGFnIGRlZmluZV90eXBlIGVtYWlsX2JhdGNoIGVuY29kZV9zZXQgaHRtbF9jb21tZW50IGhhbmRsZSBoYW5kbGVfZXJyb3IgaGVhZGVyIGlmIGlubGluZSBpdGVyYXRlIGxqYXhfdGFyZ2V0IGxpbmsgbGlua19jdXJyZW50YWN0aW9uIGxpbmtfY3VycmVudGdyb3VwIGxpbmtfY3VycmVudHJlY29yZCBsaW5rX2RldGFpbCBsaW5rX2ZpcnN0Z3JvdXAgbGlua19maXJzdHJlY29yZCBsaW5rX2xhc3Rncm91cCBsaW5rX2xhc3RyZWNvcmQgbGlua19uZXh0Z3JvdXAgbGlua19uZXh0cmVjb3JkIGxpbmtfcHJldmdyb3VwIGxpbmtfcHJldnJlY29yZCBsb2cgbG9vcCBuYW1lc3BhY2VfdXNpbmcgb3V0cHV0X25vbmUgcG9ydGFsIHByaXZhdGUgcHJvdGVjdCByZWNvcmRzIHJlZmVyZXIgcmVmZXJyZXIgcmVwZWF0aW5nIHJlc3VsdHNldCByb3dzIHNlYXJjaF9hcmdzIHNlYXJjaF9hcmd1bWVudHMgc2VsZWN0IHNvcnRfYXJncyBzb3J0X2FyZ3VtZW50cyB0aHJlYWRfYXRvbWljIHZhbHVlX2xpc3Qgd2hpbGUgYWJvcnQgY2FzZSBlbHNlIGlmX2VtcHR5IGlmX2ZhbHNlIGlmX251bGwgaWZfdHJ1ZSBsb29wX2Fib3J0IGxvb3BfY29udGludWUgbG9vcF9jb3VudCBwYXJhbXMgcGFyYW1zX3VwIHJldHVybiByZXR1cm5fdmFsdWUgcnVuX2NoaWxkcmVuIHNvYXBfZGVmaW5ldGFnIHNvYXBfbGFzdHJlcXVlc3Qgc29hcF9sYXN0cmVzcG9uc2UgdGFnX25hbWUgYXNjZW5kaW5nIGF2ZXJhZ2UgYnkgZGVmaW5lIGRlc2NlbmRpbmcgZG8gZXF1YWxzIGZyb3plbiBncm91cCBoYW5kbGVfZmFpbHVyZSBpbXBvcnQgaW4gaW50byBqb2luIGxldCBtYXRjaCBtYXggbWluIG9uIG9yZGVyIHBhcmVudCBwcm90ZWN0ZWQgcHJvdmlkZSBwdWJsaWMgcmVxdWlyZSByZXR1cm5ob21lIHNraXAgc3BsaXRfdGhyZWFkIHN1bSB0YWtlIHRocmVhZCB0byB0cmFpdCB0eXBlIHdoZXJlIHdpdGggeWllbGQgeWllbGRob21lIn0sbj17Y046ImNvbW1lbnQiLGI6IjwhLS0iLGU6Ii0tPiIscjowfSxvPXtjTjoicHJlcHJvY2Vzc29yIixiOiJcXFtub3Byb2Nlc3NcXF0iLHN0YXJ0czp7Y046Im1hcmt1cCIsZToiXFxbL25vcHJvY2Vzc1xcXSIsckU6ITAsYzpbbl19fSxzPXtjTjoicHJlcHJvY2Vzc29yIixiOiJcXFsvbm9wcm9jZXNzfCIrcn0sbD17Y046InZhcmlhYmxlIixiOiInIit0KyInIn0sYz1bZS5DTENNLHtjTjoiamF2YWRvYyIsYjoiL1xcKlxcKiEiLGU6IlxcKi8iLGM6W2UuUFdNXX0sZS5DQkNNLGUuaW5oZXJpdChlLkNOTSx7YjplLkNOUisifCgtP2luZmluaXR5fG5hbilcXGIifSksZS5pbmhlcml0KGUuQVNNLHtpOm51bGx9KSxlLmluaGVyaXQoZS5RU00se2k6bnVsbH0pLHtjTjoic3RyaW5nIixiOiJgIixlOiJgIn0se2NOOiJ2YXJpYWJsZSIsdjpbe2I6IlsjJF0iK3R9LHtiOiIjIixlOiJcXGQrIixpOiJcXFcifV19LHtjTjoidGFnIixiOiI6OlxccyoiLGU6dCxpOiJcXFcifSx7Y046ImF0dHJpYnV0ZSIsdjpbe2I6Ii0iK2UuVUlSLHI6MH0se2I6IihcXC5cXC5cXC4pIn1dfSx7Y046InN1YnN0Iix2Olt7YjoiLT5cXHMqIixjOltsXX0se2I6Ijo9fC8oPyFcXHcpPT98Wy0rKiU9PD4mfCE/XFxcXF0rIixyOjB9XX0se2NOOiJidWlsdF9pbiIsYjoiXFwuXFwuP1xccyoiLHI6MCxjOltsXX0se2NOOiJjbGFzcyIsYks6ImRlZmluZSIsckU6ITAsZToiXFwofD0+IixjOltlLmluaGVyaXQoZS5UTSx7YjplLlVJUisiKD0oPyE+KSk/In0pXX1dO3JldHVybnthbGlhc2VzOlsibHMiLCJsYXNzb3NjcmlwdCJdLGNJOiEwLGw6dCsifCZbbGdddDsiLGs6aSxjOlt7Y046InByZXByb2Nlc3NvciIsYjphLHI6MCxzdGFydHM6e2NOOiJtYXJrdXAiLGU6IlxcW3wiK3IsckU6ITAscjowLGM6W25dfX0sbyxzLHtjTjoicHJlcHJvY2Vzc29yIixiOiJcXFtub19zcXVhcmVfYnJhY2tldHMiLHN0YXJ0czp7ZToiXFxbL25vX3NxdWFyZV9icmFja2V0c1xcXSIsbDp0KyJ8JltsZ110OyIsazppLGM6W3tjTjoicHJlcHJvY2Vzc29yIixiOmEscjowLHN0YXJ0czp7Y046Im1hcmt1cCIsZToiXFxbbm9wcm9jZXNzXFxdfCIrcixyRTohMCxjOltuXX19LG8sc10uY29uY2F0KGMpfX0se2NOOiJwcmVwcm9jZXNzb3IiLGI6IlxcWyIscjowfSx7Y046InNoZWJhbmciLGI6Il4jIS4rbGFzc285XFxiIixyOjEwfV0uY29uY2F0KGMpfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgibGVzcyIsZnVuY3Rpb24oZSl7dmFyIHQ9IltcXHctXSsiLHI9IigiK3QrInxAeyIrdCsifSkrIixhPVtdLGk9W10sbj1mdW5jdGlvbihlKXtyZXR1cm57Y046InN0cmluZyIsYjoifj8iK2UrIi4qPyIrZX19LG89ZnVuY3Rpb24oZSx0LHIpe3JldHVybntjTjplLGI6dCxyOnJ9fSxzPWZ1bmN0aW9uKHQscixhKXtyZXR1cm4gZS5pbmhlcml0KHtjTjp0LGI6cisiXFwoIixlOiJcXCgiLHJCOiEwLGVFOiEwLHI6MH0sYSl9LGw9e2I6IlxcKCIsZToiXFwpIixjOmkscjowfTtpLnB1c2goZS5DTENNLGUuQ0JDTSxuKCInIiksbignIicpLGUuQ1NTTk0sbygiaGV4Y29sb3IiLCIjWzAtOUEtRmEtZl0rXFxiIikscygiZnVuY3Rpb24iLCIodXJsfGRhdGEtdXJpKSIse3N0YXJ0czp7Y046InN0cmluZyIsZToiW1xcKVxcbl0iLGVFOiEwfX0pLHMoImZ1bmN0aW9uIix0KSxsLG8oInZhcmlhYmxlIiwiQEA/Iit0LDEwKSxvKCJ2YXJpYWJsZSIsIkB7Iit0KyJ9IiksbygiYnVpbHRfaW4iLCJ+P2BbXmBdKj9gIikse2NOOiJhdHRyaWJ1dGUiLGI6dCsiXFxzKjoiLGU6IjoiLHJCOiEwLGVFOiEwfSk7dmFyIGM9aS5jb25jYXQoe2I6InsiLGU6In0iLGM6YX0pLHA9e2JLOiJ3aGVuIixlVzohMCxjOlt7Yks6ImFuZCBub3QifV0uY29uY2F0KGkpfSxkPXtjTjoiYXR0cmlidXRlIixiOnIsZToiOiIsZUU6ITAsYzpbZS5DTENNLGUuQ0JDTV0saTovXFMvLHN0YXJ0czp7ZToiWzt9XSIsckU6ITAsYzppLGk6Ils8PSRdIn19LHU9e2NOOiJhdF9ydWxlIixiOiJAKGltcG9ydHxtZWRpYXxjaGFyc2V0fGZvbnQtZmFjZXwoLVthLXpdKy0pP2tleWZyYW1lc3xzdXBwb3J0c3xkb2N1bWVudHxuYW1lc3BhY2V8cGFnZXx2aWV3cG9ydHxob3N0KVxcYiIsc3RhcnRzOntlOiJbO3t9XSIsckU6ITAsYzppLHI6MH19LG09e2NOOiJ2YXJpYWJsZSIsdjpbe2I6IkAiK3QrIlxccyo6IixyOjE1fSx7YjoiQCIrdH1dLHN0YXJ0czp7ZToiWzt9XSIsckU6ITAsYzpjfX0sYj17djpbe2I6IltcXC4jOiZcXFtdIixlOiJbO3t9XSJ9LHtiOnIrIlteO10qeyIsZToieyJ9XSxyQjohMCxyRTohMCxpOiJbPD0nJFwiXSIsYzpbZS5DTENNLGUuQ0JDTSxwLG8oImtleXdvcmQiLCJhbGxcXGIiKSxvKCJ2YXJpYWJsZSIsIkB7Iit0KyJ9IiksbygidGFnIixyKyIlPyIsMCksbygiaWQiLCIjIityKSxvKCJjbGFzcyIsIlxcLiIrciwwKSxvKCJrZXl3b3JkIiwiJiIsMCkscygicHNldWRvIiwiOm5vdCIpLHMoImtleXdvcmQiLCI6ZXh0ZW5kIiksbygicHNldWRvIiwiOjo/IityKSx7Y046ImF0dHJfc2VsZWN0b3IiLGI6IlxcWyIsZToiXFxdIn0se2I6IlxcKCIsZToiXFwpIixjOmN9LHtiOiIhaW1wb3J0YW50In1dfTtyZXR1cm4gYS5wdXNoKGUuQ0xDTSxlLkNCQ00sdSxtLGIsZCkse2NJOiEwLGk6Ils9PicvPCgkXCJdIixjOmF9fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJsaXNwIixmdW5jdGlvbihlKXt2YXIgdD0iW2EtekEtWl9cXC1cXCtcXCpcXC9cXDxcXD1cXD5cXCZcXCNdW2EtekEtWjAtOV9cXC1cXCtcXCpcXC9cXDxcXD1cXD5cXCZcXCMhXSoiLHI9IlxcfFteXSo/XFx8IixhPSIoXFwtfFxcKyk/XFxkKyhcXC5cXGQrfFxcL1xcZCspPygoZHxlfGZ8bHxzKShcXCt8XFwtKT9cXGQrKT8iLGk9e2NOOiJzaGViYW5nIixiOiJeIyEiLGU6IiQifSxuPXtjTjoibGl0ZXJhbCIsYjoiXFxiKHR7MX18bmlsKVxcYiJ9LG89e2NOOiJudW1iZXIiLHY6W3tiOmEscjowfSx7YjoiI2JbMC0xXSsoL1swLTFdKyk/In0se2I6IiNvWzAtN10rKC9bMC03XSspPyJ9LHtiOiIjeFswLTlhLWZdKygvWzAtOWEtZl0rKT8ifSx7YjoiI2NcXCgiK2ErIiArIithLGU6IlxcKSJ9XX0scz1lLmluaGVyaXQoZS5RU00se2k6bnVsbH0pLGw9e2NOOiJjb21tZW50IixiOiI7IixlOiIkIixyOjB9LGM9e2NOOiJ2YXJpYWJsZSIsYjoiXFwqIixlOiJcXCoifSxwPXtjTjoia2V5d29yZCIsYjoiWzomXSIrdH0sZD17YjpyfSx1PXtiOiJcXCgiLGU6IlxcKSIsYzpbInNlbGYiLG4scyxvXX0sbT17Y046InF1b3RlZCIsYzpbbyxzLGMscCx1XSx2Olt7YjoiWydgXVxcKCIsZToiXFwpIn0se2I6IlxcKHF1b3RlICIsZToiXFwpIixrOiJxdW90ZSJ9LHtiOiInIityfV19LGI9e2NOOiJxdW90ZWQiLGI6IiciK3R9LGc9e2NOOiJsaXN0IixiOiJcXCgiLGU6IlxcKSJ9LGY9e2VXOiEwLHI6MH07cmV0dXJuIGcuYz1be2NOOiJrZXl3b3JkIix2Olt7Yjp0fSx7YjpyfV19LGZdLGYuYz1bbSxiLGcsbixvLHMsbCxjLHAsZF0se2k6L1xTLyxjOltvLGksbixzLGwsbSxiLGddfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgibGl2ZWNvZGVzZXJ2ZXIiLGZ1bmN0aW9uKGUpe3ZhciB0PXtjTjoidmFyaWFibGUiLGI6IlxcYltndHBzXVtBLVpdK1tBLVphLXowLTlfXFwtXSpcXGJ8XFwkX1tBLVpdKyIscjowfSxyPXtjTjoiY29tbWVudCIsZToiJCIsdjpbZS5DQkNNLGUuSENNLHtiOiItLSJ9LHtiOiJbXjpdLy8ifV19LGE9ZS5pbmhlcml0KGUuVE0se3Y6W3tiOiJcXGJfKnJpZ1tBLVpdK1tBLVphLXowLTlfXFwtXSoifSx7YjoiXFxiX1thLXowLTlcXC1dKyJ9XX0pLGk9ZS5pbmhlcml0KGUuVE0se2I6IlxcYihbQS1aYS16MC05X1xcLV0rKVxcYiJ9KTtyZXR1cm57Y0k6ITEsazp7a2V5d29yZDoiYWZ0ZXIgYnl0ZSBieXRlcyBlbmdsaXNoIHRoZSB1bnRpbCBodHRwIGZvcmV2ZXIgZGVzY2VuZGluZyB1c2luZyBsaW5lIHJlYWw4IHdpdGggc2V2ZW50aCBmb3Igc3Rkb3V0IGZpbmFsbHkgZWxlbWVudCB3b3JkIGZvdXJ0aCBiZWZvcmUgYmxhY2sgbmludGggc2l4dGggY2hhcmFjdGVycyBjaGFycyBzdGRlcnIgdUludDEgdUludDFzIHVJbnQyIHVJbnQycyBzdGRpbiBzdHJpbmcgbGluZXMgcmVsYXRpdmUgcmVsIGFueSBmaWZ0aCBpdGVtcyBmcm9tIG1pZGRsZSBtaWQgYXQgZWxzZSBvZiBjYXRjaCB0aGVuIHRoaXJkIGl0IGZpbGUgbWlsbGlzZWNvbmRzIHNlY29uZHMgc2Vjb25kIHNlY3Mgc2VjIGludDEgaW50MXMgaW50NCBpbnQ0cyBpbnRlcm5ldCBpbnQyIGludDJzIG5vcm1hbCB0ZXh0IGl0ZW0gbGFzdCBsb25nIGRldGFpbGVkIGVmZmVjdGl2ZSB1SW50NCB1SW50NHMgcmVwZWF0IGVuZCByZXBlYXQgVVJMIGluIHRyeSBpbnRvIHN3aXRjaCB0byB3b3JkcyBodHRwcyB0b2tlbiBiaW5maWxlIGVhY2ggdGVudGggYXMgdGlja3MgdGljayBzeXN0ZW0gcmVhbDQgYnkgZGF0ZUl0ZW1zIHdpdGhvdXQgY2hhciBjaGFyYWN0ZXIgYXNjZW5kaW5nIGVpZ2h0aCB3aG9sZSBkYXRlVGltZSBudW1lcmljIHNob3J0IGZpcnN0IGZ0cCBpbnRlZ2VyIGFiYnJldmlhdGVkIGFiYnIgYWJicmV2IHByaXZhdGUgY2FzZSB3aGlsZSBpZiIsY29uc3RhbnQ6IlNJWCBURU4gRk9STUZFRUQgTklORSBaRVJPIE5PTkUgU1BBQ0UgRk9VUiBGQUxTRSBDT0xPTiBDUkxGIFBJIENPTU1BIEVORE9GRklMRSBFT0YgRUlHSFQgRklWRSBRVU9URSBFTVBUWSBPTkUgVFJVRSBSRVRVUk4gQ1IgTElORUZFRUQgUklHSFQgQkFDS1NMQVNIIE5VTEwgU0VWRU4gVEFCIFRIUkVFIFRXTyBzaXggdGVuIGZvcm1mZWVkIG5pbmUgemVybyBub25lIHNwYWNlIGZvdXIgZmFsc2UgY29sb24gY3JsZiBwaSBjb21tYSBlbmRvZmZpbGUgZW9mIGVpZ2h0IGZpdmUgcXVvdGUgZW1wdHkgb25lIHRydWUgcmV0dXJuIGNyIGxpbmVmZWVkIHJpZ2h0IGJhY2tzbGFzaCBudWxsIHNldmVuIHRhYiB0aHJlZSB0d28gUklWRVJTSU9OIFJJU1RBVEUgRklMRV9SRUFEX01PREUgRklMRV9XUklURV9NT0RFIEZJTEVfV1JJVEVfTU9ERSBESVJfV1JJVEVfTU9ERSBGSUxFX1JFQURfVU1BU0sgRklMRV9XUklURV9VTUFTSyBESVJfUkVBRF9VTUFTSyBESVJfV1JJVEVfVU1BU0siLG9wZXJhdG9yOiJkaXYgbW9kIHdyYXAgYW5kIG9yIGJpdEFuZCBiaXROb3QgYml0T3IgYml0WG9yIGFtb25nIG5vdCBpbiBhIGFuIHdpdGhpbiBjb250YWlucyBlbmRzIHdpdGggYmVnaW5zIHRoZSBrZXlzIG9mIGtleXMiLGJ1aWx0X2luOiJwdXQgYWJzIGFjb3MgYWxpYXNSZWZlcmVuY2UgYW5udWl0eSBhcnJheURlY29kZSBhcnJheUVuY29kZSBhc2luIGF0YW4gYXRhbjIgYXZlcmFnZSBhdmcgYmFzZTY0RGVjb2RlIGJhc2U2NEVuY29kZSBiYXNlQ29udmVydCBiaW5hcnlEZWNvZGUgYmluYXJ5RW5jb2RlIGJ5dGVUb051bSBjYWNoZWRVUkwgY2FjaGVkVVJMcyBjaGFyVG9OdW0gY2lwaGVyTmFtZXMgY29tbWFuZE5hbWVzIGNvbXBvdW5kIGNvbXByZXNzIGNvbnN0YW50TmFtZXMgY29zIGRhdGUgZGF0ZUZvcm1hdCBkZWNvbXByZXNzIGRpcmVjdG9yaWVzIGRpc2tTcGFjZSBETlNTZXJ2ZXJzIGV4cCBleHAxIGV4cDIgZXhwMTAgZXh0ZW50cyBmaWxlcyBmbHVzaEV2ZW50cyBmb2xkZXJzIGZvcm1hdCBmdW5jdGlvbk5hbWVzIGdsb2JhbCBnbG9iYWxzIGhhc01lbW9yeSBob3N0QWRkcmVzcyBob3N0QWRkcmVzc1RvTmFtZSBob3N0TmFtZSBob3N0TmFtZVRvQWRkcmVzcyBpc051bWJlciBJU09Ub01hYyBpdGVtT2Zmc2V0IGtleXMgbGVuIGxlbmd0aCBsaWJVUkxFcnJvckRhdGEgbGliVXJsRm9ybURhdGEgbGliVVJMZnRwQ29tbWFuZCBsaWJVUkxMYXN0SFRUUEhlYWRlcnMgbGliVVJMTGFzdFJISGVhZGVycyBsaWJVcmxNdWx0aXBhcnRGb3JtQWRkUGFydCBsaWJVcmxNdWx0aXBhcnRGb3JtRGF0YSBsaWJVUkxWZXJzaW9uIGxpbmVPZmZzZXQgbG4gbG4xIGxvY2FsTmFtZXMgbG9nIGxvZzIgbG9nMTAgbG9uZ0ZpbGVQYXRoIGxvd2VyIG1hY1RvSVNPIG1hdGNoQ2h1bmsgbWF0Y2hUZXh0IG1hdHJpeE11bHRpcGx5IG1heCBtZDVEaWdlc3QgbWVkaWFuIG1lcmdlIG1pbGxpc2VjIG1pbGxpc2VjcyBtaWxsaXNlY29uZCBtaWxsaXNlY29uZHMgbWluIG1vbnRoTmFtZXMgbnVtIG51bWJlciBudW1Ub0J5dGUgbnVtVG9DaGFyIG9mZnNldCBvcGVuIG9wZW5maWxlcyBvcGVuUHJvY2Vzc2VzIG9wZW5Qcm9jZXNzSURzIG9wZW5Tb2NrZXRzIHBhcmFtQ291bnQgcGFyYW0gcGFyYW1zIHBlZXJBZGRyZXNzIHBlbmRpbmdNZXNzYWdlcyBwbGF0Zm9ybSBwcm9jZXNzSUQgcmFuZG9tIHJhbmRvbUJ5dGVzIHJlcGxhY2VUZXh0IHJlc3VsdCByZXZDcmVhdGVYTUxUcmVlIHJldkNyZWF0ZVhNTFRyZWVGcm9tRmlsZSByZXZDdXJyZW50UmVjb3JkIHJldkN1cnJlbnRSZWNvcmRJc0ZpcnN0IHJldkN1cnJlbnRSZWNvcmRJc0xhc3QgcmV2RGF0YWJhc2VDb2x1bW5Db3VudCByZXZEYXRhYmFzZUNvbHVtbklzTnVsbCByZXZEYXRhYmFzZUNvbHVtbkxlbmd0aHMgcmV2RGF0YWJhc2VDb2x1bW5OYW1lcyByZXZEYXRhYmFzZUNvbHVtbk5hbWVkIHJldkRhdGFiYXNlQ29sdW1uTnVtYmVyZWQgcmV2RGF0YWJhc2VDb2x1bW5UeXBlcyByZXZEYXRhYmFzZUNvbm5lY3RSZXN1bHQgcmV2RGF0YWJhc2VDdXJzb3JzIHJldkRhdGFiYXNlSUQgcmV2RGF0YWJhc2VUYWJsZU5hbWVzIHJldkRhdGFiYXNlVHlwZSByZXZEYXRhRnJvbVF1ZXJ5IHJldmRiX2Nsb3NlQ3Vyc29yIHJldmRiX2NvbHVtbmJ5bnVtYmVyIHJldmRiX2NvbHVtbmNvdW50IHJldmRiX2NvbHVtbmlzbnVsbCByZXZkYl9jb2x1bW5sZW5ndGhzIHJldmRiX2NvbHVtbm5hbWVzIHJldmRiX2NvbHVtbnR5cGVzIHJldmRiX2NvbW1pdCByZXZkYl9jb25uZWN0IHJldmRiX2Nvbm5lY3Rpb25zIHJldmRiX2Nvbm5lY3Rpb25lcnIgcmV2ZGJfY3VycmVudHJlY29yZCByZXZkYl9jdXJzb3Jjb25uZWN0aW9uIHJldmRiX2N1cnNvcmVyciByZXZkYl9jdXJzb3JzIHJldmRiX2RidHlwZSByZXZkYl9kaXNjb25uZWN0IHJldmRiX2V4ZWN1dGUgcmV2ZGJfaXNlb2YgcmV2ZGJfaXNib2YgcmV2ZGJfbW92ZWZpcnN0IHJldmRiX21vdmVsYXN0IHJldmRiX21vdmVuZXh0IHJldmRiX21vdmVwcmV2IHJldmRiX3F1ZXJ5IHJldmRiX3F1ZXJ5bGlzdCByZXZkYl9yZWNvcmRjb3VudCByZXZkYl9yb2xsYmFjayByZXZkYl90YWJsZW5hbWVzIHJldkdldERhdGFiYXNlRHJpdmVyUGF0aCByZXZOdW1iZXJPZlJlY29yZHMgcmV2T3BlbkRhdGFiYXNlIHJldk9wZW5EYXRhYmFzZXMgcmV2UXVlcnlEYXRhYmFzZSByZXZRdWVyeURhdGFiYXNlQmxvYiByZXZRdWVyeVJlc3VsdCByZXZRdWVyeUlzQXRTdGFydCByZXZRdWVyeUlzQXRFbmQgcmV2VW5peEZyb21NYWNQYXRoIHJldlhNTEF0dHJpYnV0ZSByZXZYTUxBdHRyaWJ1dGVzIHJldlhNTEF0dHJpYnV0ZVZhbHVlcyByZXZYTUxDaGlsZENvbnRlbnRzIHJldlhNTENoaWxkTmFtZXMgcmV2WE1MRmlyc3RDaGlsZCByZXZYTUxNYXRjaGluZ05vZGUgcmV2WE1MTmV4dFNpYmxpbmcgcmV2WE1MTm9kZUNvbnRlbnRzIHJldlhNTE51bWJlck9mQ2hpbGRyZW4gcmV2WE1MUGFyZW50IHJldlhNTFByZXZpb3VzU2libGluZyByZXZYTUxSb290Tm9kZSByZXZYTUxSUENfQ3JlYXRlUmVxdWVzdCByZXZYTUxSUENfRG9jdW1lbnRzIHJldlhNTFJQQ19FcnJvciByZXZYTUxSUENfRXhlY3V0ZSByZXZYTUxSUENfR2V0SG9zdCByZXZYTUxSUENfR2V0TWV0aG9kIHJldlhNTFJQQ19HZXRQYXJhbSByZXZYTUxUZXh0IHJldlhNTFJQQ19HZXRQYXJhbUNvdW50IHJldlhNTFJQQ19HZXRQYXJhbU5vZGUgcmV2WE1MUlBDX0dldFBhcmFtVHlwZSByZXZYTUxSUENfR2V0UGF0aCByZXZYTUxSUENfR2V0UG9ydCByZXZYTUxSUENfR2V0UHJvdG9jb2wgcmV2WE1MUlBDX0dldFJlcXVlc3QgcmV2WE1MUlBDX0dldFJlc3BvbnNlIHJldlhNTFJQQ19HZXRTb2NrZXQgcmV2WE1MVHJlZSByZXZYTUxUcmVlcyByZXZYTUxWYWxpZGF0ZURURCByZXZaaXBEZXNjcmliZUl0ZW0gcmV2WmlwRW51bWVyYXRlSXRlbXMgcmV2WmlwT3BlbkFyY2hpdmVzIHJvdW5kIHNlYyBzZWNzIHNlY29uZHMgc2hhMURpZ2VzdCBzaGVsbCBzaG9ydEZpbGVQYXRoIHNpbiBzcGVjaWFsRm9sZGVyUGF0aCBzcXJ0IHN0YW5kYXJkRGV2aWF0aW9uIHN0YXRSb3VuZCBzdGREZXYgc3VtIHN5c0Vycm9yIHN5c3RlbVZlcnNpb24gdGFuIHRlbXBOYW1lIHRpY2sgdGlja3MgdGltZSB0byB0b0xvd2VyIHRvVXBwZXIgdHJhbnNwb3NlIHRydW5jIHVuaURlY29kZSB1bmlFbmNvZGUgdXBwZXIgVVJMRGVjb2RlIFVSTEVuY29kZSBVUkxTdGF0dXMgdmFsdWUgdmFyaWFibGVOYW1lcyB2ZXJzaW9uIHdhaXREZXB0aCB3ZWVrZGF5TmFtZXMgd29yZE9mZnNldCBhZGQgYnJlYWtwb2ludCBjYW5jZWwgY2xlYXIgbG9jYWwgdmFyaWFibGUgZmlsZSB3b3JkIGxpbmUgZm9sZGVyIGRpcmVjdG9yeSBVUkwgY2xvc2Ugc29ja2V0IHByb2Nlc3MgY29tYmluZSBjb25zdGFudCBjb252ZXJ0IGNyZWF0ZSBuZXcgYWxpYXMgZm9sZGVyIGRpcmVjdG9yeSBkZWNyeXB0IGRlbGV0ZSB2YXJpYWJsZSB3b3JkIGxpbmUgZm9sZGVyIGRpcmVjdG9yeSBVUkwgZGlzcGF0Y2ggZGl2aWRlIGRvIGVuY3J5cHQgZmlsdGVyIGdldCBpbmNsdWRlIGludGVyc2VjdCBraWxsIGxpYlVSTERvd25sb2FkVG9GaWxlIGxpYlVSTEZvbGxvd0h0dHBSZWRpcmVjdHMgbGliVVJMZnRwVXBsb2FkIGxpYlVSTGZ0cFVwbG9hZEZpbGUgbGliVVJMcmVzZXRBbGwgbGliVXJsU2V0QXV0aENhbGxiYWNrIGxpYlVSTFNldEN1c3RvbUhUVFBIZWFkZXJzIGxpYlVybFNldEV4cGVjdDEwMCBsaWJVUkxTZXRGVFBMaXN0Q29tbWFuZCBsaWJVUkxTZXRGVFBNb2RlIGxpYlVSTFNldEZUUFN0b3BUaW1lIGxpYlVSTFNldFN0YXR1c0NhbGxiYWNrIGxvYWQgbXVsdGlwbHkgc29ja2V0IHByb2Nlc3MgcG9zdCBzZWVrIHJlbCByZWxhdGl2ZSByZWFkIGZyb20gcHJvY2VzcyByZW5hbWUgcmVwbGFjZSByZXF1aXJlIHJlc2V0QWxsIHJldkFkZFhNTE5vZGUgcmV2QXBwZW5kWE1MIHJldkNsb3NlQ3Vyc29yIHJldkNsb3NlRGF0YWJhc2UgcmV2Q29tbWl0RGF0YWJhc2UgcmV2Q29weUZpbGUgcmV2Q29weUZvbGRlciByZXZDb3B5WE1MTm9kZSByZXZEZWxldGVGb2xkZXIgcmV2RGVsZXRlWE1MTm9kZSByZXZEZWxldGVBbGxYTUxUcmVlcyByZXZEZWxldGVYTUxUcmVlIHJldkV4ZWN1dGVTUUwgcmV2R29VUkwgcmV2SW5zZXJ0WE1MTm9kZSByZXZNb3ZlRm9sZGVyIHJldk1vdmVUb0ZpcnN0UmVjb3JkIHJldk1vdmVUb0xhc3RSZWNvcmQgcmV2TW92ZVRvTmV4dFJlY29yZCByZXZNb3ZlVG9QcmV2aW91c1JlY29yZCByZXZNb3ZlVG9SZWNvcmQgcmV2TW92ZVhNTE5vZGUgcmV2UHV0SW50b1hNTE5vZGUgcmV2Um9sbEJhY2tEYXRhYmFzZSByZXZTZXREYXRhYmFzZURyaXZlclBhdGggcmV2U2V0WE1MQXR0cmlidXRlIHJldlhNTFJQQ19BZGRQYXJhbSByZXZYTUxSUENfRGVsZXRlQWxsRG9jdW1lbnRzIHJldlhNTEFkZERURCByZXZYTUxSUENfRnJlZSByZXZYTUxSUENfRnJlZUFsbCByZXZYTUxSUENfRGVsZXRlRG9jdW1lbnQgcmV2WE1MUlBDX0RlbGV0ZVBhcmFtIHJldlhNTFJQQ19TZXRIb3N0IHJldlhNTFJQQ19TZXRNZXRob2QgcmV2WE1MUlBDX1NldFBvcnQgcmV2WE1MUlBDX1NldFByb3RvY29sIHJldlhNTFJQQ19TZXRTb2NrZXQgcmV2WmlwQWRkSXRlbVdpdGhEYXRhIHJldlppcEFkZEl0ZW1XaXRoRmlsZSByZXZaaXBBZGRVbmNvbXByZXNzZWRJdGVtV2l0aERhdGEgcmV2WmlwQWRkVW5jb21wcmVzc2VkSXRlbVdpdGhGaWxlIHJldlppcENhbmNlbCByZXZaaXBDbG9zZUFyY2hpdmUgcmV2WmlwRGVsZXRlSXRlbSByZXZaaXBFeHRyYWN0SXRlbVRvRmlsZSByZXZaaXBFeHRyYWN0SXRlbVRvVmFyaWFibGUgcmV2WmlwU2V0UHJvZ3Jlc3NDYWxsYmFjayByZXZaaXBSZW5hbWVJdGVtIHJldlppcFJlcGxhY2VJdGVtV2l0aERhdGEgcmV2WmlwUmVwbGFjZUl0ZW1XaXRoRmlsZSByZXZaaXBPcGVuQXJjaGl2ZSBzZW5kIHNldCBzb3J0IHNwbGl0IHN1YnRyYWN0IHVuaW9uIHVubG9hZCB3YWl0IHdyaXRlIn0sYzpbdCx7Y046ImtleXdvcmQiLGI6IlxcYmVuZFxcc2lmXFxiIn0se2NOOiJmdW5jdGlvbiIsYks6ImZ1bmN0aW9uIixlOiIkIixjOlt0LGksZS5BU00sZS5RU00sZS5CTk0sZS5DTk0sYV19LHtjTjoiZnVuY3Rpb24iLGJLOiJlbmQiLGU6IiQiLGM6W2ksYV19LHtjTjoiY29tbWFuZCIsYks6ImNvbW1hbmQgb24iLGU6IiQiLGM6W3QsaSxlLkFTTSxlLlFTTSxlLkJOTSxlLkNOTSxhXX0se2NOOiJjb21tYW5kIixiSzoiZW5kIixlOiIkIixjOltpLGFdfSx7Y046InByZXByb2Nlc3NvciIsYjoiPFxcP3Jldnw8XFw/bGN8PFxcP2xpdmVjb2RlIixyOjEwfSx7Y046InByZXByb2Nlc3NvciIsYjoiPFxcPyJ9LHtjTjoicHJlcHJvY2Vzc29yIixiOiJcXD8+In0scixlLkFTTSxlLlFTTSxlLkJOTSxlLkNOTSxhXSxpOiI7JHxeXFxbfF49In19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoImxpdmVzY3JpcHQiLGZ1bmN0aW9uKGUpe3ZhciB0PXtrZXl3b3JkOiJpbiBpZiBmb3Igd2hpbGUgZmluYWxseSBuZXcgZG8gcmV0dXJuIGVsc2UgYnJlYWsgY2F0Y2ggaW5zdGFuY2VvZiB0aHJvdyB0cnkgdGhpcyBzd2l0Y2ggY29udGludWUgdHlwZW9mIGRlbGV0ZSBkZWJ1Z2dlciBjYXNlIGRlZmF1bHQgZnVuY3Rpb24gdmFyIHdpdGggdGhlbiB1bmxlc3MgdW50aWwgbG9vcCBvZiBieSB3aGVuIGFuZCBvciBpcyBpc250IG5vdCBpdCB0aGF0IG90aGVyd2lzZSBmcm9tIHRvIHRpbCBmYWxsdGhyb3VnaCBzdXBlciBjYXNlIGRlZmF1bHQgZnVuY3Rpb24gdmFyIHZvaWQgY29uc3QgbGV0IGVudW0gZXhwb3J0IGltcG9ydCBuYXRpdmUgX19oYXNQcm9wIF9fZXh0ZW5kcyBfX3NsaWNlIF9fYmluZCBfX2luZGV4T2YiLGxpdGVyYWw6InRydWUgZmFsc2UgbnVsbCB1bmRlZmluZWQgeWVzIG5vIG9uIG9mZiBpdCB0aGF0IHZvaWQiLGJ1aWx0X2luOiJucG0gcmVxdWlyZSBjb25zb2xlIHByaW50IG1vZHVsZSBnbG9iYWwgd2luZG93IGRvY3VtZW50In0scj0iW0EtWmEteiRfXSg/Oi1bMC05QS1aYS16JF9dfFswLTlBLVphLXokX10pKiIsYT1lLmluaGVyaXQoZS5UTSx7YjpyfSksaT17Y046InN1YnN0IixiOi8jXHsvLGU6L1x9LyxrOnR9LG49e2NOOiJzdWJzdCIsYjovI1tBLVphLXokX10vLGU6Lyg/OlwtWzAtOUEtWmEteiRfXXxbMC05QS1aYS16JF9dKSovLGs6dH0sbz1bZS5CTk0se2NOOiJudW1iZXIiLGI6IihcXGIwW3hYXVthLWZBLUYwLTlfXSspfChcXGJcXGQoXFxkfF9cXGQpKihcXC4oXFxkKFxcZHxfXFxkKSopPyk/KF8qW2VFXShbLStdXFxkKF9cXGR8XFxkKSopPyk/W19hLXpdKikiLHI6MCxzdGFydHM6e2U6IihcXHMqLyk/IixyOjB9fSx7Y046InN0cmluZyIsdjpbe2I6LycnJy8sZTovJycnLyxjOltlLkJFXX0se2I6LycvLGU6LycvLGM6W2UuQkVdfSx7YjovIiIiLyxlOi8iIiIvLGM6W2UuQkUsaSxuXX0se2I6LyIvLGU6LyIvLGM6W2UuQkUsaSxuXX0se2I6L1xcLyxlOi8oXHN8JCkvLGVFOiEwfV19LHtjTjoicGkiLHY6W3tiOiIvLyIsZToiLy9bZ2ltXSoiLGM6W2ksZS5IQ01dfSx7YjovXC8oPyFbICpdKShcXFwvfC4pKj9cL1tnaW1dKig/PVxXfCQpL31dfSx7Y046InByb3BlcnR5IixiOiJAIityfSx7YjoiYGAiLGU6ImBgIixlQjohMCxlRTohMCxzTDoiamF2YXNjcmlwdCJ9XTtpLmM9bzt2YXIgcz17Y046InBhcmFtcyIsYjoiXFwoIixyQjohMCxjOlt7YjovXCgvLGU6L1wpLyxrOnQsYzpbInNlbGYiXS5jb25jYXQobyl9XX07cmV0dXJue2FsaWFzZXM6WyJscyJdLGs6dCxpOi9cL1wqLyxjOm8uY29uY2F0KFt7Y046ImNvbW1lbnQiLGI6IlxcL1xcKiIsZToiXFwqXFwvIn0sZS5IQ00se2NOOiJmdW5jdGlvbiIsYzpbYSxzXSxyQjohMCx2Olt7YjoiKCIrcisiXFxzKig/Oj18Oj0pXFxzKik/KFxcKC4qXFwpKT9cXHMqXFxCXFwtPlxcKj8iLGU6IlxcLT5cXCo/In0se2I6IigiK3IrIlxccyooPzo9fDo9KVxccyopPyE/KFxcKC4qXFwpKT9cXHMqXFxCWy1+XXsxLDJ9PlxcKj8iLGU6Ilstfl17MSwyfT5cXCo/In0se2I6IigiK3IrIlxccyooPzo9fDo9KVxccyopPyhcXCguKlxcKSk/XFxzKlxcQiE/Wy1+XXsxLDJ9PlxcKj8iLGU6IiE/Wy1+XXsxLDJ9PlxcKj8ifV19LHtjTjoiY2xhc3MiLGJLOiJjbGFzcyIsZToiJCIsaTovWzo9IlxbXF1dLyxjOlt7Yks6ImV4dGVuZHMiLGVXOiEwLGk6L1s6PSJcW1xdXS8sYzpbYV19LGFdfSx7Y046ImF0dHJpYnV0ZSIsYjpyKyI6IixlOiI6IixyQjohMCxyRTohMCxyOjB9XSl9fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJsdWEiLGZ1bmN0aW9uKGUpe3ZhciB0PSJcXFs9KlxcWyIscj0iXFxdPSpcXF0iLGE9e2I6dCxlOnIsYzpbInNlbGYiXX0saT1be2NOOiJjb21tZW50IixiOiItLSg/ISIrdCsiKSIsZToiJCJ9LHtjTjoiY29tbWVudCIsYjoiLS0iK3QsZTpyLGM6W2FdLHI6MTB9XTtyZXR1cm57bDplLlVJUixrOntrZXl3b3JkOiJhbmQgYnJlYWsgZG8gZWxzZSBlbHNlaWYgZW5kIGZhbHNlIGZvciBpZiBpbiBsb2NhbCBuaWwgbm90IG9yIHJlcGVhdCByZXR1cm4gdGhlbiB0cnVlIHVudGlsIHdoaWxlIixidWlsdF9pbjoiX0cgX1ZFUlNJT04gYXNzZXJ0IGNvbGxlY3RnYXJiYWdlIGRvZmlsZSBlcnJvciBnZXRmZW52IGdldG1ldGF0YWJsZSBpcGFpcnMgbG9hZCBsb2FkZmlsZSBsb2Fkc3RyaW5nIG1vZHVsZSBuZXh0IHBhaXJzIHBjYWxsIHByaW50IHJhd2VxdWFsIHJhd2dldCByYXdzZXQgcmVxdWlyZSBzZWxlY3Qgc2V0ZmVudiBzZXRtZXRhdGFibGUgdG9udW1iZXIgdG9zdHJpbmcgdHlwZSB1bnBhY2sgeHBjYWxsIGNvcm91dGluZSBkZWJ1ZyBpbyBtYXRoIG9zIHBhY2thZ2Ugc3RyaW5nIHRhYmxlIn0sYzppLmNvbmNhdChbe2NOOiJmdW5jdGlvbiIsYks6ImZ1bmN0aW9uIixlOiJcXCkiLGM6W2UuaW5oZXJpdChlLlRNLHtiOiIoW19hLXpBLVpdXFx3KlxcLikqKFtfYS16QS1aXVxcdyo6KT9bX2EtekEtWl1cXHcqIn0pLHtjTjoicGFyYW1zIixiOiJcXCgiLGVXOiEwLGM6aX1dLmNvbmNhdChpKX0sZS5DTk0sZS5BU00sZS5RU00se2NOOiJzdHJpbmciLGI6dCxlOnIsYzpbYV0scjo1fV0pfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgibWFrZWZpbGUiLGZ1bmN0aW9uKGUpe3ZhciB0PXtjTjoidmFyaWFibGUiLGI6L1wkXCgvLGU6L1wpLyxjOltlLkJFXX07cmV0dXJue2FsaWFzZXM6WyJtayIsIm1hayJdLGM6W2UuSENNLHtiOi9eXHcrXHMqXFcqPS8sckI6ITAscjowLHN0YXJ0czp7Y046ImNvbnN0YW50IixlOi9ccypcVyo9LyxlRTohMCxzdGFydHM6e2U6LyQvLHI6MCxjOlt0XX19fSx7Y046InRpdGxlIixiOi9eW1x3XSs6XHMqJC99LHtjTjoicGhvbnkiLGI6L15cLlBIT05ZOi8sZTovJC8sazoiLlBIT05ZIixsOi9bXC5cd10rL30se2I6L15cdCsvLGU6LyQvLHI6MCxjOltlLlFTTSx0XX1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgibWF0aGVtYXRpY2EiLGZ1bmN0aW9uKGUpe3JldHVybnthbGlhc2VzOlsibW1hIl0sbDoiKFxcJHxcXGIpIitlLklSKyJcXGIiLGs6IkFiZWxpYW5Hcm91cCBBYm9ydCBBYm9ydEtlcm5lbHMgQWJvcnRQcm90ZWN0IEFib3ZlIEFicyBBYnNvbHV0ZSBBYnNvbHV0ZUNvcnJlbGF0aW9uIEFic29sdXRlQ29ycmVsYXRpb25GdW5jdGlvbiBBYnNvbHV0ZUN1cnJlbnRWYWx1ZSBBYnNvbHV0ZURhc2hpbmcgQWJzb2x1dGVGaWxlTmFtZSBBYnNvbHV0ZU9wdGlvbnMgQWJzb2x1dGVQb2ludFNpemUgQWJzb2x1dGVUaGlja25lc3MgQWJzb2x1dGVUaW1lIEFic29sdXRlVGltaW5nIEFjY291bnRpbmdGb3JtIEFjY3VtdWxhdGUgQWNjdXJhY3kgQWNjdXJhY3lHb2FsIEFjdGlvbkRlbGF5IEFjdGlvbk1lbnUgQWN0aW9uTWVudUJveCBBY3Rpb25NZW51Qm94T3B0aW9ucyBBY3RpdmUgQWN0aXZlSXRlbSBBY3RpdmVTdHlsZSBBY3ljbGljR3JhcGhRIEFkZE9uSGVscFBhdGggQWRkVG8gQWRqYWNlbmN5R3JhcGggQWRqYWNlbmN5TGlzdCBBZGphY2VuY3lNYXRyaXggQWRqdXN0bWVudEJveCBBZGp1c3RtZW50Qm94T3B0aW9ucyBBZGp1c3RUaW1lU2VyaWVzRm9yZWNhc3QgQWZmaW5lVHJhbnNmb3JtIEFmdGVyIEFpcnlBaSBBaXJ5QWlQcmltZSBBaXJ5QWlaZXJvIEFpcnlCaSBBaXJ5QmlQcmltZSBBaXJ5QmlaZXJvIEFsZ2VicmFpY0ludGVnZXJRIEFsZ2VicmFpY051bWJlciBBbGdlYnJhaWNOdW1iZXJEZW5vbWluYXRvciBBbGdlYnJhaWNOdW1iZXJOb3JtIEFsZ2VicmFpY051bWJlclBvbHlub21pYWwgQWxnZWJyYWljTnVtYmVyVHJhY2UgQWxnZWJyYWljUnVsZXMgQWxnZWJyYWljUnVsZXNEYXRhIEFsZ2VicmFpY3MgQWxnZWJyYWljVW5pdFEgQWxpZ25tZW50IEFsaWdubWVudE1hcmtlciBBbGlnbm1lbnRQb2ludCBBbGwgQWxsb3dlZERpbWVuc2lvbnMgQWxsb3dHcm91cENsb3NlIEFsbG93SW5saW5lQ2VsbHMgQWxsb3dLZXJuZWxJbml0aWFsaXphdGlvbiBBbGxvd1JldmVyc2VHcm91cENsb3NlIEFsbG93U2NyaXB0TGV2ZWxDaGFuZ2UgQWxwaGFDaGFubmVsIEFsdGVybmF0aW5nR3JvdXAgQWx0ZXJuYXRpdmVIeXBvdGhlc2lzIEFsdGVybmF0aXZlcyBBbWJpZW50TGlnaHQgQW5hbHl0aWMgQW5jaG9yZWRTZWFyY2ggQW5kIEFuZGVyc29uRGFybGluZ1Rlc3QgQW5nZXJKIEFuZ2xlQnJhY2tldCBBbmd1bGFyR2F1Z2UgQW5pbWF0ZSBBbmltYXRpb25DeWNsZU9mZnNldCBBbmltYXRpb25DeWNsZVJlcGV0aXRpb25zIEFuaW1hdGlvbkRpcmVjdGlvbiBBbmltYXRpb25EaXNwbGF5VGltZSBBbmltYXRpb25SYXRlIEFuaW1hdGlvblJlcGV0aXRpb25zIEFuaW1hdGlvblJ1bm5pbmcgQW5pbWF0b3IgQW5pbWF0b3JCb3ggQW5pbWF0b3JCb3hPcHRpb25zIEFuaW1hdG9yRWxlbWVudHMgQW5ub3RhdGlvbiBBbm51aXR5IEFubnVpdHlEdWUgQW50aWFsaWFzaW5nIEFudGlzeW1tZXRyaWMgQXBhcnQgQXBhcnRTcXVhcmVGcmVlIEFwcGVhcmFuY2UgQXBwZWFyYW5jZUVsZW1lbnRzIEFwcGVsbEYxIEFwcGVuZCBBcHBlbmRUbyBBcHBseSBBcmNDb3MgQXJjQ29zaCBBcmNDb3QgQXJjQ290aCBBcmNDc2MgQXJjQ3NjaCBBcmNTZWMgQXJjU2VjaCBBcmNTaW4gQXJjU2luRGlzdHJpYnV0aW9uIEFyY1NpbmggQXJjVGFuIEFyY1RhbmggQXJnIEFyZ01heCBBcmdNaW4gQXJndW1lbnRDb3VudFEgQVJJTUFQcm9jZXNzIEFyaXRobWV0aWNHZW9tZXRyaWNNZWFuIEFSTUFQcm9jZXNzIEFSUHJvY2VzcyBBcnJheSBBcnJheUNvbXBvbmVudHMgQXJyYXlEZXB0aCBBcnJheUZsYXR0ZW4gQXJyYXlQYWQgQXJyYXlQbG90IEFycmF5USBBcnJheVJlc2hhcGUgQXJyYXlSdWxlcyBBcnJheXMgQXJyb3cgQXJyb3czREJveCBBcnJvd0JveCBBcnJvd2hlYWRzIEFzcGVjdFJhdGlvIEFzcGVjdFJhdGlvRml4ZWQgQXNzZXJ0IEFzc3VtaW5nIEFzc3VtcHRpb25zIEFzdHJvbm9taWNhbERhdGEgQXN5bmNocm9ub3VzIEFzeW5jaHJvbm91c1Rhc2tPYmplY3QgQXN5bmNocm9ub3VzVGFza3MgQXRvbVEgQXR0cmlidXRlcyBBdWdtZW50ZWRTeW1tZXRyaWNQb2x5bm9taWFsIEF1dG9BY3Rpb24gQXV0b0RlbGV0ZSBBdXRvRXZhbHVhdGVFdmVudHMgQXV0b0dlbmVyYXRlZFBhY2thZ2UgQXV0b0luZGVudCBBdXRvSW5kZW50U3BhY2luZ3MgQXV0b0l0YWxpY1dvcmRzIEF1dG9sb2FkUGF0aCBBdXRvTWF0Y2ggQXV0b21hdGljIEF1dG9tYXRpY0ltYWdlU2l6ZSBBdXRvTXVsdGlwbGljYXRpb25TeW1ib2wgQXV0b051bWJlckZvcm1hdHRpbmcgQXV0b09wZW5Ob3RlYm9va3MgQXV0b09wZW5QYWxldHRlcyBBdXRvcnVuU2VxdWVuY2luZyBBdXRvU2NhbGluZyBBdXRvU2Nyb2xsIEF1dG9TcGFjaW5nIEF1dG9TdHlsZU9wdGlvbnMgQXV0b1N0eWxlV29yZHMgQXhlcyBBeGVzRWRnZSBBeGVzTGFiZWwgQXhlc09yaWdpbiBBeGVzU3R5bGUgQXhpcyBCYWJ5TW9uc3Rlckdyb3VwQiBCYWNrIEJhY2tncm91bmQgQmFja2dyb3VuZFRhc2tzU2V0dGluZ3MgQmFja3NsYXNoIEJhY2tzdWJzdGl0dXRpb24gQmFja3dhcmQgQmFuZCBCYW5kcGFzc0ZpbHRlciBCYW5kc3RvcEZpbHRlciBCYXJhYmFzaUFsYmVydEdyYXBoRGlzdHJpYnV0aW9uIEJhckNoYXJ0IEJhckNoYXJ0M0QgQmFyTGVnZW5kIEJhcmxvd1Byb3NjaGFuSW1wb3J0YW5jZSBCYXJuZXNHIEJhck9yaWdpbiBCYXJTcGFjaW5nIEJhcnRsZXR0SGFubldpbmRvdyBCYXJ0bGV0dFdpbmRvdyBCYXNlRm9ybSBCYXNlbGluZSBCYXNlbGluZVBvc2l0aW9uIEJhc2VTdHlsZSBCYXRlc0Rpc3RyaWJ1dGlvbiBCYXR0bGVMZW1hcmllV2F2ZWxldCBCZWNhdXNlIEJlY2ttYW5uRGlzdHJpYnV0aW9uIEJlZXAgQmVmb3JlIEJlZ2luIEJlZ2luRGlhbG9nUGFja2V0IEJlZ2luRnJvbnRFbmRJbnRlcmFjdGlvblBhY2tldCBCZWdpblBhY2thZ2UgQmVsbEIgQmVsbFkgQmVsb3cgQmVuZm9yZERpc3RyaWJ1dGlvbiBCZW5pbmlEaXN0cmlidXRpb24gQmVua3RhbmRlckdpYnJhdERpc3RyaWJ1dGlvbiBCZW5rdGFuZGVyV2VpYnVsbERpc3RyaWJ1dGlvbiBCZXJub3VsbGlCIEJlcm5vdWxsaURpc3RyaWJ1dGlvbiBCZXJub3VsbGlHcmFwaERpc3RyaWJ1dGlvbiBCZXJub3VsbGlQcm9jZXNzIEJlcm5zdGVpbkJhc2lzIEJlc3NlbEZpbHRlck1vZGVsIEJlc3NlbEkgQmVzc2VsSiBCZXNzZWxKWmVybyBCZXNzZWxLIEJlc3NlbFkgQmVzc2VsWVplcm8gQmV0YSBCZXRhQmlub21pYWxEaXN0cmlidXRpb24gQmV0YURpc3RyaWJ1dGlvbiBCZXRhTmVnYXRpdmVCaW5vbWlhbERpc3RyaWJ1dGlvbiBCZXRhUHJpbWVEaXN0cmlidXRpb24gQmV0YVJlZ3VsYXJpemVkIEJldHdlZW5uZXNzQ2VudHJhbGl0eSBCZXppZXJDdXJ2ZSBCZXppZXJDdXJ2ZTNEQm94IEJlemllckN1cnZlM0RCb3hPcHRpb25zIEJlemllckN1cnZlQm94IEJlemllckN1cnZlQm94T3B0aW9ucyBCZXppZXJGdW5jdGlvbiBCaWxhdGVyYWxGaWx0ZXIgQmluYXJpemUgQmluYXJ5Rm9ybWF0IEJpbmFyeUltYWdlUSBCaW5hcnlSZWFkIEJpbmFyeVJlYWRMaXN0IEJpbmFyeVdyaXRlIEJpbkNvdW50cyBCaW5MaXN0cyBCaW5vbWlhbCBCaW5vbWlhbERpc3RyaWJ1dGlvbiBCaW5vbWlhbFByb2Nlc3MgQmlub3JtYWxEaXN0cmlidXRpb24gQmlvcnRob2dvbmFsU3BsaW5lV2F2ZWxldCBCaXBhcnRpdGVHcmFwaFEgQmlybmJhdW1JbXBvcnRhbmNlIEJpcm5iYXVtU2F1bmRlcnNEaXN0cmlidXRpb24gQml0QW5kIEJpdENsZWFyIEJpdEdldCBCaXRMZW5ndGggQml0Tm90IEJpdE9yIEJpdFNldCBCaXRTaGlmdExlZnQgQml0U2hpZnRSaWdodCBCaXRYb3IgQmxhY2sgQmxhY2ttYW5IYXJyaXNXaW5kb3cgQmxhY2ttYW5OdXR0YWxsV2luZG93IEJsYWNrbWFuV2luZG93IEJsYW5rIEJsYW5rRm9ybSBCbGFua051bGxTZXF1ZW5jZSBCbGFua1NlcXVlbmNlIEJsZW5kIEJsb2NrIEJsb2NrUmFuZG9tIEJsb21xdmlzdEJldGEgQmxvbXF2aXN0QmV0YVRlc3QgQmx1ZSBCbHVyIEJvZGVQbG90IEJvaG1hbldpbmRvdyBCb2xkIEJvb2ttYXJrcyBCb29sZSBCb29sZWFuQ29uc2VjdXRpdmVGdW5jdGlvbiBCb29sZWFuQ29udmVydCBCb29sZWFuQ291bnRpbmdGdW5jdGlvbiBCb29sZWFuRnVuY3Rpb24gQm9vbGVhbkdyYXBoIEJvb2xlYW5NYXh0ZXJtcyBCb29sZWFuTWluaW1pemUgQm9vbGVhbk1pbnRlcm1zIEJvb2xlYW5zIEJvb2xlYW5UYWJsZSBCb29sZWFuVmFyaWFibGVzIEJvcmRlckRpbWVuc2lvbnMgQm9yZWxUYW5uZXJEaXN0cmlidXRpb24gQm90dG9tIEJvdHRvbUhhdFRyYW5zZm9ybSBCb3VuZGFyeVN0eWxlIEJvdW5kcyBCb3ggQm94QmFzZWxpbmVTaGlmdCBCb3hEYXRhIEJveERpbWVuc2lvbnMgQm94ZWQgQm94ZXMgQm94Rm9ybSBCb3hGb3JtRm9ybWF0VHlwZXMgQm94RnJhbWUgQm94SUQgQm94TWFyZ2lucyBCb3hNYXRyaXggQm94UmF0aW9zIEJveFJvdGF0aW9uIEJveFJvdGF0aW9uUG9pbnQgQm94U3R5bGUgQm94V2hpc2tlckNoYXJ0IEJyYSBCcmFja2V0aW5nQmFyIEJyYUtldCBCcmF5Q3VydGlzRGlzdGFuY2UgQnJlYWR0aEZpcnN0U2NhbiBCcmVhayBCcm93biBCcm93bkZvcnN5dGhlVGVzdCBCcm93bmlhbkJyaWRnZVByb2Nlc3MgQnJvd3NlckNhdGVnb3J5IEJTcGxpbmVCYXNpcyBCU3BsaW5lQ3VydmUgQlNwbGluZUN1cnZlM0RCb3ggQlNwbGluZUN1cnZlQm94IEJTcGxpbmVDdXJ2ZUJveE9wdGlvbnMgQlNwbGluZUZ1bmN0aW9uIEJTcGxpbmVTdXJmYWNlIEJTcGxpbmVTdXJmYWNlM0RCb3ggQnViYmxlQ2hhcnQgQnViYmxlQ2hhcnQzRCBCdWJibGVTY2FsZSBCdWJibGVTaXplcyBCdWxsZXRHYXVnZSBCdXNpbmVzc0RheVEgQnV0dGVyZmx5R3JhcGggQnV0dGVyd29ydGhGaWx0ZXJNb2RlbCBCdXR0b24gQnV0dG9uQmFyIEJ1dHRvbkJveCBCdXR0b25Cb3hPcHRpb25zIEJ1dHRvbkNlbGwgQnV0dG9uQ29udGVudHMgQnV0dG9uRGF0YSBCdXR0b25FdmFsdWF0b3IgQnV0dG9uRXhwYW5kYWJsZSBCdXR0b25GcmFtZSBCdXR0b25GdW5jdGlvbiBCdXR0b25NYXJnaW5zIEJ1dHRvbk1pbkhlaWdodCBCdXR0b25Ob3RlIEJ1dHRvbk5vdGVib29rIEJ1dHRvblNvdXJjZSBCdXR0b25TdHlsZSBCdXR0b25TdHlsZU1lbnVMaXN0aW5nIEJ5dGUgQnl0ZUNvdW50IEJ5dGVPcmRlcmluZyBDIENhY2hlZFZhbHVlIENhY2hlR3JhcGhpY3MgQ2FsZW5kYXJEYXRhIENhbGVuZGFyVHlwZSBDYWxsUGFja2V0IENhbmJlcnJhRGlzdGFuY2UgQ2FuY2VsIENhbmNlbEJ1dHRvbiBDYW5kbGVzdGlja0NoYXJ0IENhcCBDYXBGb3JtIENhcGl0YWxEaWZmZXJlbnRpYWxEIENhcmRpbmFsQlNwbGluZUJhc2lzIENhcm1pY2hhZWxMYW1iZGEgQ2FzZXMgQ2FzaGZsb3cgQ2Fzb3JhdGlhbiBDYXRhbGFuIENhdGFsYW5OdW1iZXIgQ2F0Y2ggQ2F1Y2h5RGlzdHJpYnV0aW9uIENhdWNoeVdpbmRvdyBDYXlsZXlHcmFwaCBDREYgQ0RGRGVwbG95IENERkluZm9ybWF0aW9uIENERldhdmVsZXQgQ2VpbGluZyBDZWxsIENlbGxBdXRvT3ZlcndyaXRlIENlbGxCYXNlbGluZSBDZWxsQm91bmRpbmdCb3ggQ2VsbEJyYWNrZXRPcHRpb25zIENlbGxDaGFuZ2VUaW1lcyBDZWxsQ29udGVudHMgQ2VsbENvbnRleHQgQ2VsbERpbmdiYXQgQ2VsbER5bmFtaWNFeHByZXNzaW9uIENlbGxFZGl0RHVwbGljYXRlIENlbGxFbGVtZW50c0JvdW5kaW5nQm94IENlbGxFbGVtZW50U3BhY2luZ3MgQ2VsbEVwaWxvZyBDZWxsRXZhbHVhdGlvbkR1cGxpY2F0ZSBDZWxsRXZhbHVhdGlvbkZ1bmN0aW9uIENlbGxFdmVudEFjdGlvbnMgQ2VsbEZyYW1lIENlbGxGcmFtZUNvbG9yIENlbGxGcmFtZUxhYmVsTWFyZ2lucyBDZWxsRnJhbWVMYWJlbHMgQ2VsbEZyYW1lTWFyZ2lucyBDZWxsR3JvdXAgQ2VsbEdyb3VwRGF0YSBDZWxsR3JvdXBpbmcgQ2VsbEdyb3VwaW5nUnVsZXMgQ2VsbEhvcml6b250YWxTY3JvbGxpbmcgQ2VsbElEIENlbGxMYWJlbCBDZWxsTGFiZWxBdXRvRGVsZXRlIENlbGxMYWJlbE1hcmdpbnMgQ2VsbExhYmVsUG9zaXRpb25pbmcgQ2VsbE1hcmdpbnMgQ2VsbE9iamVjdCBDZWxsT3BlbiBDZWxsUHJpbnQgQ2VsbFByb2xvZyBDZWxscyBDZWxsU2l6ZSBDZWxsU3R5bGUgQ2VsbFRhZ3MgQ2VsbHVsYXJBdXRvbWF0b24gQ2Vuc29yZWREaXN0cmlidXRpb24gQ2Vuc29yaW5nIENlbnRlciBDZW50ZXJEb3QgQ2VudHJhbE1vbWVudCBDZW50cmFsTW9tZW50R2VuZXJhdGluZ0Z1bmN0aW9uIENGb3JtIENoYW1wZXJub3duZU51bWJlciBDaGFuVmVzZUJpbmFyaXplIENoYXJhY3RlciBDaGFyYWN0ZXJFbmNvZGluZyBDaGFyYWN0ZXJFbmNvZGluZ3NQYXRoIENoYXJhY3RlcmlzdGljRnVuY3Rpb24gQ2hhcmFjdGVyaXN0aWNQb2x5bm9taWFsIENoYXJhY3RlclJhbmdlIENoYXJhY3RlcnMgQ2hhcnRCYXNlU3R5bGUgQ2hhcnRFbGVtZW50RGF0YSBDaGFydEVsZW1lbnREYXRhRnVuY3Rpb24gQ2hhcnRFbGVtZW50RnVuY3Rpb24gQ2hhcnRFbGVtZW50cyBDaGFydExhYmVscyBDaGFydExheW91dCBDaGFydExlZ2VuZHMgQ2hhcnRTdHlsZSBDaGVieXNoZXYxRmlsdGVyTW9kZWwgQ2hlYnlzaGV2MkZpbHRlck1vZGVsIENoZWJ5c2hldkRpc3RhbmNlIENoZWJ5c2hldlQgQ2hlYnlzaGV2VSBDaGVjayBDaGVja0Fib3J0IENoZWNrQWxsIENoZWNrYm94IENoZWNrYm94QmFyIENoZWNrYm94Qm94IENoZWNrYm94Qm94T3B0aW9ucyBDaGVtaWNhbERhdGEgQ2hlc3Nib2FyZERpc3RhbmNlIENoaURpc3RyaWJ1dGlvbiBDaGluZXNlUmVtYWluZGVyIENoaVNxdWFyZURpc3RyaWJ1dGlvbiBDaG9pY2VCdXR0b25zIENob2ljZURpYWxvZyBDaG9sZXNreURlY29tcG9zaXRpb24gQ2hvcCBDaXJjbGUgQ2lyY2xlQm94IENpcmNsZURvdCBDaXJjbGVNaW51cyBDaXJjbGVQbHVzIENpcmNsZVRpbWVzIENpcmN1bGFudEdyYXBoIENpdHlEYXRhIENsZWFyIENsZWFyQWxsIENsZWFyQXR0cmlidXRlcyBDbGVhclN5c3RlbUNhY2hlIENsZWJzY2hHb3JkYW4gQ2xpY2tQYW5lIENsaXAgQ2xpcGJvYXJkTm90ZWJvb2sgQ2xpcEZpbGwgQ2xpcHBpbmdTdHlsZSBDbGlwUGxhbmVzIENsaXBSYW5nZSBDbG9jayBDbG9ja0dhdWdlIENsb2Nrd2lzZUNvbnRvdXJJbnRlZ3JhbCBDbG9zZSBDbG9zZWQgQ2xvc2VLZXJuZWxzIENsb3NlbmVzc0NlbnRyYWxpdHkgQ2xvc2luZyBDbG9zaW5nQXV0b1NhdmUgQ2xvc2luZ0V2ZW50IENsdXN0ZXJpbmdDb21wb25lbnRzIENNWUtDb2xvciBDb2Fyc2UgQ29lZmZpY2llbnQgQ29lZmZpY2llbnRBcnJheXMgQ29lZmZpY2llbnREb21haW4gQ29lZmZpY2llbnRMaXN0IENvZWZmaWNpZW50UnVsZXMgQ29pZmxldFdhdmVsZXQgQ29sbGVjdCBDb2xvbiBDb2xvbkZvcm0gQ29sb3JDb21iaW5lIENvbG9yQ29udmVydCBDb2xvckRhdGEgQ29sb3JEYXRhRnVuY3Rpb24gQ29sb3JGdW5jdGlvbiBDb2xvckZ1bmN0aW9uU2NhbGluZyBDb2xvcml6ZSBDb2xvck5lZ2F0ZSBDb2xvck91dHB1dCBDb2xvclByb2ZpbGVEYXRhIENvbG9yUXVhbnRpemUgQ29sb3JSZXBsYWNlIENvbG9yUnVsZXMgQ29sb3JTZWxlY3RvclNldHRpbmdzIENvbG9yU2VwYXJhdGUgQ29sb3JTZXR0ZXIgQ29sb3JTZXR0ZXJCb3ggQ29sb3JTZXR0ZXJCb3hPcHRpb25zIENvbG9yU2xpZGVyIENvbG9yU3BhY2UgQ29sdW1uIENvbHVtbkFsaWdubWVudHMgQ29sdW1uQmFja2dyb3VuZHMgQ29sdW1uRm9ybSBDb2x1bW5MaW5lcyBDb2x1bW5zRXF1YWwgQ29sdW1uU3BhY2luZ3MgQ29sdW1uV2lkdGhzIENvbW1vbkRlZmF1bHRGb3JtYXRUeXBlcyBDb21tb25lc3QgQ29tbW9uZXN0RmlsdGVyIENvbW1vblVuaXRzIENvbW11bml0eUJvdW5kYXJ5U3R5bGUgQ29tbXVuaXR5R3JhcGhQbG90IENvbW11bml0eUxhYmVscyBDb21tdW5pdHlSZWdpb25TdHlsZSBDb21wYXRpYmxlVW5pdFEgQ29tcGlsYXRpb25PcHRpb25zIENvbXBpbGF0aW9uVGFyZ2V0IENvbXBpbGUgQ29tcGlsZWQgQ29tcGlsZWRGdW5jdGlvbiBDb21wbGVtZW50IENvbXBsZXRlR3JhcGggQ29tcGxldGVHcmFwaFEgQ29tcGxldGVLYXJ5VHJlZSBDb21wbGV0aW9uc0xpc3RQYWNrZXQgQ29tcGxleCBDb21wbGV4ZXMgQ29tcGxleEV4cGFuZCBDb21wbGV4SW5maW5pdHkgQ29tcGxleGl0eUZ1bmN0aW9uIENvbXBvbmVudE1lYXN1cmVtZW50cyBDb21wb25lbnR3aXNlQ29udGV4dE1lbnUgQ29tcG9zZSBDb21wb3NlTGlzdCBDb21wb3NlU2VyaWVzIENvbXBvc2l0aW9uIENvbXBvdW5kRXhwcmVzc2lvbiBDb21wb3VuZFBvaXNzb25EaXN0cmlidXRpb24gQ29tcG91bmRQb2lzc29uUHJvY2VzcyBDb21wb3VuZFJlbmV3YWxQcm9jZXNzIENvbXByZXNzIENvbXByZXNzZWREYXRhIENvbmRpdGlvbiBDb25kaXRpb25hbEV4cHJlc3Npb24gQ29uZGl0aW9uZWQgQ29uZSBDb25lQm94IENvbmZpZGVuY2VMZXZlbCBDb25maWRlbmNlUmFuZ2UgQ29uZmlkZW5jZVRyYW5zZm9ybSBDb25maWd1cmF0aW9uUGF0aCBDb25ncnVlbnQgQ29uanVnYXRlIENvbmp1Z2F0ZVRyYW5zcG9zZSBDb25qdW5jdGlvbiBDb25uZWN0IENvbm5lY3RlZENvbXBvbmVudHMgQ29ubmVjdGVkR3JhcGhRIENvbm5lc1dpbmRvdyBDb25vdmVyVGVzdCBDb25zb2xlTWVzc2FnZSBDb25zb2xlTWVzc2FnZVBhY2tldCBDb25zb2xlUHJpbnQgQ29uc3RhbnQgQ29uc3RhbnRBcnJheSBDb25zdGFudHMgQ29uc3RyYWluZWRNYXggQ29uc3RyYWluZWRNaW4gQ29udGVudFBhZGRpbmcgQ29udGVudHNCb3VuZGluZ0JveCBDb250ZW50U2VsZWN0YWJsZSBDb250ZW50U2l6ZSBDb250ZXh0IENvbnRleHRNZW51IENvbnRleHRzIENvbnRleHRUb0ZpbGVuYW1lIENvbnRleHRUb0ZpbGVOYW1lIENvbnRpbnVhdGlvbiBDb250aW51ZSBDb250aW51ZWRGcmFjdGlvbiBDb250aW51ZWRGcmFjdGlvbksgQ29udGludW91c0FjdGlvbiBDb250aW51b3VzTWFya292UHJvY2VzcyBDb250aW51b3VzVGltZU1vZGVsUSBDb250aW51b3VzV2F2ZWxldERhdGEgQ29udGludW91c1dhdmVsZXRUcmFuc2Zvcm0gQ29udG91ckRldGVjdCBDb250b3VyR3JhcGhpY3MgQ29udG91ckludGVncmFsIENvbnRvdXJMYWJlbHMgQ29udG91ckxpbmVzIENvbnRvdXJQbG90IENvbnRvdXJQbG90M0QgQ29udG91cnMgQ29udG91clNoYWRpbmcgQ29udG91clNtb290aGluZyBDb250b3VyU3R5bGUgQ29udHJhaGFybW9uaWNNZWFuIENvbnRyb2wgQ29udHJvbEFjdGl2ZSBDb250cm9sQWxpZ25tZW50IENvbnRyb2xsYWJpbGl0eUdyYW1pYW4gQ29udHJvbGxhYmlsaXR5TWF0cml4IENvbnRyb2xsYWJsZURlY29tcG9zaXRpb24gQ29udHJvbGxhYmxlTW9kZWxRIENvbnRyb2xsZXJEdXJhdGlvbiBDb250cm9sbGVySW5mb3JtYXRpb24gQ29udHJvbGxlckluZm9ybWF0aW9uRGF0YSBDb250cm9sbGVyTGlua2luZyBDb250cm9sbGVyTWFuaXB1bGF0ZSBDb250cm9sbGVyTWV0aG9kIENvbnRyb2xsZXJQYXRoIENvbnRyb2xsZXJTdGF0ZSBDb250cm9sUGxhY2VtZW50IENvbnRyb2xzUmVuZGVyaW5nIENvbnRyb2xUeXBlIENvbnZlcmdlbnRzIENvbnZlcnNpb25PcHRpb25zIENvbnZlcnNpb25SdWxlcyBDb252ZXJ0VG9CaXRtYXBQYWNrZXQgQ29udmVydFRvUG9zdFNjcmlwdCBDb252ZXJ0VG9Qb3N0U2NyaXB0UGFja2V0IENvbnZvbHZlIENvbndheUdyb3VwQ28xIENvbndheUdyb3VwQ28yIENvbndheUdyb3VwQ28zIENvb3JkaW5hdGVDaGFydERhdGEgQ29vcmRpbmF0ZXNUb29sT3B0aW9ucyBDb29yZGluYXRlVHJhbnNmb3JtIENvb3JkaW5hdGVUcmFuc2Zvcm1EYXRhIENvcHJpbWVRIENvcHJvZHVjdCBDb3B1bGFEaXN0cmlidXRpb24gQ29weWFibGUgQ29weURpcmVjdG9yeSBDb3B5RmlsZSBDb3B5VGFnIENvcHlUb0NsaXBib2FyZCBDb3JuZXJGaWx0ZXIgQ29ybmVyTmVpZ2hib3JzIENvcnJlbGF0aW9uIENvcnJlbGF0aW9uRGlzdGFuY2UgQ29ycmVsYXRpb25GdW5jdGlvbiBDb3JyZWxhdGlvblRlc3QgQ29zIENvc2ggQ29zaEludGVncmFsIENvc2luZURpc3RhbmNlIENvc2luZVdpbmRvdyBDb3NJbnRlZ3JhbCBDb3QgQ290aCBDb3VudCBDb3VudGVyQXNzaWdubWVudHMgQ291bnRlckJveCBDb3VudGVyQm94T3B0aW9ucyBDb3VudGVyQ2xvY2t3aXNlQ29udG91ckludGVncmFsIENvdW50ZXJFdmFsdWF0b3IgQ291bnRlckZ1bmN0aW9uIENvdW50ZXJJbmNyZW1lbnRzIENvdW50ZXJTdHlsZSBDb3VudGVyU3R5bGVNZW51TGlzdGluZyBDb3VudFJvb3RzIENvdW50cnlEYXRhIENvdmFyaWFuY2UgQ292YXJpYW5jZUVzdGltYXRvckZ1bmN0aW9uIENvdmFyaWFuY2VGdW5jdGlvbiBDb3hpYW5EaXN0cmlidXRpb24gQ294SW5nZXJzb2xsUm9zc1Byb2Nlc3MgQ294TW9kZWwgQ294TW9kZWxGaXQgQ3JhbWVyVm9uTWlzZXNUZXN0IENyZWF0ZUFyY2hpdmUgQ3JlYXRlRGlhbG9nIENyZWF0ZURpcmVjdG9yeSBDcmVhdGVEb2N1bWVudCBDcmVhdGVJbnRlcm1lZGlhdGVEaXJlY3RvcmllcyBDcmVhdGVQYWxldHRlIENyZWF0ZVBhbGV0dGVQYWNrZXQgQ3JlYXRlU2NoZWR1bGVkVGFzayBDcmVhdGVUZW1wb3JhcnkgQ3JlYXRlV2luZG93IENyaXRpY2FsaXR5RmFpbHVyZUltcG9ydGFuY2UgQ3JpdGljYWxpdHlTdWNjZXNzSW1wb3J0YW5jZSBDcml0aWNhbFNlY3Rpb24gQ3Jvc3MgQ3Jvc3NpbmdEZXRlY3QgQ3Jvc3NNYXRyaXggQ3NjIENzY2ggQ3ViZVJvb3QgQ3ViaWNzIEN1Ym9pZCBDdWJvaWRCb3ggQ3VtdWxhbnQgQ3VtdWxhbnRHZW5lcmF0aW5nRnVuY3Rpb24gQ3VwIEN1cENhcCBDdXJsIEN1cmx5RG91YmxlUXVvdGUgQ3VybHlRdW90ZSBDdXJyZW50SW1hZ2UgQ3VycmVudGx5U3BlYWtpbmdQYWNrZXQgQ3VycmVudFZhbHVlIEN1cnZhdHVyZUZsb3dGaWx0ZXIgQ3VydmVDbG9zZWQgQ3lhbiBDeWNsZUdyYXBoIEN5Y2xlSW5kZXhQb2x5bm9taWFsIEN5Y2xlcyBDeWNsaWNHcm91cCBDeWNsb3RvbWljIEN5bGluZGVyIEN5bGluZGVyQm94IEN5bGluZHJpY2FsRGVjb21wb3NpdGlvbiBEIERhZ3VtRGlzdHJpYnV0aW9uIERhbWVyYXVMZXZlbnNodGVpbkRpc3RhbmNlIERhbXBpbmdGYWN0b3IgRGFya2VyIERhc2hlZCBEYXNoaW5nIERhdGFDb21wcmVzc2lvbiBEYXRhRGlzdHJpYnV0aW9uIERhdGFSYW5nZSBEYXRhUmV2ZXJzZWQgRGF0ZSBEYXRlRGVsaW1pdGVycyBEYXRlRGlmZmVyZW5jZSBEYXRlRnVuY3Rpb24gRGF0ZUxpc3QgRGF0ZUxpc3RMb2dQbG90IERhdGVMaXN0UGxvdCBEYXRlUGF0dGVybiBEYXRlUGx1cyBEYXRlUmFuZ2UgRGF0ZVN0cmluZyBEYXRlVGlja3NGb3JtYXQgRGF1YmVjaGllc1dhdmVsZXQgRGF2aXNEaXN0cmlidXRpb24gRGF3c29uRiBEYXlDb3VudCBEYXlDb3VudENvbnZlbnRpb24gRGF5TWF0Y2hRIERheU5hbWUgRGF5UGx1cyBEYXlSYW5nZSBEYXlSb3VuZCBEZUJydWlqbkdyYXBoIERlYnVnIERlYnVnVGFnIERlY2ltYWwgRGVjbGFyZUtub3duU3ltYm9scyBEZWNsYXJlUGFja2FnZSBEZWNvbXBvc2UgRGVjcmVtZW50IERlZGVraW5kRXRhIERlZmF1bHQgRGVmYXVsdEF4ZXNTdHlsZSBEZWZhdWx0QmFzZVN0eWxlIERlZmF1bHRCb3hTdHlsZSBEZWZhdWx0QnV0dG9uIERlZmF1bHRDb2xvciBEZWZhdWx0Q29udHJvbFBsYWNlbWVudCBEZWZhdWx0RHVwbGljYXRlQ2VsbFN0eWxlIERlZmF1bHREdXJhdGlvbiBEZWZhdWx0RWxlbWVudCBEZWZhdWx0RmFjZUdyaWRzU3R5bGUgRGVmYXVsdEZpZWxkSGludFN0eWxlIERlZmF1bHRGb250IERlZmF1bHRGb250UHJvcGVydGllcyBEZWZhdWx0Rm9ybWF0VHlwZSBEZWZhdWx0Rm9ybWF0VHlwZUZvclN0eWxlIERlZmF1bHRGcmFtZVN0eWxlIERlZmF1bHRGcmFtZVRpY2tzU3R5bGUgRGVmYXVsdEdyaWRMaW5lc1N0eWxlIERlZmF1bHRJbmxpbmVGb3JtYXRUeXBlIERlZmF1bHRJbnB1dEZvcm1hdFR5cGUgRGVmYXVsdExhYmVsU3R5bGUgRGVmYXVsdE1lbnVTdHlsZSBEZWZhdWx0TmF0dXJhbExhbmd1YWdlIERlZmF1bHROZXdDZWxsU3R5bGUgRGVmYXVsdE5ld0lubGluZUNlbGxTdHlsZSBEZWZhdWx0Tm90ZWJvb2sgRGVmYXVsdE9wdGlvbnMgRGVmYXVsdE91dHB1dEZvcm1hdFR5cGUgRGVmYXVsdFN0eWxlIERlZmF1bHRTdHlsZURlZmluaXRpb25zIERlZmF1bHRUZXh0Rm9ybWF0VHlwZSBEZWZhdWx0VGV4dElubGluZUZvcm1hdFR5cGUgRGVmYXVsdFRpY2tzU3R5bGUgRGVmYXVsdFRvb2x0aXBTdHlsZSBEZWZhdWx0VmFsdWVzIERlZmVyIERlZmluZUV4dGVybmFsIERlZmluZUlucHV0U3RyZWFtTWV0aG9kIERlZmluZU91dHB1dFN0cmVhbU1ldGhvZCBEZWZpbml0aW9uIERlZ3JlZSBEZWdyZWVDZW50cmFsaXR5IERlZ3JlZUdyYXBoRGlzdHJpYnV0aW9uIERlZ3JlZUxleGljb2dyYXBoaWMgRGVncmVlUmV2ZXJzZUxleGljb2dyYXBoaWMgRGVpbml0aWFsaXphdGlvbiBEZWwgRGVsZXRhYmxlIERlbGV0ZSBEZWxldGVCb3JkZXJDb21wb25lbnRzIERlbGV0ZUNhc2VzIERlbGV0ZUNvbnRlbnRzIERlbGV0ZURpcmVjdG9yeSBEZWxldGVEdXBsaWNhdGVzIERlbGV0ZUZpbGUgRGVsZXRlU21hbGxDb21wb25lbnRzIERlbGV0ZVdpdGhDb250ZW50cyBEZWxldGlvbldhcm5pbmcgRGVsaW1pdGVyIERlbGltaXRlckZsYXNoVGltZSBEZWxpbWl0ZXJNYXRjaGluZyBEZWxpbWl0ZXJzIERlbm9taW5hdG9yIERlbnNpdHlHcmFwaGljcyBEZW5zaXR5SGlzdG9ncmFtIERlbnNpdHlQbG90IERlcGVuZGVudFZhcmlhYmxlcyBEZXBsb3kgRGVwbG95ZWQgRGVwdGggRGVwdGhGaXJzdFNjYW4gRGVyaXZhdGl2ZSBEZXJpdmF0aXZlRmlsdGVyIERlc2NyaXB0b3JTdGF0ZVNwYWNlIERlc2lnbk1hdHJpeCBEZXQgREdhdXNzaWFuV2F2ZWxldCBEaWFjcml0aWNhbFBvc2l0aW9uaW5nIERpYWdvbmFsIERpYWdvbmFsTWF0cml4IERpYWxvZyBEaWFsb2dJbmRlbnQgRGlhbG9nSW5wdXQgRGlhbG9nTGV2ZWwgRGlhbG9nTm90ZWJvb2sgRGlhbG9nUHJvbG9nIERpYWxvZ1JldHVybiBEaWFsb2dTeW1ib2xzIERpYW1vbmQgRGlhbW9uZE1hdHJpeCBEaWNlRGlzc2ltaWxhcml0eSBEaWN0aW9uYXJ5TG9va3VwIERpZmZlcmVuY2VEZWx0YSBEaWZmZXJlbmNlT3JkZXIgRGlmZmVyZW5jZVJvb3QgRGlmZmVyZW5jZVJvb3RSZWR1Y2UgRGlmZmVyZW5jZXMgRGlmZmVyZW50aWFsRCBEaWZmZXJlbnRpYWxSb290IERpZmZlcmVudGlhbFJvb3RSZWR1Y2UgRGlmZmVyZW50aWF0b3JGaWx0ZXIgRGlnaXRCbG9jayBEaWdpdEJsb2NrTWluaW11bSBEaWdpdENoYXJhY3RlciBEaWdpdENvdW50IERpZ2l0USBEaWhlZHJhbEdyb3VwIERpbGF0aW9uIERpbWVuc2lvbnMgRGlyYWNDb21iIERpcmFjRGVsdGEgRGlyZWN0ZWRFZGdlIERpcmVjdGVkRWRnZXMgRGlyZWN0ZWRHcmFwaCBEaXJlY3RlZEdyYXBoUSBEaXJlY3RlZEluZmluaXR5IERpcmVjdGlvbiBEaXJlY3RpdmUgRGlyZWN0b3J5IERpcmVjdG9yeU5hbWUgRGlyZWN0b3J5USBEaXJlY3RvcnlTdGFjayBEaXJpY2hsZXRDaGFyYWN0ZXIgRGlyaWNobGV0Q29udm9sdmUgRGlyaWNobGV0RGlzdHJpYnV0aW9uIERpcmljaGxldEwgRGlyaWNobGV0VHJhbnNmb3JtIERpcmljaGxldFdpbmRvdyBEaXNhYmxlQ29uc29sZVByaW50UGFja2V0IERpc2NyZXRlQ2hpcnBaVHJhbnNmb3JtIERpc2NyZXRlQ29udm9sdmUgRGlzY3JldGVEZWx0YSBEaXNjcmV0ZUhhZGFtYXJkVHJhbnNmb3JtIERpc2NyZXRlSW5kaWNhdG9yIERpc2NyZXRlTFFFc3RpbWF0b3JHYWlucyBEaXNjcmV0ZUxRUmVndWxhdG9yR2FpbnMgRGlzY3JldGVMeWFwdW5vdlNvbHZlIERpc2NyZXRlTWFya292UHJvY2VzcyBEaXNjcmV0ZVBsb3QgRGlzY3JldGVQbG90M0QgRGlzY3JldGVSYXRpbyBEaXNjcmV0ZVJpY2NhdGlTb2x2ZSBEaXNjcmV0ZVNoaWZ0IERpc2NyZXRlVGltZU1vZGVsUSBEaXNjcmV0ZVVuaWZvcm1EaXN0cmlidXRpb24gRGlzY3JldGVWYXJpYWJsZXMgRGlzY3JldGVXYXZlbGV0RGF0YSBEaXNjcmV0ZVdhdmVsZXRQYWNrZXRUcmFuc2Zvcm0gRGlzY3JldGVXYXZlbGV0VHJhbnNmb3JtIERpc2NyaW1pbmFudCBEaXNqdW5jdGlvbiBEaXNrIERpc2tCb3ggRGlza01hdHJpeCBEaXNwYXRjaCBEaXNwZXJzaW9uRXN0aW1hdG9yRnVuY3Rpb24gRGlzcGxheSBEaXNwbGF5QWxsU3RlcHMgRGlzcGxheUVuZFBhY2tldCBEaXNwbGF5Rmx1c2hJbWFnZVBhY2tldCBEaXNwbGF5Rm9ybSBEaXNwbGF5RnVuY3Rpb24gRGlzcGxheVBhY2tldCBEaXNwbGF5UnVsZXMgRGlzcGxheVNldFNpemVQYWNrZXQgRGlzcGxheVN0cmluZyBEaXNwbGF5VGVtcG9yYXJ5IERpc3BsYXlXaXRoIERpc3BsYXlXaXRoUmVmIERpc3BsYXlXaXRoVmFyaWFibGUgRGlzdGFuY2VGdW5jdGlvbiBEaXN0YW5jZVRyYW5zZm9ybSBEaXN0cmlidXRlIERpc3RyaWJ1dGVkIERpc3RyaWJ1dGVkQ29udGV4dHMgRGlzdHJpYnV0ZURlZmluaXRpb25zIERpc3RyaWJ1dGlvbkNoYXJ0IERpc3RyaWJ1dGlvbkRvbWFpbiBEaXN0cmlidXRpb25GaXRUZXN0IERpc3RyaWJ1dGlvblBhcmFtZXRlckFzc3VtcHRpb25zIERpc3RyaWJ1dGlvblBhcmFtZXRlclEgRGl0aGVyaW5nIERpdiBEaXZlcmdlbmNlIERpdmlkZSBEaXZpZGVCeSBEaXZpZGVycyBEaXZpc2libGUgRGl2aXNvcnMgRGl2aXNvclNpZ21hIERpdmlzb3JTdW0gRE1TTGlzdCBETVNTdHJpbmcgRG8gRG9ja2VkQ2VsbHMgRG9jdW1lbnROb3RlYm9vayBEb21pbmFudENvbG9ycyBET1NUZXh0Rm9ybWF0IERvdCBEb3REYXNoZWQgRG90RXF1YWwgRG90dGVkIERvdWJsZUJyYWNrZXRpbmdCYXIgRG91YmxlQ29udG91ckludGVncmFsIERvdWJsZURvd25BcnJvdyBEb3VibGVMZWZ0QXJyb3cgRG91YmxlTGVmdFJpZ2h0QXJyb3cgRG91YmxlTGVmdFRlZSBEb3VibGVMb25nTGVmdEFycm93IERvdWJsZUxvbmdMZWZ0UmlnaHRBcnJvdyBEb3VibGVMb25nUmlnaHRBcnJvdyBEb3VibGVSaWdodEFycm93IERvdWJsZVJpZ2h0VGVlIERvdWJsZVVwQXJyb3cgRG91YmxlVXBEb3duQXJyb3cgRG91YmxlVmVydGljYWxCYXIgRG91Ymx5SW5maW5pdGUgRG93biBEb3duQXJyb3cgRG93bkFycm93QmFyIERvd25BcnJvd1VwQXJyb3cgRG93bkxlZnRSaWdodFZlY3RvciBEb3duTGVmdFRlZVZlY3RvciBEb3duTGVmdFZlY3RvciBEb3duTGVmdFZlY3RvckJhciBEb3duUmlnaHRUZWVWZWN0b3IgRG93blJpZ2h0VmVjdG9yIERvd25SaWdodFZlY3RvckJhciBEb3duc2FtcGxlIERvd25UZWUgRG93blRlZUFycm93IERvd25WYWx1ZXMgRHJhZ0FuZERyb3AgRHJhd0VkZ2VzIERyYXdGcm9udEZhY2VzIERyYXdIaWdobGlnaHRlZCBEcm9wIERTb2x2ZSBEdCBEdWFsTGluZWFyUHJvZ3JhbW1pbmcgRHVhbFN5c3RlbXNNb2RlbCBEdW1wR2V0IER1bXBTYXZlIER1cGxpY2F0ZUZyZWVRIER5bmFtaWMgRHluYW1pY0JveCBEeW5hbWljQm94T3B0aW9ucyBEeW5hbWljRXZhbHVhdGlvblRpbWVvdXQgRHluYW1pY0xvY2F0aW9uIER5bmFtaWNNb2R1bGUgRHluYW1pY01vZHVsZUJveCBEeW5hbWljTW9kdWxlQm94T3B0aW9ucyBEeW5hbWljTW9kdWxlUGFyZW50IER5bmFtaWNNb2R1bGVWYWx1ZXMgRHluYW1pY05hbWUgRHluYW1pY05hbWVzcGFjZSBEeW5hbWljUmVmZXJlbmNlIER5bmFtaWNTZXR0aW5nIER5bmFtaWNVcGRhdGluZyBEeW5hbWljV3JhcHBlciBEeW5hbWljV3JhcHBlckJveCBEeW5hbWljV3JhcHBlckJveE9wdGlvbnMgRSBFY2NlbnRyaWNpdHlDZW50cmFsaXR5IEVkZ2VBZGQgRWRnZUJldHdlZW5uZXNzQ2VudHJhbGl0eSBFZGdlQ2FwYWNpdHkgRWRnZUNhcEZvcm0gRWRnZUNvbG9yIEVkZ2VDb25uZWN0aXZpdHkgRWRnZUNvc3QgRWRnZUNvdW50IEVkZ2VDb3ZlclEgRWRnZURhc2hpbmcgRWRnZURlbGV0ZSBFZGdlRGV0ZWN0IEVkZ2VGb3JtIEVkZ2VJbmRleCBFZGdlSm9pbkZvcm0gRWRnZUxhYmVsaW5nIEVkZ2VMYWJlbHMgRWRnZUxhYmVsU3R5bGUgRWRnZUxpc3QgRWRnZU9wYWNpdHkgRWRnZVEgRWRnZVJlbmRlcmluZ0Z1bmN0aW9uIEVkZ2VSdWxlcyBFZGdlU2hhcGVGdW5jdGlvbiBFZGdlU3R5bGUgRWRnZVRoaWNrbmVzcyBFZGdlV2VpZ2h0IEVkaXRhYmxlIEVkaXRCdXR0b25TZXR0aW5ncyBFZGl0Q2VsbFRhZ3NTZXR0aW5ncyBFZGl0RGlzdGFuY2UgRWZmZWN0aXZlSW50ZXJlc3QgRWlnZW5zeXN0ZW0gRWlnZW52YWx1ZXMgRWlnZW52ZWN0b3JDZW50cmFsaXR5IEVpZ2VudmVjdG9ycyBFbGVtZW50IEVsZW1lbnREYXRhIEVsaW1pbmF0ZSBFbGltaW5hdGlvbk9yZGVyIEVsbGlwdGljRSBFbGxpcHRpY0V4cCBFbGxpcHRpY0V4cFByaW1lIEVsbGlwdGljRiBFbGxpcHRpY0ZpbHRlck1vZGVsIEVsbGlwdGljSyBFbGxpcHRpY0xvZyBFbGxpcHRpY05vbWVRIEVsbGlwdGljUGkgRWxsaXB0aWNSZWR1Y2VkSGFsZlBlcmlvZHMgRWxsaXB0aWNUaGV0YSBFbGxpcHRpY1RoZXRhUHJpbWUgRW1pdFNvdW5kIEVtcGhhc2l6ZVN5bnRheEVycm9ycyBFbXBpcmljYWxEaXN0cmlidXRpb24gRW1wdHkgRW1wdHlHcmFwaFEgRW5hYmxlQ29uc29sZVByaW50UGFja2V0IEVuYWJsZWQgRW5jb2RlIEVuZCBFbmRBZGQgRW5kRGlhbG9nUGFja2V0IEVuZEZyb250RW5kSW50ZXJhY3Rpb25QYWNrZXQgRW5kT2ZGaWxlIEVuZE9mTGluZSBFbmRPZlN0cmluZyBFbmRQYWNrYWdlIEVuZ2luZWVyaW5nRm9ybSBFbnRlciBFbnRlckV4cHJlc3Npb25QYWNrZXQgRW50ZXJUZXh0UGFja2V0IEVudHJvcHkgRW50cm9weUZpbHRlciBFbnZpcm9ubWVudCBFcGlsb2cgRXF1YWwgRXF1YWxDb2x1bW5zIEVxdWFsUm93cyBFcXVhbFRpbGRlIEVxdWF0ZWRUbyBFcXVpbGlicml1bSBFcXVpcmlwcGxlRmlsdGVyS2VybmVsIEVxdWl2YWxlbnQgRXJmIEVyZmMgRXJmaSBFcmxhbmdCIEVybGFuZ0MgRXJsYW5nRGlzdHJpYnV0aW9uIEVyb3Npb24gRXJyb3JCb3ggRXJyb3JCb3hPcHRpb25zIEVycm9yTm9ybSBFcnJvclBhY2tldCBFcnJvcnNEaWFsb2dTZXR0aW5ncyBFc3RpbWF0ZWREaXN0cmlidXRpb24gRXN0aW1hdGVkUHJvY2VzcyBFc3RpbWF0b3JHYWlucyBFc3RpbWF0b3JSZWd1bGF0b3IgRXVjbGlkZWFuRGlzdGFuY2UgRXVsZXJFIEV1bGVyR2FtbWEgRXVsZXJpYW5HcmFwaFEgRXVsZXJQaGkgRXZhbHVhdGFibGUgRXZhbHVhdGUgRXZhbHVhdGVkIEV2YWx1YXRlUGFja2V0IEV2YWx1YXRpb25DZWxsIEV2YWx1YXRpb25Db21wbGV0aW9uQWN0aW9uIEV2YWx1YXRpb25FbGVtZW50cyBFdmFsdWF0aW9uTW9kZSBFdmFsdWF0aW9uTW9uaXRvciBFdmFsdWF0aW9uTm90ZWJvb2sgRXZhbHVhdGlvbk9iamVjdCBFdmFsdWF0aW9uT3JkZXIgRXZhbHVhdG9yIEV2YWx1YXRvck5hbWVzIEV2ZW5RIEV2ZW50RGF0YSBFdmVudEV2YWx1YXRvciBFdmVudEhhbmRsZXIgRXZlbnRIYW5kbGVyVGFnIEV2ZW50TGFiZWxzIEV4YWN0QmxhY2ttYW5XaW5kb3cgRXhhY3ROdW1iZXJRIEV4YWN0Um9vdElzb2xhdGlvbiBFeGFtcGxlRGF0YSBFeGNlcHQgRXhjbHVkZWRGb3JtcyBFeGNsdWRlUG9kcyBFeGNsdXNpb25zIEV4Y2x1c2lvbnNTdHlsZSBFeGlzdHMgRXhpdCBFeGl0RGlhbG9nIEV4cCBFeHBhbmQgRXhwYW5kQWxsIEV4cGFuZERlbm9taW5hdG9yIEV4cGFuZEZpbGVOYW1lIEV4cGFuZE51bWVyYXRvciBFeHBlY3RhdGlvbiBFeHBlY3RhdGlvbkUgRXhwZWN0ZWRWYWx1ZSBFeHBHYW1tYURpc3RyaWJ1dGlvbiBFeHBJbnRlZ3JhbEUgRXhwSW50ZWdyYWxFaSBFeHBvbmVudCBFeHBvbmVudEZ1bmN0aW9uIEV4cG9uZW50aWFsRGlzdHJpYnV0aW9uIEV4cG9uZW50aWFsRmFtaWx5IEV4cG9uZW50aWFsR2VuZXJhdGluZ0Z1bmN0aW9uIEV4cG9uZW50aWFsTW92aW5nQXZlcmFnZSBFeHBvbmVudGlhbFBvd2VyRGlzdHJpYnV0aW9uIEV4cG9uZW50UG9zaXRpb24gRXhwb25lbnRTdGVwIEV4cG9ydCBFeHBvcnRBdXRvUmVwbGFjZW1lbnRzIEV4cG9ydFBhY2tldCBFeHBvcnRTdHJpbmcgRXhwcmVzc2lvbiBFeHByZXNzaW9uQ2VsbCBFeHByZXNzaW9uUGFja2V0IEV4cFRvVHJpZyBFeHRlbmRlZEdDRCBFeHRlbnNpb24gRXh0ZW50RWxlbWVudEZ1bmN0aW9uIEV4dGVudE1hcmtlcnMgRXh0ZW50U2l6ZSBFeHRlcm5hbENhbGwgRXh0ZXJuYWxEYXRhQ2hhcmFjdGVyRW5jb2RpbmcgRXh0cmFjdCBFeHRyYWN0QXJjaGl2ZSBFeHRyZW1lVmFsdWVEaXN0cmlidXRpb24gRmFjZUZvcm0gRmFjZUdyaWRzIEZhY2VHcmlkc1N0eWxlIEZhY3RvciBGYWN0b3JDb21wbGV0ZSBGYWN0b3JpYWwgRmFjdG9yaWFsMiBGYWN0b3JpYWxNb21lbnQgRmFjdG9yaWFsTW9tZW50R2VuZXJhdGluZ0Z1bmN0aW9uIEZhY3RvcmlhbFBvd2VyIEZhY3RvckludGVnZXIgRmFjdG9yTGlzdCBGYWN0b3JTcXVhcmVGcmVlIEZhY3RvclNxdWFyZUZyZWVMaXN0IEZhY3RvclRlcm1zIEZhY3RvclRlcm1zTGlzdCBGYWlsIEZhaWx1cmVEaXN0cmlidXRpb24gRmFsc2UgRkFSSU1BUHJvY2VzcyBGRURpc2FibGVDb25zb2xlUHJpbnRQYWNrZXQgRmVlZGJhY2tTZWN0b3IgRmVlZGJhY2tTZWN0b3JTdHlsZSBGZWVkYmFja1R5cGUgRkVFbmFibGVDb25zb2xlUHJpbnRQYWNrZXQgRmlib25hY2NpIEZpZWxkSGludCBGaWVsZEhpbnRTdHlsZSBGaWVsZE1hc2tlZCBGaWVsZFNpemUgRmlsZSBGaWxlQmFzZU5hbWUgRmlsZUJ5dGVDb3VudCBGaWxlRGF0ZSBGaWxlRXhpc3RzUSBGaWxlRXh0ZW5zaW9uIEZpbGVGb3JtYXQgRmlsZUhhc2ggRmlsZUluZm9ybWF0aW9uIEZpbGVOYW1lIEZpbGVOYW1lRGVwdGggRmlsZU5hbWVEaWFsb2dTZXR0aW5ncyBGaWxlTmFtZURyb3AgRmlsZU5hbWVKb2luIEZpbGVOYW1lcyBGaWxlTmFtZVNldHRlciBGaWxlTmFtZVNwbGl0IEZpbGVOYW1lVGFrZSBGaWxlUHJpbnQgRmlsZVR5cGUgRmlsbGVkQ3VydmUgRmlsbGVkQ3VydmVCb3ggRmlsbGluZyBGaWxsaW5nU3R5bGUgRmlsbGluZ1RyYW5zZm9ybSBGaWx0ZXJSdWxlcyBGaW5hbmNpYWxCb25kIEZpbmFuY2lhbERhdGEgRmluYW5jaWFsRGVyaXZhdGl2ZSBGaW5hbmNpYWxJbmRpY2F0b3IgRmluZCBGaW5kQXJnTWF4IEZpbmRBcmdNaW4gRmluZENsaXF1ZSBGaW5kQ2x1c3RlcnMgRmluZEN1cnZlUGF0aCBGaW5kRGlzdHJpYnV0aW9uUGFyYW1ldGVycyBGaW5kRGl2aXNpb25zIEZpbmRFZGdlQ292ZXIgRmluZEVkZ2VDdXQgRmluZEV1bGVyaWFuQ3ljbGUgRmluZEZhY2VzIEZpbmRGaWxlIEZpbmRGaXQgRmluZEdlbmVyYXRpbmdGdW5jdGlvbiBGaW5kR2VvTG9jYXRpb24gRmluZEdlb21ldHJpY1RyYW5zZm9ybSBGaW5kR3JhcGhDb21tdW5pdGllcyBGaW5kR3JhcGhJc29tb3JwaGlzbSBGaW5kR3JhcGhQYXJ0aXRpb24gRmluZEhhbWlsdG9uaWFuQ3ljbGUgRmluZEluZGVwZW5kZW50RWRnZVNldCBGaW5kSW5kZXBlbmRlbnRWZXJ0ZXhTZXQgRmluZEluc3RhbmNlIEZpbmRJbnRlZ2VyTnVsbFZlY3RvciBGaW5kS0NsYW4gRmluZEtDbGlxdWUgRmluZEtDbHViIEZpbmRLUGxleCBGaW5kTGlicmFyeSBGaW5kTGluZWFyUmVjdXJyZW5jZSBGaW5kTGlzdCBGaW5kTWF4aW11bSBGaW5kTWF4aW11bUZsb3cgRmluZE1heFZhbHVlIEZpbmRNaW5pbXVtIEZpbmRNaW5pbXVtQ29zdEZsb3cgRmluZE1pbmltdW1DdXQgRmluZE1pblZhbHVlIEZpbmRQZXJtdXRhdGlvbiBGaW5kUG9zdG1hblRvdXIgRmluZFByb2Nlc3NQYXJhbWV0ZXJzIEZpbmRSb290IEZpbmRTZXF1ZW5jZUZ1bmN0aW9uIEZpbmRTZXR0aW5ncyBGaW5kU2hvcnRlc3RQYXRoIEZpbmRTaG9ydGVzdFRvdXIgRmluZFRocmVzaG9sZCBGaW5kVmVydGV4Q292ZXIgRmluZFZlcnRleEN1dCBGaW5lIEZpbmlzaER5bmFtaWMgRmluaXRlQWJlbGlhbkdyb3VwQ291bnQgRmluaXRlR3JvdXBDb3VudCBGaW5pdGVHcm91cERhdGEgRmlyc3QgRmlyc3RQYXNzYWdlVGltZURpc3RyaWJ1dGlvbiBGaXNjaGVyR3JvdXBGaTIyIEZpc2NoZXJHcm91cEZpMjMgRmlzY2hlckdyb3VwRmkyNFByaW1lIEZpc2hlckh5cGVyZ2VvbWV0cmljRGlzdHJpYnV0aW9uIEZpc2hlclJhdGlvVGVzdCBGaXNoZXJaRGlzdHJpYnV0aW9uIEZpdCBGaXRBbGwgRml0dGVkTW9kZWwgRml4ZWRQb2ludCBGaXhlZFBvaW50TGlzdCBGbGFzaFNlbGVjdGlvbiBGbGF0IEZsYXR0ZW4gRmxhdHRlbkF0IEZsYXRUb3BXaW5kb3cgRmxpcFZpZXcgRmxvb3IgRmx1c2hQcmludE91dHB1dFBhY2tldCBGb2xkIEZvbGRMaXN0IEZvbnQgRm9udENvbG9yIEZvbnRGYW1pbHkgRm9udEZvcm0gRm9udE5hbWUgRm9udE9wYWNpdHkgRm9udFBvc3RTY3JpcHROYW1lIEZvbnRQcm9wZXJ0aWVzIEZvbnRSZWVuY29kaW5nIEZvbnRTaXplIEZvbnRTbGFudCBGb250U3Vic3RpdHV0aW9ucyBGb250VHJhY2tpbmcgRm9udFZhcmlhdGlvbnMgRm9udFdlaWdodCBGb3IgRm9yQWxsIEZvcm1hdCBGb3JtYXRSdWxlcyBGb3JtYXRUeXBlIEZvcm1hdFR5cGVBdXRvQ29udmVydCBGb3JtYXRWYWx1ZXMgRm9ybUJveCBGb3JtQm94T3B0aW9ucyBGb3J0cmFuRm9ybSBGb3J3YXJkIEZvcndhcmRCYWNrd2FyZCBGb3VyaWVyIEZvdXJpZXJDb2VmZmljaWVudCBGb3VyaWVyQ29zQ29lZmZpY2llbnQgRm91cmllckNvc1NlcmllcyBGb3VyaWVyQ29zVHJhbnNmb3JtIEZvdXJpZXJEQ1QgRm91cmllckRDVEZpbHRlciBGb3VyaWVyRENUTWF0cml4IEZvdXJpZXJEU1QgRm91cmllckRTVE1hdHJpeCBGb3VyaWVyTWF0cml4IEZvdXJpZXJQYXJhbWV0ZXJzIEZvdXJpZXJTZXF1ZW5jZVRyYW5zZm9ybSBGb3VyaWVyU2VyaWVzIEZvdXJpZXJTaW5Db2VmZmljaWVudCBGb3VyaWVyU2luU2VyaWVzIEZvdXJpZXJTaW5UcmFuc2Zvcm0gRm91cmllclRyYW5zZm9ybSBGb3VyaWVyVHJpZ1NlcmllcyBGcmFjdGlvbmFsQnJvd25pYW5Nb3Rpb25Qcm9jZXNzIEZyYWN0aW9uYWxQYXJ0IEZyYWN0aW9uQm94IEZyYWN0aW9uQm94T3B0aW9ucyBGcmFjdGlvbkxpbmUgRnJhbWUgRnJhbWVCb3ggRnJhbWVCb3hPcHRpb25zIEZyYW1lZCBGcmFtZUluc2V0IEZyYW1lTGFiZWwgRnJhbWVsZXNzIEZyYW1lTWFyZ2lucyBGcmFtZVN0eWxlIEZyYW1lVGlja3MgRnJhbWVUaWNrc1N0eWxlIEZSYXRpb0Rpc3RyaWJ1dGlvbiBGcmVjaGV0RGlzdHJpYnV0aW9uIEZyZWVRIEZyZXF1ZW5jeVNhbXBsaW5nRmlsdGVyS2VybmVsIEZyZXNuZWxDIEZyZXNuZWxTIEZyaWRheSBGcm9iZW5pdXNOdW1iZXIgRnJvYmVuaXVzU29sdmUgRnJvbUNoYXJhY3RlckNvZGUgRnJvbUNvZWZmaWNpZW50UnVsZXMgRnJvbUNvbnRpbnVlZEZyYWN0aW9uIEZyb21EYXRlIEZyb21EaWdpdHMgRnJvbURNUyBGcm9udCBGcm9udEVuZER5bmFtaWNFeHByZXNzaW9uIEZyb250RW5kRXZlbnRBY3Rpb25zIEZyb250RW5kRXhlY3V0ZSBGcm9udEVuZE9iamVjdCBGcm9udEVuZFJlc291cmNlIEZyb250RW5kUmVzb3VyY2VTdHJpbmcgRnJvbnRFbmRTdGFja1NpemUgRnJvbnRFbmRUb2tlbiBGcm9udEVuZFRva2VuRXhlY3V0ZSBGcm9udEVuZFZhbHVlQ2FjaGUgRnJvbnRFbmRWZXJzaW9uIEZyb250RmFjZUNvbG9yIEZyb250RmFjZU9wYWNpdHkgRnVsbCBGdWxsQXhlcyBGdWxsRGVmaW5pdGlvbiBGdWxsRm9ybSBGdWxsR3JhcGhpY3MgRnVsbE9wdGlvbnMgRnVsbFNpbXBsaWZ5IEZ1bmN0aW9uIEZ1bmN0aW9uRXhwYW5kIEZ1bmN0aW9uSW50ZXJwb2xhdGlvbiBGdW5jdGlvblNwYWNlIEZ1c3NlbGxWZXNlbHlJbXBvcnRhbmNlIEdhYm9yRmlsdGVyIEdhYm9yTWF0cml4IEdhYm9yV2F2ZWxldCBHYWluTWFyZ2lucyBHYWluUGhhc2VNYXJnaW5zIEdhbW1hIEdhbW1hRGlzdHJpYnV0aW9uIEdhbW1hUmVndWxhcml6ZWQgR2FwUGVuYWx0eSBHYXRoZXIgR2F0aGVyQnkgR2F1Z2VGYWNlRWxlbWVudEZ1bmN0aW9uIEdhdWdlRmFjZVN0eWxlIEdhdWdlRnJhbWVFbGVtZW50RnVuY3Rpb24gR2F1Z2VGcmFtZVNpemUgR2F1Z2VGcmFtZVN0eWxlIEdhdWdlTGFiZWxzIEdhdWdlTWFya2VycyBHYXVnZVN0eWxlIEdhdXNzaWFuRmlsdGVyIEdhdXNzaWFuSW50ZWdlcnMgR2F1c3NpYW5NYXRyaXggR2F1c3NpYW5XaW5kb3cgR0NEIEdlZ2VuYmF1ZXJDIEdlbmVyYWwgR2VuZXJhbGl6ZWRMaW5lYXJNb2RlbEZpdCBHZW5lcmF0ZUNvbmRpdGlvbnMgR2VuZXJhdGVkQ2VsbCBHZW5lcmF0ZWRQYXJhbWV0ZXJzIEdlbmVyYXRpbmdGdW5jdGlvbiBHZW5lcmljIEdlbmVyaWNDeWxpbmRyaWNhbERlY29tcG9zaXRpb24gR2Vub21lRGF0YSBHZW5vbWVMb29rdXAgR2VvZGVzaWNDbG9zaW5nIEdlb2Rlc2ljRGlsYXRpb24gR2VvZGVzaWNFcm9zaW9uIEdlb2Rlc2ljT3BlbmluZyBHZW9EZXN0aW5hdGlvbiBHZW9kZXN5RGF0YSBHZW9EaXJlY3Rpb24gR2VvRGlzdGFuY2UgR2VvR3JpZFBvc2l0aW9uIEdlb21ldHJpY0Jyb3duaWFuTW90aW9uUHJvY2VzcyBHZW9tZXRyaWNEaXN0cmlidXRpb24gR2VvbWV0cmljTWVhbiBHZW9tZXRyaWNNZWFuRmlsdGVyIEdlb21ldHJpY1RyYW5zZm9ybWF0aW9uIEdlb21ldHJpY1RyYW5zZm9ybWF0aW9uM0RCb3ggR2VvbWV0cmljVHJhbnNmb3JtYXRpb24zREJveE9wdGlvbnMgR2VvbWV0cmljVHJhbnNmb3JtYXRpb25Cb3ggR2VvbWV0cmljVHJhbnNmb3JtYXRpb25Cb3hPcHRpb25zIEdlb1Bvc2l0aW9uIEdlb1Bvc2l0aW9uRU5VIEdlb1Bvc2l0aW9uWFlaIEdlb1Byb2plY3Rpb25EYXRhIEdlc3R1cmVIYW5kbGVyIEdlc3R1cmVIYW5kbGVyVGFnIEdldCBHZXRCb3VuZGluZ0JveFNpemVQYWNrZXQgR2V0Q29udGV4dCBHZXRFbnZpcm9ubWVudCBHZXRGaWxlTmFtZSBHZXRGcm9udEVuZE9wdGlvbnNEYXRhUGFja2V0IEdldExpbmVicmVha0luZm9ybWF0aW9uUGFja2V0IEdldE1lbnVzUGFja2V0IEdldFBhZ2VCcmVha0luZm9ybWF0aW9uUGFja2V0IEdsYWlzaGVyIEdsb2JhbENsdXN0ZXJpbmdDb2VmZmljaWVudCBHbG9iYWxQcmVmZXJlbmNlcyBHbG9iYWxTZXNzaW9uIEdsb3cgR29sZGVuUmF0aW8gR29tcGVydHpNYWtlaGFtRGlzdHJpYnV0aW9uIEdvb2RtYW5LcnVza2FsR2FtbWEgR29vZG1hbktydXNrYWxHYW1tYVRlc3QgR290byBHcmFkIEdyYWRpZW50IEdyYWRpZW50RmlsdGVyIEdyYWRpZW50T3JpZW50YXRpb25GaWx0ZXIgR3JhcGggR3JhcGhBc3NvcnRhdGl2aXR5IEdyYXBoQ2VudGVyIEdyYXBoQ29tcGxlbWVudCBHcmFwaERhdGEgR3JhcGhEZW5zaXR5IEdyYXBoRGlhbWV0ZXIgR3JhcGhEaWZmZXJlbmNlIEdyYXBoRGlzam9pbnRVbmlvbiBHcmFwaERpc3RhbmNlIEdyYXBoRGlzdGFuY2VNYXRyaXggR3JhcGhFbGVtZW50RGF0YSBHcmFwaEVtYmVkZGluZyBHcmFwaEhpZ2hsaWdodCBHcmFwaEhpZ2hsaWdodFN0eWxlIEdyYXBoSHViIEdyYXBoaWNzIEdyYXBoaWNzM0QgR3JhcGhpY3MzREJveCBHcmFwaGljczNEQm94T3B0aW9ucyBHcmFwaGljc0FycmF5IEdyYXBoaWNzQmFzZWxpbmUgR3JhcGhpY3NCb3ggR3JhcGhpY3NCb3hPcHRpb25zIEdyYXBoaWNzQ29sb3IgR3JhcGhpY3NDb2x1bW4gR3JhcGhpY3NDb21wbGV4IEdyYXBoaWNzQ29tcGxleDNEQm94IEdyYXBoaWNzQ29tcGxleDNEQm94T3B0aW9ucyBHcmFwaGljc0NvbXBsZXhCb3ggR3JhcGhpY3NDb21wbGV4Qm94T3B0aW9ucyBHcmFwaGljc0NvbnRlbnRzIEdyYXBoaWNzRGF0YSBHcmFwaGljc0dyaWQgR3JhcGhpY3NHcmlkQm94IEdyYXBoaWNzR3JvdXAgR3JhcGhpY3NHcm91cDNEQm94IEdyYXBoaWNzR3JvdXAzREJveE9wdGlvbnMgR3JhcGhpY3NHcm91cEJveCBHcmFwaGljc0dyb3VwQm94T3B0aW9ucyBHcmFwaGljc0dyb3VwaW5nIEdyYXBoaWNzSGlnaGxpZ2h0Q29sb3IgR3JhcGhpY3NSb3cgR3JhcGhpY3NTcGFjaW5nIEdyYXBoaWNzU3R5bGUgR3JhcGhJbnRlcnNlY3Rpb24gR3JhcGhMYXlvdXQgR3JhcGhMaW5rRWZmaWNpZW5jeSBHcmFwaFBlcmlwaGVyeSBHcmFwaFBsb3QgR3JhcGhQbG90M0QgR3JhcGhQb3dlciBHcmFwaFByb3BlcnR5RGlzdHJpYnV0aW9uIEdyYXBoUSBHcmFwaFJhZGl1cyBHcmFwaFJlY2lwcm9jaXR5IEdyYXBoUm9vdCBHcmFwaFN0eWxlIEdyYXBoVW5pb24gR3JheSBHcmF5TGV2ZWwgR3JlYXRDaXJjbGVEaXN0YW5jZSBHcmVhdGVyIEdyZWF0ZXJFcXVhbCBHcmVhdGVyRXF1YWxMZXNzIEdyZWF0ZXJGdWxsRXF1YWwgR3JlYXRlckdyZWF0ZXIgR3JlYXRlckxlc3MgR3JlYXRlclNsYW50RXF1YWwgR3JlYXRlclRpbGRlIEdyZWVuIEdyaWQgR3JpZEJhc2VsaW5lIEdyaWRCb3ggR3JpZEJveEFsaWdubWVudCBHcmlkQm94QmFja2dyb3VuZCBHcmlkQm94RGl2aWRlcnMgR3JpZEJveEZyYW1lIEdyaWRCb3hJdGVtU2l6ZSBHcmlkQm94SXRlbVN0eWxlIEdyaWRCb3hPcHRpb25zIEdyaWRCb3hTcGFjaW5ncyBHcmlkQ3JlYXRpb25TZXR0aW5ncyBHcmlkRGVmYXVsdEVsZW1lbnQgR3JpZEVsZW1lbnRTdHlsZU9wdGlvbnMgR3JpZEZyYW1lIEdyaWRGcmFtZU1hcmdpbnMgR3JpZEdyYXBoIEdyaWRMaW5lcyBHcmlkTGluZXNTdHlsZSBHcm9lYm5lckJhc2lzIEdyb3VwQWN0aW9uQmFzZSBHcm91cENlbnRyYWxpemVyIEdyb3VwRWxlbWVudEZyb21Xb3JkIEdyb3VwRWxlbWVudFBvc2l0aW9uIEdyb3VwRWxlbWVudFEgR3JvdXBFbGVtZW50cyBHcm91cEVsZW1lbnRUb1dvcmQgR3JvdXBHZW5lcmF0b3JzIEdyb3VwTXVsdGlwbGljYXRpb25UYWJsZSBHcm91cE9yYml0cyBHcm91cE9yZGVyIEdyb3VwUGFnZUJyZWFrV2l0aGluIEdyb3VwU2V0d2lzZVN0YWJpbGl6ZXIgR3JvdXBTdGFiaWxpemVyIEdyb3VwU3RhYmlsaXplckNoYWluIEd1ZGVybWFubmlhbiBHdW1iZWxEaXN0cmlidXRpb24gSGFhcldhdmVsZXQgSGFkYW1hcmRNYXRyaXggSGFsZk5vcm1hbERpc3RyaWJ1dGlvbiBIYW1pbHRvbmlhbkdyYXBoUSBIYW1taW5nRGlzdGFuY2UgSGFtbWluZ1dpbmRvdyBIYW5rZWxIMSBIYW5rZWxIMiBIYW5rZWxNYXRyaXggSGFublBvaXNzb25XaW5kb3cgSGFubldpbmRvdyBIYXJhZGFOb3J0b25Hcm91cEhOIEhhcmFyeUdyYXBoIEhhcm1vbmljTWVhbiBIYXJtb25pY01lYW5GaWx0ZXIgSGFybW9uaWNOdW1iZXIgSGFzaCBIYXNoVGFibGUgSGF2ZXJzaW5lIEhhemFyZEZ1bmN0aW9uIEhlYWQgSGVhZENvbXBvc2UgSGVhZHMgSGVhdmlzaWRlTGFtYmRhIEhlYXZpc2lkZVBpIEhlYXZpc2lkZVRoZXRhIEhlbGRHcm91cEhlIEhlbGRQYXJ0IEhlbHBCcm93c2VyTG9va3VwIEhlbHBCcm93c2VyTm90ZWJvb2sgSGVscEJyb3dzZXJTZXR0aW5ncyBIZXJtaXRlRGVjb21wb3NpdGlvbiBIZXJtaXRlSCBIZXJtaXRpYW5NYXRyaXhRIEhlc3NlbmJlcmdEZWNvbXBvc2l0aW9uIEhlc3NpYW4gSGV4YWRlY2ltYWxDaGFyYWN0ZXIgSGV4YWhlZHJvbiBIZXhhaGVkcm9uQm94IEhleGFoZWRyb25Cb3hPcHRpb25zIEhpZGRlblN1cmZhY2UgSGlnaGxpZ2h0R3JhcGggSGlnaGxpZ2h0SW1hZ2UgSGlnaHBhc3NGaWx0ZXIgSGlnbWFuU2ltc0dyb3VwSFMgSGlsYmVydEZpbHRlciBIaWxiZXJ0TWF0cml4IEhpc3RvZ3JhbSBIaXN0b2dyYW0zRCBIaXN0b2dyYW1EaXN0cmlidXRpb24gSGlzdG9ncmFtTGlzdCBIaXN0b2dyYW1UcmFuc2Zvcm0gSGlzdG9ncmFtVHJhbnNmb3JtSW50ZXJwb2xhdGlvbiBIaXRNaXNzVHJhbnNmb3JtIEhJVFNDZW50cmFsaXR5IEhvZGdlRHVhbCBIb2VmZmRpbmdEIEhvZWZmZGluZ0RUZXN0IEhvbGQgSG9sZEFsbCBIb2xkQWxsQ29tcGxldGUgSG9sZENvbXBsZXRlIEhvbGRGaXJzdCBIb2xkRm9ybSBIb2xkUGF0dGVybiBIb2xkUmVzdCBIb2xpZGF5Q2FsZW5kYXIgSG9tZURpcmVjdG9yeSBIb21lUGFnZSBIb3Jpem9udGFsIEhvcml6b250YWxGb3JtIEhvcml6b250YWxHYXVnZSBIb3Jpem9udGFsU2Nyb2xsUG9zaXRpb24gSG9ybmVyRm9ybSBIb3RlbGxpbmdUU3F1YXJlRGlzdHJpYnV0aW9uIEhveXREaXN0cmlidXRpb24gSFRNTFNhdmUgSHVlIEh1bXBEb3duSHVtcCBIdW1wRXF1YWwgSHVyd2l0ekxlcmNoUGhpIEh1cndpdHpaZXRhIEh5cGVyYm9saWNEaXN0cmlidXRpb24gSHlwZXJjdWJlR3JhcGggSHlwZXJleHBvbmVudGlhbERpc3RyaWJ1dGlvbiBIeXBlcmZhY3RvcmlhbCBIeXBlcmdlb21ldHJpYzBGMSBIeXBlcmdlb21ldHJpYzBGMVJlZ3VsYXJpemVkIEh5cGVyZ2VvbWV0cmljMUYxIEh5cGVyZ2VvbWV0cmljMUYxUmVndWxhcml6ZWQgSHlwZXJnZW9tZXRyaWMyRjEgSHlwZXJnZW9tZXRyaWMyRjFSZWd1bGFyaXplZCBIeXBlcmdlb21ldHJpY0Rpc3RyaWJ1dGlvbiBIeXBlcmdlb21ldHJpY1BGUSBIeXBlcmdlb21ldHJpY1BGUVJlZ3VsYXJpemVkIEh5cGVyZ2VvbWV0cmljVSBIeXBlcmxpbmsgSHlwZXJsaW5rQ3JlYXRpb25TZXR0aW5ncyBIeXBoZW5hdGlvbiBIeXBoZW5hdGlvbk9wdGlvbnMgSHlwb2V4cG9uZW50aWFsRGlzdHJpYnV0aW9uIEh5cG90aGVzaXNUZXN0RGF0YSBJIElkZW50aXR5IElkZW50aXR5TWF0cml4IElmIElnbm9yZUNhc2UgSW0gSW1hZ2UgSW1hZ2UzRCBJbWFnZTNEU2xpY2VzIEltYWdlQWNjdW11bGF0ZSBJbWFnZUFkZCBJbWFnZUFkanVzdCBJbWFnZUFsaWduIEltYWdlQXBwbHkgSW1hZ2VBc3BlY3RSYXRpbyBJbWFnZUFzc2VtYmxlIEltYWdlQ2FjaGUgSW1hZ2VDYWNoZVZhbGlkIEltYWdlQ2FwdHVyZSBJbWFnZUNoYW5uZWxzIEltYWdlQ2xpcCBJbWFnZUNvbG9yU3BhY2UgSW1hZ2VDb21wb3NlIEltYWdlQ29udm9sdmUgSW1hZ2VDb29jY3VycmVuY2UgSW1hZ2VDb3JuZXJzIEltYWdlQ29ycmVsYXRlIEltYWdlQ29ycmVzcG9uZGluZ1BvaW50cyBJbWFnZUNyb3AgSW1hZ2VEYXRhIEltYWdlRGF0YVBhY2tldCBJbWFnZURlY29udm9sdmUgSW1hZ2VEZW1vc2FpYyBJbWFnZURpZmZlcmVuY2UgSW1hZ2VEaW1lbnNpb25zIEltYWdlRGlzdGFuY2UgSW1hZ2VFZmZlY3QgSW1hZ2VGZWF0dXJlVHJhY2sgSW1hZ2VGaWxlQXBwbHkgSW1hZ2VGaWxlRmlsdGVyIEltYWdlRmlsZVNjYW4gSW1hZ2VGaWx0ZXIgSW1hZ2VGb3Jlc3RpbmdDb21wb25lbnRzIEltYWdlRm9yd2FyZFRyYW5zZm9ybWF0aW9uIEltYWdlSGlzdG9ncmFtIEltYWdlS2V5cG9pbnRzIEltYWdlTGV2ZWxzIEltYWdlTGluZXMgSW1hZ2VNYXJnaW5zIEltYWdlTWFya2VycyBJbWFnZU1lYXN1cmVtZW50cyBJbWFnZU11bHRpcGx5IEltYWdlT2Zmc2V0IEltYWdlUGFkIEltYWdlUGFkZGluZyBJbWFnZVBhcnRpdGlvbiBJbWFnZVBlcmlvZG9ncmFtIEltYWdlUGVyc3BlY3RpdmVUcmFuc2Zvcm1hdGlvbiBJbWFnZVEgSW1hZ2VSYW5nZUNhY2hlIEltYWdlUmVmbGVjdCBJbWFnZVJlZ2lvbiBJbWFnZVJlc2l6ZSBJbWFnZVJlc29sdXRpb24gSW1hZ2VSb3RhdGUgSW1hZ2VSb3RhdGVkIEltYWdlU2NhbGVkIEltYWdlU2NhbiBJbWFnZVNpemUgSW1hZ2VTaXplQWN0aW9uIEltYWdlU2l6ZUNhY2hlIEltYWdlU2l6ZU11bHRpcGxpZXJzIEltYWdlU2l6ZVJhdyBJbWFnZVN1YnRyYWN0IEltYWdlVGFrZSBJbWFnZVRyYW5zZm9ybWF0aW9uIEltYWdlVHJpbSBJbWFnZVR5cGUgSW1hZ2VWYWx1ZSBJbWFnZVZhbHVlUG9zaXRpb25zIEltcGxpZXMgSW1wb3J0IEltcG9ydEF1dG9SZXBsYWNlbWVudHMgSW1wb3J0U3RyaW5nIEltcHJvdmVtZW50SW1wb3J0YW5jZSBJbiBJbmNpZGVuY2VHcmFwaCBJbmNpZGVuY2VMaXN0IEluY2lkZW5jZU1hdHJpeCBJbmNsdWRlQ29uc3RhbnRCYXNpcyBJbmNsdWRlRmlsZUV4dGVuc2lvbiBJbmNsdWRlUG9kcyBJbmNsdWRlU2luZ3VsYXJUZXJtIEluY3JlbWVudCBJbmRlbnQgSW5kZW50aW5nTmV3bGluZVNwYWNpbmdzIEluZGVudE1heEZyYWN0aW9uIEluZGVwZW5kZW5jZVRlc3QgSW5kZXBlbmRlbnRFZGdlU2V0USBJbmRlcGVuZGVudFVuaXQgSW5kZXBlbmRlbnRWZXJ0ZXhTZXRRIEluZGV0ZXJtaW5hdGUgSW5kZXhDcmVhdGlvbk9wdGlvbnMgSW5kZXhlZCBJbmRleEdyYXBoIEluZGV4VGFnIEluZXF1YWxpdHkgSW5leGFjdE51bWJlclEgSW5leGFjdE51bWJlcnMgSW5maW5pdHkgSW5maXggSW5mb3JtYXRpb24gSW5oZXJpdGVkIEluaGVyaXRTY29wZSBJbml0aWFsaXphdGlvbiBJbml0aWFsaXphdGlvbkNlbGwgSW5pdGlhbGl6YXRpb25DZWxsRXZhbHVhdGlvbiBJbml0aWFsaXphdGlvbkNlbGxXYXJuaW5nIElubGluZUNvdW50ZXJBc3NpZ25tZW50cyBJbmxpbmVDb3VudGVySW5jcmVtZW50cyBJbmxpbmVSdWxlcyBJbm5lciBJbnBhaW50IElucHV0IElucHV0QWxpYXNlcyBJbnB1dEFzc3VtcHRpb25zIElucHV0QXV0b1JlcGxhY2VtZW50cyBJbnB1dEZpZWxkIElucHV0RmllbGRCb3ggSW5wdXRGaWVsZEJveE9wdGlvbnMgSW5wdXRGb3JtIElucHV0R3JvdXBpbmcgSW5wdXROYW1lUGFja2V0IElucHV0Tm90ZWJvb2sgSW5wdXRQYWNrZXQgSW5wdXRTZXR0aW5ncyBJbnB1dFN0cmVhbSBJbnB1dFN0cmluZyBJbnB1dFN0cmluZ1BhY2tldCBJbnB1dFRvQm94Rm9ybVBhY2tldCBJbnNlcnQgSW5zZXJ0aW9uUG9pbnRPYmplY3QgSW5zZXJ0UmVzdWx0cyBJbnNldCBJbnNldDNEQm94IEluc2V0M0RCb3hPcHRpb25zIEluc2V0Qm94IEluc2V0Qm94T3B0aW9ucyBJbnN0YWxsIEluc3RhbGxTZXJ2aWNlIEluU3RyaW5nIEludGVnZXIgSW50ZWdlckRpZ2l0cyBJbnRlZ2VyRXhwb25lbnQgSW50ZWdlckxlbmd0aCBJbnRlZ2VyUGFydCBJbnRlZ2VyUGFydGl0aW9ucyBJbnRlZ2VyUSBJbnRlZ2VycyBJbnRlZ2VyU3RyaW5nIEludGVncmFsIEludGVncmF0ZSBJbnRlcmFjdGl2ZSBJbnRlcmFjdGl2ZVRyYWRpbmdDaGFydCBJbnRlcmxhY2VkIEludGVybGVhdmluZyBJbnRlcm5hbGx5QmFsYW5jZWREZWNvbXBvc2l0aW9uIEludGVycG9sYXRpbmdGdW5jdGlvbiBJbnRlcnBvbGF0aW5nUG9seW5vbWlhbCBJbnRlcnBvbGF0aW9uIEludGVycG9sYXRpb25PcmRlciBJbnRlcnBvbGF0aW9uUG9pbnRzIEludGVycG9sYXRpb25QcmVjaXNpb24gSW50ZXJwcmV0YXRpb24gSW50ZXJwcmV0YXRpb25Cb3ggSW50ZXJwcmV0YXRpb25Cb3hPcHRpb25zIEludGVycHJldGF0aW9uRnVuY3Rpb24gSW50ZXJwcmV0VGVtcGxhdGUgSW50ZXJxdWFydGlsZVJhbmdlIEludGVycnVwdCBJbnRlcnJ1cHRTZXR0aW5ncyBJbnRlcnNlY3Rpb24gSW50ZXJ2YWwgSW50ZXJ2YWxJbnRlcnNlY3Rpb24gSW50ZXJ2YWxNZW1iZXJRIEludGVydmFsVW5pb24gSW52ZXJzZSBJbnZlcnNlQmV0YVJlZ3VsYXJpemVkIEludmVyc2VDREYgSW52ZXJzZUNoaVNxdWFyZURpc3RyaWJ1dGlvbiBJbnZlcnNlQ29udGludW91c1dhdmVsZXRUcmFuc2Zvcm0gSW52ZXJzZURpc3RhbmNlVHJhbnNmb3JtIEludmVyc2VFbGxpcHRpY05vbWVRIEludmVyc2VFcmYgSW52ZXJzZUVyZmMgSW52ZXJzZUZvdXJpZXIgSW52ZXJzZUZvdXJpZXJDb3NUcmFuc2Zvcm0gSW52ZXJzZUZvdXJpZXJTZXF1ZW5jZVRyYW5zZm9ybSBJbnZlcnNlRm91cmllclNpblRyYW5zZm9ybSBJbnZlcnNlRm91cmllclRyYW5zZm9ybSBJbnZlcnNlRnVuY3Rpb24gSW52ZXJzZUZ1bmN0aW9ucyBJbnZlcnNlR2FtbWFEaXN0cmlidXRpb24gSW52ZXJzZUdhbW1hUmVndWxhcml6ZWQgSW52ZXJzZUdhdXNzaWFuRGlzdHJpYnV0aW9uIEludmVyc2VHdWRlcm1hbm5pYW4gSW52ZXJzZUhhdmVyc2luZSBJbnZlcnNlSmFjb2JpQ0QgSW52ZXJzZUphY29iaUNOIEludmVyc2VKYWNvYmlDUyBJbnZlcnNlSmFjb2JpREMgSW52ZXJzZUphY29iaUROIEludmVyc2VKYWNvYmlEUyBJbnZlcnNlSmFjb2JpTkMgSW52ZXJzZUphY29iaU5EIEludmVyc2VKYWNvYmlOUyBJbnZlcnNlSmFjb2JpU0MgSW52ZXJzZUphY29iaVNEIEludmVyc2VKYWNvYmlTTiBJbnZlcnNlTGFwbGFjZVRyYW5zZm9ybSBJbnZlcnNlUGVybXV0YXRpb24gSW52ZXJzZVJhZG9uIEludmVyc2VTZXJpZXMgSW52ZXJzZVN1cnZpdmFsRnVuY3Rpb24gSW52ZXJzZVdhdmVsZXRUcmFuc2Zvcm0gSW52ZXJzZVdlaWVyc3RyYXNzUCBJbnZlcnNlWlRyYW5zZm9ybSBJbnZpc2libGUgSW52aXNpYmxlQXBwbGljYXRpb24gSW52aXNpYmxlVGltZXMgSXJyZWR1Y2libGVQb2x5bm9taWFsUSBJc29sYXRpbmdJbnRlcnZhbCBJc29tb3JwaGljR3JhcGhRIElzb3RvcGVEYXRhIEl0YWxpYyBJdGVtIEl0ZW1Cb3ggSXRlbUJveE9wdGlvbnMgSXRlbVNpemUgSXRlbVN0eWxlIEl0b1Byb2Nlc3MgSmFjY2FyZERpc3NpbWlsYXJpdHkgSmFjb2JpQW1wbGl0dWRlIEphY29iaWFuIEphY29iaUNEIEphY29iaUNOIEphY29iaUNTIEphY29iaURDIEphY29iaUROIEphY29iaURTIEphY29iaU5DIEphY29iaU5EIEphY29iaU5TIEphY29iaVAgSmFjb2JpU0MgSmFjb2JpU0QgSmFjb2JpU04gSmFjb2JpU3ltYm9sIEphY29iaVpldGEgSmFua29Hcm91cEoxIEphbmtvR3JvdXBKMiBKYW5rb0dyb3VwSjMgSmFua29Hcm91cEo0IEphcnF1ZUJlcmFBTE1UZXN0IEpvaG5zb25EaXN0cmlidXRpb24gSm9pbiBKb2luZWQgSm9pbmVkQ3VydmUgSm9pbmVkQ3VydmVCb3ggSm9pbkZvcm0gSm9yZGFuRGVjb21wb3NpdGlvbiBKb3JkYW5Nb2RlbERlY29tcG9zaXRpb24gSyBLYWdpQ2hhcnQgS2Fpc2VyQmVzc2VsV2luZG93IEthaXNlcldpbmRvdyBLYWxtYW5Fc3RpbWF0b3IgS2FsbWFuRmlsdGVyIEthcmh1bmVuTG9ldmVEZWNvbXBvc2l0aW9uIEthcnlUcmVlIEthdHpDZW50cmFsaXR5IEtDb3JlQ29tcG9uZW50cyBLRGlzdHJpYnV0aW9uIEtlbHZpbkJlaSBLZWx2aW5CZXIgS2VsdmluS2VpIEtlbHZpbktlciBLZW5kYWxsVGF1IEtlbmRhbGxUYXVUZXN0IEtlcm5lbEV4ZWN1dGUgS2VybmVsTWl4dHVyZURpc3RyaWJ1dGlvbiBLZXJuZWxPYmplY3QgS2VybmVscyBLZXQgS2hpbmNoaW4gS2lyY2hob2ZmR3JhcGggS2lyY2hob2ZmTWF0cml4IEtsZWluSW52YXJpYW50SiBLbmlnaHRUb3VyR3JhcGggS25vdERhdGEgS25vd25Vbml0USBLb2xtb2dvcm92U21pcm5vdlRlc3QgS3JvbmVja2VyRGVsdGEgS3JvbmVja2VyTW9kZWxEZWNvbXBvc2l0aW9uIEtyb25lY2tlclByb2R1Y3QgS3JvbmVja2VyU3ltYm9sIEt1aXBlclRlc3QgS3VtYXJhc3dhbXlEaXN0cmlidXRpb24gS3VydG9zaXMgS3V3YWhhcmFGaWx0ZXIgTGFiZWwgTGFiZWxlZCBMYWJlbGVkU2xpZGVyIExhYmVsaW5nRnVuY3Rpb24gTGFiZWxTdHlsZSBMYWd1ZXJyZUwgTGFtYmRhQ29tcG9uZW50cyBMYW1iZXJ0VyBMYW5jem9zV2luZG93IExhbmRhdURpc3RyaWJ1dGlvbiBMYW5ndWFnZSBMYW5ndWFnZUNhdGVnb3J5IExhcGxhY2VEaXN0cmlidXRpb24gTGFwbGFjZVRyYW5zZm9ybSBMYXBsYWNpYW4gTGFwbGFjaWFuRmlsdGVyIExhcGxhY2lhbkdhdXNzaWFuRmlsdGVyIExhcmdlIExhcmdlciBMYXN0IExhdGl0dWRlIExhdGl0dWRlTG9uZ2l0dWRlIExhdHRpY2VEYXRhIExhdHRpY2VSZWR1Y2UgTGF1bmNoIExhdW5jaEtlcm5lbHMgTGF5ZXJlZEdyYXBoUGxvdCBMYXllclNpemVGdW5jdGlvbiBMYXlvdXRJbmZvcm1hdGlvbiBMQ00gTGVhZkNvdW50IExlYXBZZWFyUSBMZWFzdFNxdWFyZXMgTGVhc3RTcXVhcmVzRmlsdGVyS2VybmVsIExlZnQgTGVmdEFycm93IExlZnRBcnJvd0JhciBMZWZ0QXJyb3dSaWdodEFycm93IExlZnREb3duVGVlVmVjdG9yIExlZnREb3duVmVjdG9yIExlZnREb3duVmVjdG9yQmFyIExlZnRSaWdodEFycm93IExlZnRSaWdodFZlY3RvciBMZWZ0VGVlIExlZnRUZWVBcnJvdyBMZWZ0VGVlVmVjdG9yIExlZnRUcmlhbmdsZSBMZWZ0VHJpYW5nbGVCYXIgTGVmdFRyaWFuZ2xlRXF1YWwgTGVmdFVwRG93blZlY3RvciBMZWZ0VXBUZWVWZWN0b3IgTGVmdFVwVmVjdG9yIExlZnRVcFZlY3RvckJhciBMZWZ0VmVjdG9yIExlZnRWZWN0b3JCYXIgTGVnZW5kQXBwZWFyYW5jZSBMZWdlbmRlZCBMZWdlbmRGdW5jdGlvbiBMZWdlbmRMYWJlbCBMZWdlbmRMYXlvdXQgTGVnZW5kTWFyZ2lucyBMZWdlbmRNYXJrZXJzIExlZ2VuZE1hcmtlclNpemUgTGVnZW5kcmVQIExlZ2VuZHJlUSBMZWdlbmRyZVR5cGUgTGVuZ3RoIExlbmd0aFdoaWxlIExlcmNoUGhpIExlc3MgTGVzc0VxdWFsIExlc3NFcXVhbEdyZWF0ZXIgTGVzc0Z1bGxFcXVhbCBMZXNzR3JlYXRlciBMZXNzTGVzcyBMZXNzU2xhbnRFcXVhbCBMZXNzVGlsZGUgTGV0dGVyQ2hhcmFjdGVyIExldHRlclEgTGV2ZWwgTGV2ZW5lVGVzdCBMZXZpQ2l2aXRhVGVuc29yIExldnlEaXN0cmlidXRpb24gTGV4aWNvZ3JhcGhpYyBMaWJyYXJ5RnVuY3Rpb24gTGlicmFyeUZ1bmN0aW9uRXJyb3IgTGlicmFyeUZ1bmN0aW9uSW5mb3JtYXRpb24gTGlicmFyeUZ1bmN0aW9uTG9hZCBMaWJyYXJ5RnVuY3Rpb25VbmxvYWQgTGlicmFyeUxvYWQgTGlicmFyeVVubG9hZCBMaWNlbnNlSUQgTGlmdGluZ0ZpbHRlckRhdGEgTGlmdGluZ1dhdmVsZXRUcmFuc2Zvcm0gTGlnaHRCbHVlIExpZ2h0QnJvd24gTGlnaHRDeWFuIExpZ2h0ZXIgTGlnaHRHcmF5IExpZ2h0R3JlZW4gTGlnaHRpbmcgTGlnaHRpbmdBbmdsZSBMaWdodE1hZ2VudGEgTGlnaHRPcmFuZ2UgTGlnaHRQaW5rIExpZ2h0UHVycGxlIExpZ2h0UmVkIExpZ2h0U291cmNlcyBMaWdodFllbGxvdyBMaWtlbGlob29kIExpbWl0IExpbWl0c1Bvc2l0aW9uaW5nIExpbWl0c1Bvc2l0aW9uaW5nVG9rZW5zIExpbmRsZXlEaXN0cmlidXRpb24gTGluZSBMaW5lM0RCb3ggTGluZWFyRmlsdGVyIExpbmVhckZyYWN0aW9uYWxUcmFuc2Zvcm0gTGluZWFyTW9kZWxGaXQgTGluZWFyT2Zmc2V0RnVuY3Rpb24gTGluZWFyUHJvZ3JhbW1pbmcgTGluZWFyUmVjdXJyZW5jZSBMaW5lYXJTb2x2ZSBMaW5lYXJTb2x2ZUZ1bmN0aW9uIExpbmVCb3ggTGluZUJyZWFrIExpbmVicmVha0FkanVzdG1lbnRzIExpbmVCcmVha0NoYXJ0IExpbmVCcmVha1dpdGhpbiBMaW5lQ29sb3IgTGluZUZvcm0gTGluZUdyYXBoIExpbmVJbmRlbnQgTGluZUluZGVudE1heEZyYWN0aW9uIExpbmVJbnRlZ3JhbENvbnZvbHV0aW9uUGxvdCBMaW5lSW50ZWdyYWxDb252b2x1dGlvblNjYWxlIExpbmVMZWdlbmQgTGluZU9wYWNpdHkgTGluZVNwYWNpbmcgTGluZVdyYXBQYXJ0cyBMaW5rQWN0aXZhdGUgTGlua0Nsb3NlIExpbmtDb25uZWN0IExpbmtDb25uZWN0ZWRRIExpbmtDcmVhdGUgTGlua0Vycm9yIExpbmtGbHVzaCBMaW5rRnVuY3Rpb24gTGlua0hvc3QgTGlua0ludGVycnVwdCBMaW5rTGF1bmNoIExpbmtNb2RlIExpbmtPYmplY3QgTGlua09wZW4gTGlua09wdGlvbnMgTGlua1BhdHRlcm5zIExpbmtQcm90b2NvbCBMaW5rUmVhZCBMaW5rUmVhZEhlbGQgTGlua1JlYWR5USBMaW5rcyBMaW5rV3JpdGUgTGlua1dyaXRlSGVsZCBMaW91dmlsbGVMYW1iZGEgTGlzdCBMaXN0YWJsZSBMaXN0QW5pbWF0ZSBMaXN0Q29udG91clBsb3QgTGlzdENvbnRvdXJQbG90M0QgTGlzdENvbnZvbHZlIExpc3RDb3JyZWxhdGUgTGlzdEN1cnZlUGF0aFBsb3QgTGlzdERlY29udm9sdmUgTGlzdERlbnNpdHlQbG90IExpc3RlbiBMaXN0Rm91cmllclNlcXVlbmNlVHJhbnNmb3JtIExpc3RJbnRlcnBvbGF0aW9uIExpc3RMaW5lSW50ZWdyYWxDb252b2x1dGlvblBsb3QgTGlzdExpbmVQbG90IExpc3RMb2dMaW5lYXJQbG90IExpc3RMb2dMb2dQbG90IExpc3RMb2dQbG90IExpc3RQaWNrZXIgTGlzdFBpY2tlckJveCBMaXN0UGlja2VyQm94QmFja2dyb3VuZCBMaXN0UGlja2VyQm94T3B0aW9ucyBMaXN0UGxheSBMaXN0UGxvdCBMaXN0UGxvdDNEIExpc3RQb2ludFBsb3QzRCBMaXN0UG9sYXJQbG90IExpc3RRIExpc3RTdHJlYW1EZW5zaXR5UGxvdCBMaXN0U3RyZWFtUGxvdCBMaXN0U3VyZmFjZVBsb3QzRCBMaXN0VmVjdG9yRGVuc2l0eVBsb3QgTGlzdFZlY3RvclBsb3QgTGlzdFZlY3RvclBsb3QzRCBMaXN0WlRyYW5zZm9ybSBMaXRlcmFsIExpdGVyYWxTZWFyY2ggTG9jYWxDbHVzdGVyaW5nQ29lZmZpY2llbnQgTG9jYWxpemVWYXJpYWJsZXMgTG9jYXRpb25FcXVpdmFsZW5jZVRlc3QgTG9jYXRpb25UZXN0IExvY2F0b3IgTG9jYXRvckF1dG9DcmVhdGUgTG9jYXRvckJveCBMb2NhdG9yQm94T3B0aW9ucyBMb2NhdG9yQ2VudGVyaW5nIExvY2F0b3JQYW5lIExvY2F0b3JQYW5lQm94IExvY2F0b3JQYW5lQm94T3B0aW9ucyBMb2NhdG9yUmVnaW9uIExvY2tlZCBMb2cgTG9nMTAgTG9nMiBMb2dCYXJuZXNHIExvZ0dhbW1hIExvZ0dhbW1hRGlzdHJpYnV0aW9uIExvZ2ljYWxFeHBhbmQgTG9nSW50ZWdyYWwgTG9naXN0aWNEaXN0cmlidXRpb24gTG9naXRNb2RlbEZpdCBMb2dMaWtlbGlob29kIExvZ0xpbmVhclBsb3QgTG9nTG9naXN0aWNEaXN0cmlidXRpb24gTG9nTG9nUGxvdCBMb2dNdWx0aW5vcm1hbERpc3RyaWJ1dGlvbiBMb2dOb3JtYWxEaXN0cmlidXRpb24gTG9nUGxvdCBMb2dSYW5rVGVzdCBMb2dTZXJpZXNEaXN0cmlidXRpb24gTG9uZ0VxdWFsIExvbmdlc3QgTG9uZ2VzdEFzY2VuZGluZ1NlcXVlbmNlIExvbmdlc3RDb21tb25TZXF1ZW5jZSBMb25nZXN0Q29tbW9uU2VxdWVuY2VQb3NpdGlvbnMgTG9uZ2VzdENvbW1vblN1YnNlcXVlbmNlIExvbmdlc3RDb21tb25TdWJzZXF1ZW5jZVBvc2l0aW9ucyBMb25nZXN0TWF0Y2ggTG9uZ0Zvcm0gTG9uZ2l0dWRlIExvbmdMZWZ0QXJyb3cgTG9uZ0xlZnRSaWdodEFycm93IExvbmdSaWdodEFycm93IExvb3BiYWNrIExvb3BGcmVlR3JhcGhRIExvd2VyQ2FzZVEgTG93ZXJMZWZ0QXJyb3cgTG93ZXJSaWdodEFycm93IExvd2VyVHJpYW5ndWxhcml6ZSBMb3dwYXNzRmlsdGVyIExRRXN0aW1hdG9yR2FpbnMgTFFHUmVndWxhdG9yIExRT3V0cHV0UmVndWxhdG9yR2FpbnMgTFFSZWd1bGF0b3JHYWlucyBMVUJhY2tTdWJzdGl0dXRpb24gTHVjYXNMIEx1Y2Npb1NhbWlDb21wb25lbnRzIExVRGVjb21wb3NpdGlvbiBMeWFwdW5vdlNvbHZlIEx5b25zR3JvdXBMeSBNYWNoaW5lSUQgTWFjaGluZU5hbWUgTWFjaGluZU51bWJlclEgTWFjaGluZVByZWNpc2lvbiBNYWNpbnRvc2hTeXN0ZW1QYWdlU2V0dXAgTWFnZW50YSBNYWduaWZpY2F0aW9uIE1hZ25pZnkgTWFpblNvbHZlIE1haW50YWluRHluYW1pY0NhY2hlcyBNYWpvcml0eSBNYWtlQm94ZXMgTWFrZUV4cHJlc3Npb24gTWFrZVJ1bGVzIE1hbmdvbGR0TGFtYmRhIE1hbmhhdHRhbkRpc3RhbmNlIE1hbmlwdWxhdGUgTWFuaXB1bGF0b3IgTWFubldoaXRuZXlUZXN0IE1hbnRpc3NhRXhwb25lbnQgTWFudWFsIE1hcCBNYXBBbGwgTWFwQXQgTWFwSW5kZXhlZCBNQVByb2Nlc3MgTWFwVGhyZWFkIE1hcmN1bVEgTWFyZGlhQ29tYmluZWRUZXN0IE1hcmRpYUt1cnRvc2lzVGVzdCBNYXJkaWFTa2V3bmVzc1Rlc3QgTWFyZ2luYWxEaXN0cmlidXRpb24gTWFya292UHJvY2Vzc1Byb3BlcnRpZXMgTWFza2luZyBNYXRjaGluZ0Rpc3NpbWlsYXJpdHkgTWF0Y2hMb2NhbE5hbWVRIE1hdGNoTG9jYWxOYW1lcyBNYXRjaFEgTWF0ZXJpYWwgTWF0aGVtYXRpY2FOb3RhdGlvbiBNYXRoaWV1QyBNYXRoaWV1Q2hhcmFjdGVyaXN0aWNBIE1hdGhpZXVDaGFyYWN0ZXJpc3RpY0IgTWF0aGlldUNoYXJhY3RlcmlzdGljRXhwb25lbnQgTWF0aGlldUNQcmltZSBNYXRoaWV1R3JvdXBNMTEgTWF0aGlldUdyb3VwTTEyIE1hdGhpZXVHcm91cE0yMiBNYXRoaWV1R3JvdXBNMjMgTWF0aGlldUdyb3VwTTI0IE1hdGhpZXVTIE1hdGhpZXVTUHJpbWUgTWF0aE1MRm9ybSBNYXRoTUxUZXh0IE1hdHJpY2VzIE1hdHJpeEV4cCBNYXRyaXhGb3JtIE1hdHJpeEZ1bmN0aW9uIE1hdHJpeExvZyBNYXRyaXhQbG90IE1hdHJpeFBvd2VyIE1hdHJpeFEgTWF0cml4UmFuayBNYXggTWF4QmVuZCBNYXhEZXRlY3QgTWF4RXh0cmFCYW5kd2lkdGhzIE1heEV4dHJhQ29uZGl0aW9ucyBNYXhGZWF0dXJlcyBNYXhGaWx0ZXIgTWF4aW1pemUgTWF4SXRlcmF0aW9ucyBNYXhNZW1vcnlVc2VkIE1heE1peHR1cmVLZXJuZWxzIE1heFBsb3RQb2ludHMgTWF4UG9pbnRzIE1heFJlY3Vyc2lvbiBNYXhTdGFibGVEaXN0cmlidXRpb24gTWF4U3RlcEZyYWN0aW9uIE1heFN0ZXBzIE1heFN0ZXBTaXplIE1heFZhbHVlIE1heHdlbGxEaXN0cmlidXRpb24gTWNMYXVnaGxpbkdyb3VwTWNMIE1lYW4gTWVhbkNsdXN0ZXJpbmdDb2VmZmljaWVudCBNZWFuRGVncmVlQ29ubmVjdGl2aXR5IE1lYW5EZXZpYXRpb24gTWVhbkZpbHRlciBNZWFuR3JhcGhEaXN0YW5jZSBNZWFuTmVpZ2hib3JEZWdyZWUgTWVhblNoaWZ0IE1lYW5TaGlmdEZpbHRlciBNZWRpYW4gTWVkaWFuRGV2aWF0aW9uIE1lZGlhbkZpbHRlciBNZWRpdW0gTWVpamVyRyBNZWl4bmVyRGlzdHJpYnV0aW9uIE1lbWJlclEgTWVtb3J5Q29uc3RyYWluZWQgTWVtb3J5SW5Vc2UgTWVudSBNZW51QXBwZWFyYW5jZSBNZW51Q29tbWFuZEtleSBNZW51RXZhbHVhdG9yIE1lbnVJdGVtIE1lbnVQYWNrZXQgTWVudVNvcnRpbmdWYWx1ZSBNZW51U3R5bGUgTWVudVZpZXcgTWVyZ2VEaWZmZXJlbmNlcyBNZXNoIE1lc2hGdW5jdGlvbnMgTWVzaFJhbmdlIE1lc2hTaGFkaW5nIE1lc2hTdHlsZSBNZXNzYWdlIE1lc3NhZ2VEaWFsb2cgTWVzc2FnZUxpc3QgTWVzc2FnZU5hbWUgTWVzc2FnZU9wdGlvbnMgTWVzc2FnZVBhY2tldCBNZXNzYWdlcyBNZXNzYWdlc05vdGVib29rIE1ldGFDaGFyYWN0ZXJzIE1ldGFJbmZvcm1hdGlvbiBNZXRob2QgTWV0aG9kT3B0aW9ucyBNZXhpY2FuSGF0V2F2ZWxldCBNZXllcldhdmVsZXQgTWluIE1pbkRldGVjdCBNaW5GaWx0ZXIgTWluaW1hbFBvbHlub21pYWwgTWluaW1hbFN0YXRlU3BhY2VNb2RlbCBNaW5pbWl6ZSBNaW5vcnMgTWluUmVjdXJzaW9uIE1pblNpemUgTWluU3RhYmxlRGlzdHJpYnV0aW9uIE1pbnVzIE1pbnVzUGx1cyBNaW5WYWx1ZSBNaXNzaW5nIE1pc3NpbmdEYXRhTWV0aG9kIE1pdHRhZ0xlZmZsZXJFIE1peGVkUmFkaXggTWl4ZWRSYWRpeFF1YW50aXR5IE1peHR1cmVEaXN0cmlidXRpb24gTW9kIE1vZGFsIE1vZGUgTW9kdWxhciBNb2R1bGFyTGFtYmRhIE1vZHVsZSBNb2R1bHVzIE1vZWJpdXNNdSBNb21lbnQgTW9tZW50YXJ5IE1vbWVudENvbnZlcnQgTW9tZW50RXZhbHVhdGUgTW9tZW50R2VuZXJhdGluZ0Z1bmN0aW9uIE1vbmRheSBNb25pdG9yIE1vbm9taWFsTGlzdCBNb25vbWlhbE9yZGVyIE1vbnN0ZXJHcm91cE0gTW9ybGV0V2F2ZWxldCBNb3JwaG9sb2dpY2FsQmluYXJpemUgTW9ycGhvbG9naWNhbEJyYW5jaFBvaW50cyBNb3JwaG9sb2dpY2FsQ29tcG9uZW50cyBNb3JwaG9sb2dpY2FsRXVsZXJOdW1iZXIgTW9ycGhvbG9naWNhbEdyYXBoIE1vcnBob2xvZ2ljYWxQZXJpbWV0ZXIgTW9ycGhvbG9naWNhbFRyYW5zZm9ybSBNb3N0IE1vdXNlQW5ub3RhdGlvbiBNb3VzZUFwcGVhcmFuY2UgTW91c2VBcHBlYXJhbmNlVGFnIE1vdXNlQnV0dG9ucyBNb3VzZW92ZXIgTW91c2VQb2ludGVyTm90ZSBNb3VzZVBvc2l0aW9uIE1vdmluZ0F2ZXJhZ2UgTW92aW5nTWVkaWFuIE1veWFsRGlzdHJpYnV0aW9uIE11bHRpZWRnZVN0eWxlIE11bHRpbGF1bmNoV2FybmluZyBNdWx0aUxldHRlckl0YWxpY3MgTXVsdGlMZXR0ZXJTdHlsZSBNdWx0aWxpbmVGdW5jdGlvbiBNdWx0aW5vbWlhbCBNdWx0aW5vbWlhbERpc3RyaWJ1dGlvbiBNdWx0aW5vcm1hbERpc3RyaWJ1dGlvbiBNdWx0aXBsaWNhdGl2ZU9yZGVyIE11bHRpcGxpY2l0eSBNdWx0aXNlbGVjdGlvbiBNdWx0aXZhcmlhdGVIeXBlcmdlb21ldHJpY0Rpc3RyaWJ1dGlvbiBNdWx0aXZhcmlhdGVQb2lzc29uRGlzdHJpYnV0aW9uIE11bHRpdmFyaWF0ZVREaXN0cmlidXRpb24gTiBOYWthZ2FtaURpc3RyaWJ1dGlvbiBOYW1lUSBOYW1lcyBOYW1lc3BhY2VCb3ggTmFuZCBOQXJnTWF4IE5BcmdNaW4gTkJlcm5vdWxsaUIgTkNhY2hlIE5EU29sdmUgTkRTb2x2ZVZhbHVlIE5lYXJlc3QgTmVhcmVzdEZ1bmN0aW9uIE5lZWRDdXJyZW50RnJvbnRFbmRQYWNrYWdlUGFja2V0IE5lZWRDdXJyZW50RnJvbnRFbmRTeW1ib2xzUGFja2V0IE5lZWRsZW1hbld1bnNjaFNpbWlsYXJpdHkgTmVlZHMgTmVnYXRpdmUgTmVnYXRpdmVCaW5vbWlhbERpc3RyaWJ1dGlvbiBOZWdhdGl2ZU11bHRpbm9taWFsRGlzdHJpYnV0aW9uIE5laWdoYm9yaG9vZEdyYXBoIE5lc3QgTmVzdGVkR3JlYXRlckdyZWF0ZXIgTmVzdGVkTGVzc0xlc3MgTmVzdGVkU2NyaXB0UnVsZXMgTmVzdExpc3QgTmVzdFdoaWxlIE5lc3RXaGlsZUxpc3QgTmV2aWxsZVRoZXRhQyBOZXZpbGxlVGhldGFEIE5ldmlsbGVUaGV0YU4gTmV2aWxsZVRoZXRhUyBOZXdQcmltaXRpdmVTdHlsZSBORXhwZWN0YXRpb24gTmV4dCBOZXh0UHJpbWUgTkhvbGRBbGwgTkhvbGRGaXJzdCBOSG9sZFJlc3QgTmljaG9sc0dyaWRMaW5lcyBOaWNob2xzUGxvdCBOSW50ZWdyYXRlIE5NYXhpbWl6ZSBOTWF4VmFsdWUgTk1pbmltaXplIE5NaW5WYWx1ZSBOb21pbmFsVmFyaWFibGVzIE5vbkFzc29jaWF0aXZlIE5vbmNlbnRyYWxCZXRhRGlzdHJpYnV0aW9uIE5vbmNlbnRyYWxDaGlTcXVhcmVEaXN0cmlidXRpb24gTm9uY2VudHJhbEZSYXRpb0Rpc3RyaWJ1dGlvbiBOb25jZW50cmFsU3R1ZGVudFREaXN0cmlidXRpb24gTm9uQ29tbXV0YXRpdmVNdWx0aXBseSBOb25Db25zdGFudHMgTm9uZSBOb25saW5lYXJNb2RlbEZpdCBOb25sb2NhbE1lYW5zRmlsdGVyIE5vbk5lZ2F0aXZlIE5vblBvc2l0aXZlIE5vciBOb3JsdW5kQiBOb3JtIE5vcm1hbCBOb3JtYWxEaXN0cmlidXRpb24gTm9ybWFsR3JvdXBpbmcgTm9ybWFsaXplIE5vcm1hbGl6ZWRTcXVhcmVkRXVjbGlkZWFuRGlzdGFuY2UgTm9ybWFsc0Z1bmN0aW9uIE5vcm1GdW5jdGlvbiBOb3QgTm90Q29uZ3J1ZW50IE5vdEN1cENhcCBOb3REb3VibGVWZXJ0aWNhbEJhciBOb3RlYm9vayBOb3RlYm9va0FwcGx5IE5vdGVib29rQXV0b1NhdmUgTm90ZWJvb2tDbG9zZSBOb3RlYm9va0NvbnZlcnRTZXR0aW5ncyBOb3RlYm9va0NyZWF0ZSBOb3RlYm9va0NyZWF0ZVJldHVybk9iamVjdCBOb3RlYm9va0RlZmF1bHQgTm90ZWJvb2tEZWxldGUgTm90ZWJvb2tEaXJlY3RvcnkgTm90ZWJvb2tEeW5hbWljRXhwcmVzc2lvbiBOb3RlYm9va0V2YWx1YXRlIE5vdGVib29rRXZlbnRBY3Rpb25zIE5vdGVib29rRmlsZU5hbWUgTm90ZWJvb2tGaW5kIE5vdGVib29rRmluZFJldHVybk9iamVjdCBOb3RlYm9va0dldCBOb3RlYm9va0dldExheW91dEluZm9ybWF0aW9uUGFja2V0IE5vdGVib29rR2V0TWlzc3BlbGxpbmdzUGFja2V0IE5vdGVib29rSW5mb3JtYXRpb24gTm90ZWJvb2tJbnRlcmZhY2VPYmplY3QgTm90ZWJvb2tMb2NhdGUgTm90ZWJvb2tPYmplY3QgTm90ZWJvb2tPcGVuIE5vdGVib29rT3BlblJldHVybk9iamVjdCBOb3RlYm9va1BhdGggTm90ZWJvb2tQcmludCBOb3RlYm9va1B1dCBOb3RlYm9va1B1dFJldHVybk9iamVjdCBOb3RlYm9va1JlYWQgTm90ZWJvb2tSZXNldEdlbmVyYXRlZENlbGxzIE5vdGVib29rcyBOb3RlYm9va1NhdmUgTm90ZWJvb2tTYXZlQXMgTm90ZWJvb2tTZWxlY3Rpb24gTm90ZWJvb2tTZXR1cExheW91dEluZm9ybWF0aW9uUGFja2V0IE5vdGVib29rc01lbnUgTm90ZWJvb2tXcml0ZSBOb3RFbGVtZW50IE5vdEVxdWFsVGlsZGUgTm90RXhpc3RzIE5vdEdyZWF0ZXIgTm90R3JlYXRlckVxdWFsIE5vdEdyZWF0ZXJGdWxsRXF1YWwgTm90R3JlYXRlckdyZWF0ZXIgTm90R3JlYXRlckxlc3MgTm90R3JlYXRlclNsYW50RXF1YWwgTm90R3JlYXRlclRpbGRlIE5vdEh1bXBEb3duSHVtcCBOb3RIdW1wRXF1YWwgTm90TGVmdFRyaWFuZ2xlIE5vdExlZnRUcmlhbmdsZUJhciBOb3RMZWZ0VHJpYW5nbGVFcXVhbCBOb3RMZXNzIE5vdExlc3NFcXVhbCBOb3RMZXNzRnVsbEVxdWFsIE5vdExlc3NHcmVhdGVyIE5vdExlc3NMZXNzIE5vdExlc3NTbGFudEVxdWFsIE5vdExlc3NUaWxkZSBOb3ROZXN0ZWRHcmVhdGVyR3JlYXRlciBOb3ROZXN0ZWRMZXNzTGVzcyBOb3RQcmVjZWRlcyBOb3RQcmVjZWRlc0VxdWFsIE5vdFByZWNlZGVzU2xhbnRFcXVhbCBOb3RQcmVjZWRlc1RpbGRlIE5vdFJldmVyc2VFbGVtZW50IE5vdFJpZ2h0VHJpYW5nbGUgTm90UmlnaHRUcmlhbmdsZUJhciBOb3RSaWdodFRyaWFuZ2xlRXF1YWwgTm90U3F1YXJlU3Vic2V0IE5vdFNxdWFyZVN1YnNldEVxdWFsIE5vdFNxdWFyZVN1cGVyc2V0IE5vdFNxdWFyZVN1cGVyc2V0RXF1YWwgTm90U3Vic2V0IE5vdFN1YnNldEVxdWFsIE5vdFN1Y2NlZWRzIE5vdFN1Y2NlZWRzRXF1YWwgTm90U3VjY2VlZHNTbGFudEVxdWFsIE5vdFN1Y2NlZWRzVGlsZGUgTm90U3VwZXJzZXQgTm90U3VwZXJzZXRFcXVhbCBOb3RUaWxkZSBOb3RUaWxkZUVxdWFsIE5vdFRpbGRlRnVsbEVxdWFsIE5vdFRpbGRlVGlsZGUgTm90VmVydGljYWxCYXIgTlByb2JhYmlsaXR5IE5Qcm9kdWN0IE5Qcm9kdWN0RmFjdG9ycyBOUm9vdHMgTlNvbHZlIE5TdW0gTlN1bVRlcm1zIE51bGwgTnVsbFJlY29yZHMgTnVsbFNwYWNlIE51bGxXb3JkcyBOdW1iZXIgTnVtYmVyRmllbGRDbGFzc051bWJlciBOdW1iZXJGaWVsZERpc2NyaW1pbmFudCBOdW1iZXJGaWVsZEZ1bmRhbWVudGFsVW5pdHMgTnVtYmVyRmllbGRJbnRlZ3JhbEJhc2lzIE51bWJlckZpZWxkTm9ybVJlcHJlc2VudGF0aXZlcyBOdW1iZXJGaWVsZFJlZ3VsYXRvciBOdW1iZXJGaWVsZFJvb3RzT2ZVbml0eSBOdW1iZXJGaWVsZFNpZ25hdHVyZSBOdW1iZXJGb3JtIE51bWJlckZvcm1hdCBOdW1iZXJNYXJrcyBOdW1iZXJNdWx0aXBsaWVyIE51bWJlclBhZGRpbmcgTnVtYmVyUG9pbnQgTnVtYmVyUSBOdW1iZXJTZXBhcmF0b3IgTnVtYmVyU2lnbnMgTnVtYmVyU3RyaW5nIE51bWVyYXRvciBOdW1lcmljRnVuY3Rpb24gTnVtZXJpY1EgTnV0dGFsbFdpbmRvdyBOVmFsdWVzIE55cXVpc3RHcmlkTGluZXMgTnlxdWlzdFBsb3QgTyBPYnNlcnZhYmlsaXR5R3JhbWlhbiBPYnNlcnZhYmlsaXR5TWF0cml4IE9ic2VydmFibGVEZWNvbXBvc2l0aW9uIE9ic2VydmFibGVNb2RlbFEgT2RkUSBPZmYgT2Zmc2V0IE9MRURhdGEgT24gT05hbkdyb3VwT04gT25lSWRlbnRpdHkgT3BhY2l0eSBPcGVuIE9wZW5BcHBlbmQgT3BlbmVyIE9wZW5lckJveCBPcGVuZXJCb3hPcHRpb25zIE9wZW5lclZpZXcgT3BlbkZ1bmN0aW9uSW5zcGVjdG9yUGFja2V0IE9wZW5pbmcgT3BlblJlYWQgT3BlblNwZWNpYWxPcHRpb25zIE9wZW5UZW1wb3JhcnkgT3BlbldyaXRlIE9wZXJhdGUgT3BlcmF0aW5nU3lzdGVtIE9wdGltdW1GbG93RGF0YSBPcHRpb25hbCBPcHRpb25JbnNwZWN0b3JTZXR0aW5ncyBPcHRpb25RIE9wdGlvbnMgT3B0aW9uc1BhY2tldCBPcHRpb25zUGF0dGVybiBPcHRpb25WYWx1ZSBPcHRpb25WYWx1ZUJveCBPcHRpb25WYWx1ZUJveE9wdGlvbnMgT3IgT3JhbmdlIE9yZGVyIE9yZGVyRGlzdHJpYnV0aW9uIE9yZGVyZWRRIE9yZGVyaW5nIE9yZGVybGVzcyBPcm5zdGVpblVobGVuYmVja1Byb2Nlc3MgT3J0aG9nb25hbGl6ZSBPdXQgT3V0ZXIgT3V0cHV0QXV0b092ZXJ3cml0ZSBPdXRwdXRDb250cm9sbGFiaWxpdHlNYXRyaXggT3V0cHV0Q29udHJvbGxhYmxlTW9kZWxRIE91dHB1dEZvcm0gT3V0cHV0Rm9ybURhdGEgT3V0cHV0R3JvdXBpbmcgT3V0cHV0TWF0aEVkaXRFeHByZXNzaW9uIE91dHB1dE5hbWVQYWNrZXQgT3V0cHV0UmVzcG9uc2UgT3V0cHV0U2l6ZUxpbWl0IE91dHB1dFN0cmVhbSBPdmVyIE92ZXJCYXIgT3ZlckRvdCBPdmVyZmxvdyBPdmVySGF0IE92ZXJsYXBzIE92ZXJsYXkgT3ZlcmxheUJveCBPdmVybGF5Qm94T3B0aW9ucyBPdmVyc2NyaXB0IE92ZXJzY3JpcHRCb3ggT3ZlcnNjcmlwdEJveE9wdGlvbnMgT3ZlclRpbGRlIE92ZXJWZWN0b3IgT3dlblQgT3duVmFsdWVzIFBhY2tpbmdNZXRob2QgUGFkZGVkRm9ybSBQYWRkaW5nIFBhZGVBcHByb3hpbWFudCBQYWRMZWZ0IFBhZFJpZ2h0IFBhZ2VCcmVha0Fib3ZlIFBhZ2VCcmVha0JlbG93IFBhZ2VCcmVha1dpdGhpbiBQYWdlRm9vdGVyTGluZXMgUGFnZUZvb3RlcnMgUGFnZUhlYWRlckxpbmVzIFBhZ2VIZWFkZXJzIFBhZ2VIZWlnaHQgUGFnZVJhbmtDZW50cmFsaXR5IFBhZ2VXaWR0aCBQYWlyZWRCYXJDaGFydCBQYWlyZWRIaXN0b2dyYW0gUGFpcmVkU21vb3RoSGlzdG9ncmFtIFBhaXJlZFRUZXN0IFBhaXJlZFpUZXN0IFBhbGV0dGVOb3RlYm9vayBQYWxldHRlUGF0aCBQYW5lIFBhbmVCb3ggUGFuZUJveE9wdGlvbnMgUGFuZWwgUGFuZWxCb3ggUGFuZWxCb3hPcHRpb25zIFBhbmVsZWQgUGFuZVNlbGVjdG9yIFBhbmVTZWxlY3RvckJveCBQYW5lU2VsZWN0b3JCb3hPcHRpb25zIFBhcGVyV2lkdGggUGFyYWJvbGljQ3lsaW5kZXJEIFBhcmFncmFwaEluZGVudCBQYXJhZ3JhcGhTcGFjaW5nIFBhcmFsbGVsQXJyYXkgUGFyYWxsZWxDb21iaW5lIFBhcmFsbGVsRG8gUGFyYWxsZWxFdmFsdWF0ZSBQYXJhbGxlbGl6YXRpb24gUGFyYWxsZWxpemUgUGFyYWxsZWxNYXAgUGFyYWxsZWxOZWVkcyBQYXJhbGxlbFByb2R1Y3QgUGFyYWxsZWxTdWJtaXQgUGFyYWxsZWxTdW0gUGFyYWxsZWxUYWJsZSBQYXJhbGxlbFRyeSBQYXJhbWV0ZXIgUGFyYW1ldGVyRXN0aW1hdG9yIFBhcmFtZXRlck1peHR1cmVEaXN0cmlidXRpb24gUGFyYW1ldGVyVmFyaWFibGVzIFBhcmFtZXRyaWNGdW5jdGlvbiBQYXJhbWV0cmljTkRTb2x2ZSBQYXJhbWV0cmljTkRTb2x2ZVZhbHVlIFBhcmFtZXRyaWNQbG90IFBhcmFtZXRyaWNQbG90M0QgUGFyZW50Q29ubmVjdCBQYXJlbnREaXJlY3RvcnkgUGFyZW50Rm9ybSBQYXJlbnRoZXNpemUgUGFyZW50TGlzdCBQYXJldG9EaXN0cmlidXRpb24gUGFydCBQYXJ0aWFsQ29ycmVsYXRpb25GdW5jdGlvbiBQYXJ0aWFsRCBQYXJ0aWNsZURhdGEgUGFydGl0aW9uIFBhcnRpdGlvbnNQIFBhcnRpdGlvbnNRIFBhcnplbldpbmRvdyBQYXNjYWxEaXN0cmlidXRpb24gUGFzc0V2ZW50c0Rvd24gUGFzc0V2ZW50c1VwIFBhc3RlIFBhc3RlQm94Rm9ybUlubGluZUNlbGxzIFBhc3RlQnV0dG9uIFBhdGggUGF0aEdyYXBoIFBhdGhHcmFwaFEgUGF0dGVybiBQYXR0ZXJuU2VxdWVuY2UgUGF0dGVyblRlc3QgUGF1bGlNYXRyaXggUGF1bFdhdmVsZXQgUGF1c2UgUGF1c2VkVGltZSBQREYgUGVhcnNvbkNoaVNxdWFyZVRlc3QgUGVhcnNvbkNvcnJlbGF0aW9uVGVzdCBQZWFyc29uRGlzdHJpYnV0aW9uIFBlcmZvcm1hbmNlR29hbCBQZXJpb2RpY0ludGVycG9sYXRpb24gUGVyaW9kb2dyYW0gUGVyaW9kb2dyYW1BcnJheSBQZXJtdXRhdGlvbkN5Y2xlcyBQZXJtdXRhdGlvbkN5Y2xlc1EgUGVybXV0YXRpb25Hcm91cCBQZXJtdXRhdGlvbkxlbmd0aCBQZXJtdXRhdGlvbkxpc3QgUGVybXV0YXRpb25MaXN0USBQZXJtdXRhdGlvbk1heCBQZXJtdXRhdGlvbk1pbiBQZXJtdXRhdGlvbk9yZGVyIFBlcm11dGF0aW9uUG93ZXIgUGVybXV0YXRpb25Qcm9kdWN0IFBlcm11dGF0aW9uUmVwbGFjZSBQZXJtdXRhdGlvbnMgUGVybXV0YXRpb25TdXBwb3J0IFBlcm11dGUgUGVyb25hTWFsaWtGaWx0ZXIgUGVycGVuZGljdWxhciBQRVJURGlzdHJpYnV0aW9uIFBldGVyc2VuR3JhcGggUGhhc2VNYXJnaW5zIFBpIFBpY2sgUElERGF0YSBQSUREZXJpdmF0aXZlRmlsdGVyIFBJREZlZWRmb3J3YXJkIFBJRFR1bmUgUGllY2V3aXNlIFBpZWNld2lzZUV4cGFuZCBQaWVDaGFydCBQaWVDaGFydDNEIFBpbGxhaVRyYWNlIFBpbGxhaVRyYWNlVGVzdCBQaW5rIFBpdm90aW5nIFBpeGVsQ29uc3RyYWluZWQgUGl4ZWxWYWx1ZSBQaXhlbFZhbHVlUG9zaXRpb25zIFBsYWNlZCBQbGFjZWhvbGRlciBQbGFjZWhvbGRlclJlcGxhY2UgUGxhaW4gUGxhbmFyR3JhcGhRIFBsYXkgUGxheVJhbmdlIFBsb3QgUGxvdDNEIFBsb3QzTWF0cml4IFBsb3REaXZpc2lvbiBQbG90Sm9pbmVkIFBsb3RMYWJlbCBQbG90TGF5b3V0IFBsb3RMZWdlbmRzIFBsb3RNYXJrZXJzIFBsb3RQb2ludHMgUGxvdFJhbmdlIFBsb3RSYW5nZUNsaXBwaW5nIFBsb3RSYW5nZVBhZGRpbmcgUGxvdFJlZ2lvbiBQbG90U3R5bGUgUGx1cyBQbHVzTWludXMgUG9jaGhhbW1lciBQb2RTdGF0ZXMgUG9kV2lkdGggUG9pbnQgUG9pbnQzREJveCBQb2ludEJveCBQb2ludEZpZ3VyZUNoYXJ0IFBvaW50Rm9ybSBQb2ludExlZ2VuZCBQb2ludFNpemUgUG9pc3NvbkNvbnN1bERpc3RyaWJ1dGlvbiBQb2lzc29uRGlzdHJpYnV0aW9uIFBvaXNzb25Qcm9jZXNzIFBvaXNzb25XaW5kb3cgUG9sYXJBeGVzIFBvbGFyQXhlc09yaWdpbiBQb2xhckdyaWRMaW5lcyBQb2xhclBsb3QgUG9sYXJUaWNrcyBQb2xlWmVyb01hcmtlcnMgUG9seWFBZXBwbGlEaXN0cmlidXRpb24gUG9seUdhbW1hIFBvbHlnb24gUG9seWdvbjNEQm94IFBvbHlnb24zREJveE9wdGlvbnMgUG9seWdvbkJveCBQb2x5Z29uQm94T3B0aW9ucyBQb2x5Z29uSG9sZVNjYWxlIFBvbHlnb25JbnRlcnNlY3Rpb25zIFBvbHlnb25TY2FsZSBQb2x5aGVkcm9uRGF0YSBQb2x5TG9nIFBvbHlub21pYWxFeHRlbmRlZEdDRCBQb2x5bm9taWFsRm9ybSBQb2x5bm9taWFsR0NEIFBvbHlub21pYWxMQ00gUG9seW5vbWlhbE1vZCBQb2x5bm9taWFsUSBQb2x5bm9taWFsUXVvdGllbnQgUG9seW5vbWlhbFF1b3RpZW50UmVtYWluZGVyIFBvbHlub21pYWxSZWR1Y2UgUG9seW5vbWlhbFJlbWFpbmRlciBQb2x5bm9taWFscyBQb3B1cE1lbnUgUG9wdXBNZW51Qm94IFBvcHVwTWVudUJveE9wdGlvbnMgUG9wdXBWaWV3IFBvcHVwV2luZG93IFBvc2l0aW9uIFBvc2l0aXZlIFBvc2l0aXZlRGVmaW5pdGVNYXRyaXhRIFBvc3NpYmxlWmVyb1EgUG9zdGZpeCBQb3N0U2NyaXB0IFBvd2VyIFBvd2VyRGlzdHJpYnV0aW9uIFBvd2VyRXhwYW5kIFBvd2VyTW9kIFBvd2VyTW9kTGlzdCBQb3dlclNwZWN0cmFsRGVuc2l0eSBQb3dlcnNSZXByZXNlbnRhdGlvbnMgUG93ZXJTeW1tZXRyaWNQb2x5bm9taWFsIFByZWNlZGVuY2UgUHJlY2VkZW5jZUZvcm0gUHJlY2VkZXMgUHJlY2VkZXNFcXVhbCBQcmVjZWRlc1NsYW50RXF1YWwgUHJlY2VkZXNUaWxkZSBQcmVjaXNpb24gUHJlY2lzaW9uR29hbCBQcmVEZWNyZW1lbnQgUHJlZGljdGlvblJvb3QgUHJlZW1wdFByb3RlY3QgUHJlZmVyZW5jZXNQYXRoIFByZWZpeCBQcmVJbmNyZW1lbnQgUHJlcGVuZCBQcmVwZW5kVG8gUHJlc2VydmVJbWFnZU9wdGlvbnMgUHJldmlvdXMgUHJpY2VHcmFwaERpc3RyaWJ1dGlvbiBQcmltYXJ5UGxhY2Vob2xkZXIgUHJpbWUgUHJpbWVOdSBQcmltZU9tZWdhIFByaW1lUGkgUHJpbWVQb3dlclEgUHJpbWVRIFByaW1lcyBQcmltZVpldGFQIFByaW1pdGl2ZVJvb3QgUHJpbmNpcGFsQ29tcG9uZW50cyBQcmluY2lwYWxWYWx1ZSBQcmludCBQcmludEFjdGlvbiBQcmludEZvcm0gUHJpbnRpbmdDb3BpZXMgUHJpbnRpbmdPcHRpb25zIFByaW50aW5nUGFnZVJhbmdlIFByaW50aW5nU3RhcnRpbmdQYWdlTnVtYmVyIFByaW50aW5nU3R5bGVFbnZpcm9ubWVudCBQcmludFByZWNpc2lvbiBQcmludFRlbXBvcmFyeSBQcmlzbSBQcmlzbUJveCBQcmlzbUJveE9wdGlvbnMgUHJpdmF0ZUNlbGxPcHRpb25zIFByaXZhdGVFdmFsdWF0aW9uT3B0aW9ucyBQcml2YXRlRm9udE9wdGlvbnMgUHJpdmF0ZUZyb250RW5kT3B0aW9ucyBQcml2YXRlTm90ZWJvb2tPcHRpb25zIFByaXZhdGVQYXRocyBQcm9iYWJpbGl0eSBQcm9iYWJpbGl0eURpc3RyaWJ1dGlvbiBQcm9iYWJpbGl0eVBsb3QgUHJvYmFiaWxpdHlQciBQcm9iYWJpbGl0eVNjYWxlUGxvdCBQcm9iaXRNb2RlbEZpdCBQcm9jZXNzRXN0aW1hdG9yIFByb2Nlc3NQYXJhbWV0ZXJBc3N1bXB0aW9ucyBQcm9jZXNzUGFyYW1ldGVyUSBQcm9jZXNzU3RhdGVEb21haW4gUHJvY2Vzc1RpbWVEb21haW4gUHJvZHVjdCBQcm9kdWN0RGlzdHJpYnV0aW9uIFByb2R1Y3RMb2cgUHJvZ3Jlc3NJbmRpY2F0b3IgUHJvZ3Jlc3NJbmRpY2F0b3JCb3ggUHJvZ3Jlc3NJbmRpY2F0b3JCb3hPcHRpb25zIFByb2plY3Rpb24gUHJvbG9nIFByb21wdEZvcm0gUHJvcGVydGllcyBQcm9wZXJ0eSBQcm9wZXJ0eUxpc3QgUHJvcGVydHlWYWx1ZSBQcm9wb3J0aW9uIFByb3BvcnRpb25hbCBQcm90ZWN0IFByb3RlY3RlZCBQcm90ZWluRGF0YSBQcnVuaW5nIFBzZXVkb0ludmVyc2UgUHVycGxlIFB1dCBQdXRBcHBlbmQgUHlyYW1pZCBQeXJhbWlkQm94IFB5cmFtaWRCb3hPcHRpb25zIFFCaW5vbWlhbCBRRmFjdG9yaWFsIFFHYW1tYSBRSHlwZXJnZW9tZXRyaWNQRlEgUVBvY2hoYW1tZXIgUVBvbHlHYW1tYSBRUkRlY29tcG9zaXRpb24gUXVhZHJhdGljSXJyYXRpb25hbFEgUXVhbnRpbGUgUXVhbnRpbGVQbG90IFF1YW50aXR5IFF1YW50aXR5Rm9ybSBRdWFudGl0eU1hZ25pdHVkZSBRdWFudGl0eVEgUXVhbnRpdHlVbml0IFF1YXJ0aWNzIFF1YXJ0aWxlRGV2aWF0aW9uIFF1YXJ0aWxlcyBRdWFydGlsZVNrZXduZXNzIFF1ZXVlaW5nTmV0d29ya1Byb2Nlc3MgUXVldWVpbmdQcm9jZXNzIFF1ZXVlUHJvcGVydGllcyBRdWlldCBRdWl0IFF1b3RpZW50IFF1b3RpZW50UmVtYWluZGVyIFJhZGlhbGl0eUNlbnRyYWxpdHkgUmFkaWNhbEJveCBSYWRpY2FsQm94T3B0aW9ucyBSYWRpb0J1dHRvbiBSYWRpb0J1dHRvbkJhciBSYWRpb0J1dHRvbkJveCBSYWRpb0J1dHRvbkJveE9wdGlvbnMgUmFkb24gUmFtYW51amFuVGF1IFJhbWFudWphblRhdUwgUmFtYW51amFuVGF1VGhldGEgUmFtYW51amFuVGF1WiBSYW5kb20gUmFuZG9tQ2hvaWNlIFJhbmRvbUNvbXBsZXggUmFuZG9tRnVuY3Rpb24gUmFuZG9tR3JhcGggUmFuZG9tSW1hZ2UgUmFuZG9tSW50ZWdlciBSYW5kb21QZXJtdXRhdGlvbiBSYW5kb21QcmltZSBSYW5kb21SZWFsIFJhbmRvbVNhbXBsZSBSYW5kb21TZWVkIFJhbmRvbVZhcmlhdGUgUmFuZG9tV2Fsa1Byb2Nlc3MgUmFuZ2UgUmFuZ2VGaWx0ZXIgUmFuZ2VTcGVjaWZpY2F0aW9uIFJhbmtlZE1heCBSYW5rZWRNaW4gUmFzdGVyIFJhc3RlcjNEIFJhc3RlcjNEQm94IFJhc3RlcjNEQm94T3B0aW9ucyBSYXN0ZXJBcnJheSBSYXN0ZXJCb3ggUmFzdGVyQm94T3B0aW9ucyBSYXN0ZXJpemUgUmFzdGVyU2l6ZSBSYXRpb25hbCBSYXRpb25hbEZ1bmN0aW9ucyBSYXRpb25hbGl6ZSBSYXRpb25hbHMgUmF0aW9zIFJhdyBSYXdBcnJheSBSYXdCb3hlcyBSYXdEYXRhIFJhd01lZGl1bSBSYXlsZWlnaERpc3RyaWJ1dGlvbiBSZSBSZWFkIFJlYWRMaXN0IFJlYWRQcm90ZWN0ZWQgUmVhbCBSZWFsQmxvY2tEaWFnb25hbEZvcm0gUmVhbERpZ2l0cyBSZWFsRXhwb25lbnQgUmVhbHMgUmVhcCBSZWNvcmQgUmVjb3JkTGlzdHMgUmVjb3JkU2VwYXJhdG9ycyBSZWN0YW5nbGUgUmVjdGFuZ2xlQm94IFJlY3RhbmdsZUJveE9wdGlvbnMgUmVjdGFuZ2xlQ2hhcnQgUmVjdGFuZ2xlQ2hhcnQzRCBSZWN1cnJlbmNlRmlsdGVyIFJlY3VycmVuY2VUYWJsZSBSZWN1cnJpbmdEaWdpdHNGb3JtIFJlZCBSZWR1Y2UgUmVmQm94IFJlZmVyZW5jZUxpbmVTdHlsZSBSZWZlcmVuY2VNYXJrZXJzIFJlZmVyZW5jZU1hcmtlclN0eWxlIFJlZmluZSBSZWZsZWN0aW9uTWF0cml4IFJlZmxlY3Rpb25UcmFuc2Zvcm0gUmVmcmVzaCBSZWZyZXNoUmF0ZSBSZWdpb25CaW5hcml6ZSBSZWdpb25GdW5jdGlvbiBSZWdpb25QbG90IFJlZ2lvblBsb3QzRCBSZWd1bGFyRXhwcmVzc2lvbiBSZWd1bGFyaXphdGlvbiBSZWluc3RhbGwgUmVsZWFzZSBSZWxlYXNlSG9sZCBSZWxpYWJpbGl0eURpc3RyaWJ1dGlvbiBSZWxpZWZJbWFnZSBSZWxpZWZQbG90IFJlbW92ZSBSZW1vdmVBbHBoYUNoYW5uZWwgUmVtb3ZlQXN5bmNocm9ub3VzVGFzayBSZW1vdmVkIFJlbW92ZUlucHV0U3RyZWFtTWV0aG9kIFJlbW92ZU91dHB1dFN0cmVhbU1ldGhvZCBSZW1vdmVQcm9wZXJ0eSBSZW1vdmVTY2hlZHVsZWRUYXNrIFJlbmFtZURpcmVjdG9yeSBSZW5hbWVGaWxlIFJlbmRlckFsbCBSZW5kZXJpbmdPcHRpb25zIFJlbmV3YWxQcm9jZXNzIFJlbmtvQ2hhcnQgUmVwZWF0ZWQgUmVwZWF0ZWROdWxsIFJlcGVhdGVkU3RyaW5nIFJlcGxhY2UgUmVwbGFjZUFsbCBSZXBsYWNlSGVsZFBhcnQgUmVwbGFjZUltYWdlVmFsdWUgUmVwbGFjZUxpc3QgUmVwbGFjZVBhcnQgUmVwbGFjZVBpeGVsVmFsdWUgUmVwbGFjZVJlcGVhdGVkIFJlc2FtcGxpbmcgUmVzY2FsZSBSZXNjYWxpbmdUcmFuc2Zvcm0gUmVzZXREaXJlY3RvcnkgUmVzZXRNZW51c1BhY2tldCBSZXNldFNjaGVkdWxlZFRhc2sgUmVzaWR1ZSBSZXNvbHZlIFJlc3QgUmVzdWx0YW50IFJlc3VtZVBhY2tldCBSZXR1cm4gUmV0dXJuRXhwcmVzc2lvblBhY2tldCBSZXR1cm5JbnB1dEZvcm1QYWNrZXQgUmV0dXJuUGFja2V0IFJldHVyblRleHRQYWNrZXQgUmV2ZXJzZSBSZXZlcnNlQmlvcnRob2dvbmFsU3BsaW5lV2F2ZWxldCBSZXZlcnNlRWxlbWVudCBSZXZlcnNlRXF1aWxpYnJpdW0gUmV2ZXJzZUdyYXBoIFJldmVyc2VVcEVxdWlsaWJyaXVtIFJldm9sdXRpb25BeGlzIFJldm9sdXRpb25QbG90M0QgUkdCQ29sb3IgUmljY2F0aVNvbHZlIFJpY2VEaXN0cmlidXRpb24gUmlkZ2VGaWx0ZXIgUmllbWFublIgUmllbWFublNpZWdlbFRoZXRhIFJpZW1hbm5TaWVnZWxaIFJpZmZsZSBSaWdodCBSaWdodEFycm93IFJpZ2h0QXJyb3dCYXIgUmlnaHRBcnJvd0xlZnRBcnJvdyBSaWdodENvc2V0UmVwcmVzZW50YXRpdmUgUmlnaHREb3duVGVlVmVjdG9yIFJpZ2h0RG93blZlY3RvciBSaWdodERvd25WZWN0b3JCYXIgUmlnaHRUZWUgUmlnaHRUZWVBcnJvdyBSaWdodFRlZVZlY3RvciBSaWdodFRyaWFuZ2xlIFJpZ2h0VHJpYW5nbGVCYXIgUmlnaHRUcmlhbmdsZUVxdWFsIFJpZ2h0VXBEb3duVmVjdG9yIFJpZ2h0VXBUZWVWZWN0b3IgUmlnaHRVcFZlY3RvciBSaWdodFVwVmVjdG9yQmFyIFJpZ2h0VmVjdG9yIFJpZ2h0VmVjdG9yQmFyIFJpc2tBY2hpZXZlbWVudEltcG9ydGFuY2UgUmlza1JlZHVjdGlvbkltcG9ydGFuY2UgUm9nZXJzVGFuaW1vdG9EaXNzaW1pbGFyaXR5IFJvb3QgUm9vdEFwcHJveGltYW50IFJvb3RJbnRlcnZhbHMgUm9vdExvY3VzUGxvdCBSb290TWVhblNxdWFyZSBSb290T2ZVbml0eVEgUm9vdFJlZHVjZSBSb290cyBSb290U3VtIFJvdGF0ZSBSb3RhdGVMYWJlbCBSb3RhdGVMZWZ0IFJvdGF0ZVJpZ2h0IFJvdGF0aW9uQWN0aW9uIFJvdGF0aW9uQm94IFJvdGF0aW9uQm94T3B0aW9ucyBSb3RhdGlvbk1hdHJpeCBSb3RhdGlvblRyYW5zZm9ybSBSb3VuZCBSb3VuZEltcGxpZXMgUm91bmRpbmdSYWRpdXMgUm93IFJvd0FsaWdubWVudHMgUm93QmFja2dyb3VuZHMgUm93Qm94IFJvd0hlaWdodHMgUm93TGluZXMgUm93TWluSGVpZ2h0IFJvd1JlZHVjZSBSb3dzRXF1YWwgUm93U3BhY2luZ3MgUlNvbHZlIFJ1ZHZhbGlzR3JvdXBSdSBSdWxlIFJ1bGVDb25kaXRpb24gUnVsZURlbGF5ZWQgUnVsZUZvcm0gUnVsZXJVbml0cyBSdW4gUnVuU2NoZWR1bGVkVGFzayBSdW5UaHJvdWdoIFJ1bnRpbWVBdHRyaWJ1dGVzIFJ1bnRpbWVPcHRpb25zIFJ1c3NlbGxSYW9EaXNzaW1pbGFyaXR5IFNhbWVRIFNhbWVUZXN0IFNhbXBsZURlcHRoIFNhbXBsZWRTb3VuZEZ1bmN0aW9uIFNhbXBsZWRTb3VuZExpc3QgU2FtcGxlUmF0ZSBTYW1wbGluZ1BlcmlvZCBTQVJJTUFQcm9jZXNzIFNBUk1BUHJvY2VzcyBTYXRpc2ZpYWJpbGl0eUNvdW50IFNhdGlzZmlhYmlsaXR5SW5zdGFuY2VzIFNhdGlzZmlhYmxlUSBTYXR1cmRheSBTYXZlIFNhdmVhYmxlIFNhdmVBdXRvRGVsZXRlIFNhdmVEZWZpbml0aW9ucyBTYXd0b290aFdhdmUgU2NhbGUgU2NhbGVkIFNjYWxlRGl2aXNpb25zIFNjYWxlZE1vdXNlUG9zaXRpb24gU2NhbGVPcmlnaW4gU2NhbGVQYWRkaW5nIFNjYWxlUmFuZ2VzIFNjYWxlUmFuZ2VTdHlsZSBTY2FsaW5nRnVuY3Rpb25zIFNjYWxpbmdNYXRyaXggU2NhbGluZ1RyYW5zZm9ybSBTY2FuIFNjaGVkdWxlZFRhc2tBY3RpdmVRIFNjaGVkdWxlZFRhc2tEYXRhIFNjaGVkdWxlZFRhc2tPYmplY3QgU2NoZWR1bGVkVGFza3MgU2NodXJEZWNvbXBvc2l0aW9uIFNjaWVudGlmaWNGb3JtIFNjcmVlblJlY3RhbmdsZSBTY3JlZW5TdHlsZUVudmlyb25tZW50IFNjcmlwdEJhc2VsaW5lU2hpZnRzIFNjcmlwdExldmVsIFNjcmlwdE1pblNpemUgU2NyaXB0UnVsZXMgU2NyaXB0U2l6ZU11bHRpcGxpZXJzIFNjcm9sbGJhcnMgU2Nyb2xsaW5nT3B0aW9ucyBTY3JvbGxQb3NpdGlvbiBTZWMgU2VjaCBTZWNoRGlzdHJpYnV0aW9uIFNlY3Rpb25Hcm91cGluZyBTZWN0b3JDaGFydCBTZWN0b3JDaGFydDNEIFNlY3Rvck9yaWdpbiBTZWN0b3JTcGFjaW5nIFNlZWRSYW5kb20gU2VsZWN0IFNlbGVjdGFibGUgU2VsZWN0Q29tcG9uZW50cyBTZWxlY3RlZENlbGxzIFNlbGVjdGVkTm90ZWJvb2sgU2VsZWN0aW9uIFNlbGVjdGlvbkFuaW1hdGUgU2VsZWN0aW9uQ2VsbCBTZWxlY3Rpb25DZWxsQ3JlYXRlQ2VsbCBTZWxlY3Rpb25DZWxsRGVmYXVsdFN0eWxlIFNlbGVjdGlvbkNlbGxQYXJlbnRTdHlsZSBTZWxlY3Rpb25DcmVhdGVDZWxsIFNlbGVjdGlvbkRlYnVnZ2VyVGFnIFNlbGVjdGlvbkR1cGxpY2F0ZUNlbGwgU2VsZWN0aW9uRXZhbHVhdGUgU2VsZWN0aW9uRXZhbHVhdGVDcmVhdGVDZWxsIFNlbGVjdGlvbk1vdmUgU2VsZWN0aW9uUGxhY2Vob2xkZXIgU2VsZWN0aW9uU2V0U3R5bGUgU2VsZWN0V2l0aENvbnRlbnRzIFNlbGZMb29wcyBTZWxmTG9vcFN0eWxlIFNlbWlhbGdlYnJhaWNDb21wb25lbnRJbnN0YW5jZXMgU2VuZE1haWwgU2VxdWVuY2UgU2VxdWVuY2VBbGlnbm1lbnQgU2VxdWVuY2VGb3JtIFNlcXVlbmNlSG9sZCBTZXF1ZW5jZUxpbWl0IFNlcmllcyBTZXJpZXNDb2VmZmljaWVudCBTZXJpZXNEYXRhIFNlc3Npb25UaW1lIFNldCBTZXRBY2N1cmFjeSBTZXRBbHBoYUNoYW5uZWwgU2V0QXR0cmlidXRlcyBTZXRiYWNrcyBTZXRCb3hGb3JtTmFtZXNQYWNrZXQgU2V0RGVsYXllZCBTZXREaXJlY3RvcnkgU2V0RW52aXJvbm1lbnQgU2V0RXZhbHVhdGlvbk5vdGVib29rIFNldEZpbGVEYXRlIFNldEZpbGVMb2FkaW5nQ29udGV4dCBTZXROb3RlYm9va1N0YXR1c0xpbmUgU2V0T3B0aW9ucyBTZXRPcHRpb25zUGFja2V0IFNldFByZWNpc2lvbiBTZXRQcm9wZXJ0eSBTZXRTZWxlY3RlZE5vdGVib29rIFNldFNoYXJlZEZ1bmN0aW9uIFNldFNoYXJlZFZhcmlhYmxlIFNldFNwZWVjaFBhcmFtZXRlcnNQYWNrZXQgU2V0U3RyZWFtUG9zaXRpb24gU2V0U3lzdGVtT3B0aW9ucyBTZXR0ZXIgU2V0dGVyQmFyIFNldHRlckJveCBTZXR0ZXJCb3hPcHRpb25zIFNldHRpbmcgU2V0VmFsdWUgU2hhZGluZyBTaGFsbG93IFNoYW5ub25XYXZlbGV0IFNoYXBpcm9XaWxrVGVzdCBTaGFyZSBTaGFycGVuIFNoZWFyaW5nTWF0cml4IFNoZWFyaW5nVHJhbnNmb3JtIFNoZW5DYXN0YW5NYXRyaXggU2hvcnQgU2hvcnREb3duQXJyb3cgU2hvcnRlc3QgU2hvcnRlc3RNYXRjaCBTaG9ydGVzdFBhdGhGdW5jdGlvbiBTaG9ydExlZnRBcnJvdyBTaG9ydFJpZ2h0QXJyb3cgU2hvcnRVcEFycm93IFNob3cgU2hvd0F1dG9TdHlsZXMgU2hvd0NlbGxCcmFja2V0IFNob3dDZWxsTGFiZWwgU2hvd0NlbGxUYWdzIFNob3dDbG9zZWRDZWxsQXJlYSBTaG93Q29udGVudHMgU2hvd0NvbnRyb2xzIFNob3dDdXJzb3JUcmFja2VyIFNob3dHcm91cE9wZW5DbG9zZUljb24gU2hvd0dyb3VwT3BlbmVyIFNob3dJbnZpc2libGVDaGFyYWN0ZXJzIFNob3dQYWdlQnJlYWtzIFNob3dQcmVkaWN0aXZlSW50ZXJmYWNlIFNob3dTZWxlY3Rpb24gU2hvd1Nob3J0Qm94Rm9ybSBTaG93U3BlY2lhbENoYXJhY3RlcnMgU2hvd1N0cmluZ0NoYXJhY3RlcnMgU2hvd1N5bnRheFN0eWxlcyBTaHJpbmtpbmdEZWxheSBTaHJpbmtXcmFwQm91bmRpbmdCb3ggU2llZ2VsVGhldGEgU2llZ2VsVHVrZXlUZXN0IFNpZ24gU2lnbmF0dXJlIFNpZ25lZFJhbmtUZXN0IFNpZ25pZmljYW5jZUxldmVsIFNpZ25QYWRkaW5nIFNpZ25UZXN0IFNpbWlsYXJpdHlSdWxlcyBTaW1wbGVHcmFwaCBTaW1wbGVHcmFwaFEgU2ltcGxpZnkgU2luIFNpbmMgU2luZ2hNYWRkYWxhRGlzdHJpYnV0aW9uIFNpbmdsZUV2YWx1YXRpb24gU2luZ2xlTGV0dGVySXRhbGljcyBTaW5nbGVMZXR0ZXJTdHlsZSBTaW5ndWxhclZhbHVlRGVjb21wb3NpdGlvbiBTaW5ndWxhclZhbHVlTGlzdCBTaW5ndWxhclZhbHVlUGxvdCBTaW5ndWxhclZhbHVlcyBTaW5oIFNpbmhJbnRlZ3JhbCBTaW5JbnRlZ3JhbCBTaXhKU3ltYm9sIFNrZWxldG9uIFNrZWxldG9uVHJhbnNmb3JtIFNrZWxsYW1EaXN0cmlidXRpb24gU2tld25lc3MgU2tld05vcm1hbERpc3RyaWJ1dGlvbiBTa2lwIFNsaWNlRGlzdHJpYnV0aW9uIFNsaWRlciBTbGlkZXIyRCBTbGlkZXIyREJveCBTbGlkZXIyREJveE9wdGlvbnMgU2xpZGVyQm94IFNsaWRlckJveE9wdGlvbnMgU2xpZGVWaWV3IFNsb3QgU2xvdFNlcXVlbmNlIFNtYWxsIFNtYWxsQ2lyY2xlIFNtYWxsZXIgU21pdGhEZWxheUNvbXBlbnNhdG9yIFNtaXRoV2F0ZXJtYW5TaW1pbGFyaXR5IFNtb290aERlbnNpdHlIaXN0b2dyYW0gU21vb3RoSGlzdG9ncmFtIFNtb290aEhpc3RvZ3JhbTNEIFNtb290aEtlcm5lbERpc3RyaWJ1dGlvbiBTb2NpYWxNZWRpYURhdGEgU29ja2V0IFNva2FsU25lYXRoRGlzc2ltaWxhcml0eSBTb2x2ZSBTb2x2ZUFsd2F5cyBTb2x2ZURlbGF5ZWQgU29ydCBTb3J0QnkgU291bmQgU291bmRBbmRHcmFwaGljcyBTb3VuZE5vdGUgU291bmRWb2x1bWUgU293IFNwYWNlIFNwYWNlRm9ybSBTcGFjZXIgU3BhY2luZ3MgU3BhbiBTcGFuQWRqdXN0bWVudHMgU3BhbkNoYXJhY3RlclJvdW5kaW5nIFNwYW5Gcm9tQWJvdmUgU3BhbkZyb21Cb3RoIFNwYW5Gcm9tTGVmdCBTcGFuTGluZVRoaWNrbmVzcyBTcGFuTWF4U2l6ZSBTcGFuTWluU2l6ZSBTcGFubmluZ0NoYXJhY3RlcnMgU3BhblN5bW1ldHJpYyBTcGFyc2VBcnJheSBTcGF0aWFsR3JhcGhEaXN0cmlidXRpb24gU3BlYWsgU3BlYWtUZXh0UGFja2V0IFNwZWFybWFuUmFua1Rlc3QgU3BlYXJtYW5SaG8gU3BlY3Ryb2dyYW0gU3BlY3Ryb2dyYW1BcnJheSBTcGVjdWxhcml0eSBTcGVsbGluZ0NvcnJlY3Rpb24gU3BlbGxpbmdEaWN0aW9uYXJpZXMgU3BlbGxpbmdEaWN0aW9uYXJpZXNQYXRoIFNwZWxsaW5nT3B0aW9ucyBTcGVsbGluZ1N1Z2dlc3Rpb25zUGFja2V0IFNwaGVyZSBTcGhlcmVCb3ggU3BoZXJpY2FsQmVzc2VsSiBTcGhlcmljYWxCZXNzZWxZIFNwaGVyaWNhbEhhbmtlbEgxIFNwaGVyaWNhbEhhbmtlbEgyIFNwaGVyaWNhbEhhcm1vbmljWSBTcGhlcmljYWxQbG90M0QgU3BoZXJpY2FsUmVnaW9uIFNwaGVyb2lkYWxFaWdlbnZhbHVlIFNwaGVyb2lkYWxKb2luaW5nRmFjdG9yIFNwaGVyb2lkYWxQUyBTcGhlcm9pZGFsUFNQcmltZSBTcGhlcm9pZGFsUVMgU3BoZXJvaWRhbFFTUHJpbWUgU3BoZXJvaWRhbFJhZGlhbEZhY3RvciBTcGhlcm9pZGFsUzEgU3BoZXJvaWRhbFMxUHJpbWUgU3BoZXJvaWRhbFMyIFNwaGVyb2lkYWxTMlByaW1lIFNwbGljZSBTcGxpY2VkRGlzdHJpYnV0aW9uIFNwbGluZUNsb3NlZCBTcGxpbmVEZWdyZWUgU3BsaW5lS25vdHMgU3BsaW5lV2VpZ2h0cyBTcGxpdCBTcGxpdEJ5IFNwb2tlblN0cmluZyBTcXJ0IFNxcnRCb3ggU3FydEJveE9wdGlvbnMgU3F1YXJlIFNxdWFyZWRFdWNsaWRlYW5EaXN0YW5jZSBTcXVhcmVGcmVlUSBTcXVhcmVJbnRlcnNlY3Rpb24gU3F1YXJlc1IgU3F1YXJlU3Vic2V0IFNxdWFyZVN1YnNldEVxdWFsIFNxdWFyZVN1cGVyc2V0IFNxdWFyZVN1cGVyc2V0RXF1YWwgU3F1YXJlVW5pb24gU3F1YXJlV2F2ZSBTdGFiaWxpdHlNYXJnaW5zIFN0YWJpbGl0eU1hcmdpbnNTdHlsZSBTdGFibGVEaXN0cmlidXRpb24gU3RhY2sgU3RhY2tCZWdpbiBTdGFja0NvbXBsZXRlIFN0YWNrSW5oaWJpdCBTdGFuZGFyZERldmlhdGlvbiBTdGFuZGFyZERldmlhdGlvbkZpbHRlciBTdGFuZGFyZEZvcm0gU3RhbmRhcmRpemUgU3RhbmRieURpc3RyaWJ1dGlvbiBTdGFyIFN0YXJHcmFwaCBTdGFydEFzeW5jaHJvbm91c1Rhc2sgU3RhcnRpbmdTdGVwU2l6ZSBTdGFydE9mTGluZSBTdGFydE9mU3RyaW5nIFN0YXJ0U2NoZWR1bGVkVGFzayBTdGFydHVwU291bmQgU3RhdGVEaW1lbnNpb25zIFN0YXRlRmVlZGJhY2tHYWlucyBTdGF0ZU91dHB1dEVzdGltYXRvciBTdGF0ZVJlc3BvbnNlIFN0YXRlU3BhY2VNb2RlbCBTdGF0ZVNwYWNlUmVhbGl6YXRpb24gU3RhdGVTcGFjZVRyYW5zZm9ybSBTdGF0aW9uYXJ5RGlzdHJpYnV0aW9uIFN0YXRpb25hcnlXYXZlbGV0UGFja2V0VHJhbnNmb3JtIFN0YXRpb25hcnlXYXZlbGV0VHJhbnNmb3JtIFN0YXR1c0FyZWEgU3RhdHVzQ2VudHJhbGl0eSBTdGVwTW9uaXRvciBTdGllbHRqZXNHYW1tYSBTdGlybGluZ1MxIFN0aXJsaW5nUzIgU3RvcEFzeW5jaHJvbm91c1Rhc2sgU3RvcFNjaGVkdWxlZFRhc2sgU3RyYXRhVmFyaWFibGVzIFN0cmF0b25vdmljaFByb2Nlc3MgU3RyZWFtQ29sb3JGdW5jdGlvbiBTdHJlYW1Db2xvckZ1bmN0aW9uU2NhbGluZyBTdHJlYW1EZW5zaXR5UGxvdCBTdHJlYW1QbG90IFN0cmVhbVBvaW50cyBTdHJlYW1Qb3NpdGlvbiBTdHJlYW1zIFN0cmVhbVNjYWxlIFN0cmVhbVN0eWxlIFN0cmluZyBTdHJpbmdCcmVhayBTdHJpbmdCeXRlQ291bnQgU3RyaW5nQ2FzZXMgU3RyaW5nQ291bnQgU3RyaW5nRHJvcCBTdHJpbmdFeHByZXNzaW9uIFN0cmluZ0Zvcm0gU3RyaW5nRm9ybWF0IFN0cmluZ0ZyZWVRIFN0cmluZ0luc2VydCBTdHJpbmdKb2luIFN0cmluZ0xlbmd0aCBTdHJpbmdNYXRjaFEgU3RyaW5nUG9zaXRpb24gU3RyaW5nUSBTdHJpbmdSZXBsYWNlIFN0cmluZ1JlcGxhY2VMaXN0IFN0cmluZ1JlcGxhY2VQYXJ0IFN0cmluZ1JldmVyc2UgU3RyaW5nUm90YXRlTGVmdCBTdHJpbmdSb3RhdGVSaWdodCBTdHJpbmdTa2VsZXRvbiBTdHJpbmdTcGxpdCBTdHJpbmdUYWtlIFN0cmluZ1RvU3RyZWFtIFN0cmluZ1RyaW0gU3RyaXBCb3hlcyBTdHJpcE9uSW5wdXQgU3RyaXBXcmFwcGVyQm94ZXMgU3Ryb2tlRm9ybSBTdHJ1Y3R1cmFsSW1wb3J0YW5jZSBTdHJ1Y3R1cmVkQXJyYXkgU3RydWN0dXJlZFNlbGVjdGlvbiBTdHJ1dmVIIFN0cnV2ZUwgU3R1YiBTdHVkZW50VERpc3RyaWJ1dGlvbiBTdHlsZSBTdHlsZUJveCBTdHlsZUJveEF1dG9EZWxldGUgU3R5bGVCb3hPcHRpb25zIFN0eWxlRGF0YSBTdHlsZURlZmluaXRpb25zIFN0eWxlRm9ybSBTdHlsZUtleU1hcHBpbmcgU3R5bGVNZW51TGlzdGluZyBTdHlsZU5hbWVEaWFsb2dTZXR0aW5ncyBTdHlsZU5hbWVzIFN0eWxlUHJpbnQgU3R5bGVTaGVldFBhdGggU3ViZmFjdG9yaWFsIFN1YmdyYXBoIFN1Yk1pbnVzIFN1YlBsdXMgU3VicmVzdWx0YW50UG9seW5vbWlhbFJlbWFpbmRlcnMgU3VicmVzdWx0YW50UG9seW5vbWlhbHMgU3VicmVzdWx0YW50cyBTdWJzY3JpcHQgU3Vic2NyaXB0Qm94IFN1YnNjcmlwdEJveE9wdGlvbnMgU3Vic2NyaXB0ZWQgU3Vic2V0IFN1YnNldEVxdWFsIFN1YnNldHMgU3ViU3RhciBTdWJzdXBlcnNjcmlwdCBTdWJzdXBlcnNjcmlwdEJveCBTdWJzdXBlcnNjcmlwdEJveE9wdGlvbnMgU3VidHJhY3QgU3VidHJhY3RGcm9tIFN1YlZhbHVlcyBTdWNjZWVkcyBTdWNjZWVkc0VxdWFsIFN1Y2NlZWRzU2xhbnRFcXVhbCBTdWNjZWVkc1RpbGRlIFN1Y2hUaGF0IFN1bSBTdW1Db252ZXJnZW5jZSBTdW5kYXkgU3VwZXJEYWdnZXIgU3VwZXJNaW51cyBTdXBlclBsdXMgU3VwZXJzY3JpcHQgU3VwZXJzY3JpcHRCb3ggU3VwZXJzY3JpcHRCb3hPcHRpb25zIFN1cGVyc2V0IFN1cGVyc2V0RXF1YWwgU3VwZXJTdGFyIFN1cmQgU3VyZEZvcm0gU3VyZmFjZUNvbG9yIFN1cmZhY2VHcmFwaGljcyBTdXJ2aXZhbERpc3RyaWJ1dGlvbiBTdXJ2aXZhbEZ1bmN0aW9uIFN1cnZpdmFsTW9kZWwgU3Vydml2YWxNb2RlbEZpdCBTdXNwZW5kUGFja2V0IFN1enVraURpc3RyaWJ1dGlvbiBTdXp1a2lHcm91cFN1eiBTd2F0Y2hMZWdlbmQgU3dpdGNoIFN5bWJvbCBTeW1ib2xOYW1lIFN5bWxldFdhdmVsZXQgU3ltbWV0cmljIFN5bW1ldHJpY0dyb3VwIFN5bW1ldHJpY01hdHJpeFEgU3ltbWV0cmljUG9seW5vbWlhbCBTeW1tZXRyaWNSZWR1Y3Rpb24gU3ltbWV0cml6ZSBTeW1tZXRyaXplZEFycmF5IFN5bW1ldHJpemVkQXJyYXlSdWxlcyBTeW1tZXRyaXplZERlcGVuZGVudENvbXBvbmVudHMgU3ltbWV0cml6ZWRJbmRlcGVuZGVudENvbXBvbmVudHMgU3ltbWV0cml6ZWRSZXBsYWNlUGFydCBTeW5jaHJvbm91c0luaXRpYWxpemF0aW9uIFN5bmNocm9ub3VzVXBkYXRpbmcgU3ludGF4IFN5bnRheEZvcm0gU3ludGF4SW5mb3JtYXRpb24gU3ludGF4TGVuZ3RoIFN5bnRheFBhY2tldCBTeW50YXhRIFN5c3RlbURpYWxvZ0lucHV0IFN5c3RlbUV4Y2VwdGlvbiBTeXN0ZW1IZWxwUGF0aCBTeXN0ZW1JbmZvcm1hdGlvbiBTeXN0ZW1JbmZvcm1hdGlvbkRhdGEgU3lzdGVtT3BlbiBTeXN0ZW1PcHRpb25zIFN5c3RlbXNNb2RlbERlbGF5IFN5c3RlbXNNb2RlbERlbGF5QXBwcm94aW1hdGUgU3lzdGVtc01vZGVsRGVsZXRlIFN5c3RlbXNNb2RlbERpbWVuc2lvbnMgU3lzdGVtc01vZGVsRXh0cmFjdCBTeXN0ZW1zTW9kZWxGZWVkYmFja0Nvbm5lY3QgU3lzdGVtc01vZGVsTGFiZWxzIFN5c3RlbXNNb2RlbE9yZGVyIFN5c3RlbXNNb2RlbFBhcmFsbGVsQ29ubmVjdCBTeXN0ZW1zTW9kZWxTZXJpZXNDb25uZWN0IFN5c3RlbXNNb2RlbFN0YXRlRmVlZGJhY2tDb25uZWN0IFN5c3RlbVN0dWIgVGFiIFRhYkZpbGxpbmcgVGFibGUgVGFibGVBbGlnbm1lbnRzIFRhYmxlRGVwdGggVGFibGVEaXJlY3Rpb25zIFRhYmxlRm9ybSBUYWJsZUhlYWRpbmdzIFRhYmxlU3BhY2luZyBUYWJsZVZpZXcgVGFibGVWaWV3Qm94IFRhYlNwYWNpbmdzIFRhYlZpZXcgVGFiVmlld0JveCBUYWJWaWV3Qm94T3B0aW9ucyBUYWdCb3ggVGFnQm94Tm90ZSBUYWdCb3hPcHRpb25zIFRhZ2dpbmdSdWxlcyBUYWdTZXQgVGFnU2V0RGVsYXllZCBUYWdTdHlsZSBUYWdVbnNldCBUYWtlIFRha2VXaGlsZSBUYWxseSBUYW4gVGFuaCBUYXJnZXRGdW5jdGlvbnMgVGFyZ2V0VW5pdHMgVGF1dG9sb2d5USBUZWxlZ3JhcGhQcm9jZXNzIFRlbXBsYXRlQm94IFRlbXBsYXRlQm94T3B0aW9ucyBUZW1wbGF0ZVNsb3RTZXF1ZW5jZSBUZW1wb3JhbERhdGEgVGVtcG9yYXJ5IFRlbXBvcmFyeVZhcmlhYmxlIFRlbnNvckNvbnRyYWN0IFRlbnNvckRpbWVuc2lvbnMgVGVuc29yRXhwYW5kIFRlbnNvclByb2R1Y3QgVGVuc29yUSBUZW5zb3JSYW5rIFRlbnNvclJlZHVjZSBUZW5zb3JTeW1tZXRyeSBUZW5zb3JUcmFuc3Bvc2UgVGVuc29yV2VkZ2UgVGV0cmFoZWRyb24gVGV0cmFoZWRyb25Cb3ggVGV0cmFoZWRyb25Cb3hPcHRpb25zIFRlWEZvcm0gVGVYU2F2ZSBUZXh0IFRleHQzREJveCBUZXh0M0RCb3hPcHRpb25zIFRleHRBbGlnbm1lbnQgVGV4dEJhbmQgVGV4dEJvdW5kaW5nQm94IFRleHRCb3ggVGV4dENlbGwgVGV4dENsaXBib2FyZFR5cGUgVGV4dERhdGEgVGV4dEZvcm0gVGV4dEp1c3RpZmljYXRpb24gVGV4dExpbmUgVGV4dFBhY2tldCBUZXh0UGFyYWdyYXBoIFRleHRSZWNvZ25pemUgVGV4dFJlbmRlcmluZyBUZXh0U3R5bGUgVGV4dHVyZSBUZXh0dXJlQ29vcmRpbmF0ZUZ1bmN0aW9uIFRleHR1cmVDb29yZGluYXRlU2NhbGluZyBUaGVyZWZvcmUgVGhlcm1vbWV0ZXJHYXVnZSBUaGljayBUaGlja25lc3MgVGhpbiBUaGlubmluZyBUaGlzTGluayBUaG9tcHNvbkdyb3VwVGggVGhyZWFkIFRocmVlSlN5bWJvbCBUaHJlc2hvbGQgVGhyb3VnaCBUaHJvdyBUaHVtYm5haWwgVGh1cnNkYXkgVGlja3MgVGlja3NTdHlsZSBUaWxkZSBUaWxkZUVxdWFsIFRpbGRlRnVsbEVxdWFsIFRpbGRlVGlsZGUgVGltZUNvbnN0cmFpbmVkIFRpbWVDb25zdHJhaW50IFRpbWVzIFRpbWVzQnkgVGltZVNlcmllc0ZvcmVjYXN0IFRpbWVTZXJpZXNJbnZlcnRpYmlsaXR5IFRpbWVVc2VkIFRpbWVWYWx1ZSBUaW1lWm9uZSBUaW1pbmcgVGlueSBUaXRsZUdyb3VwaW5nIFRpdHNHcm91cFQgVG9Cb3hlcyBUb0NoYXJhY3RlckNvZGUgVG9Db2xvciBUb0NvbnRpbnVvdXNUaW1lTW9kZWwgVG9EYXRlIFRvRGlzY3JldGVUaW1lTW9kZWwgVG9lcGxpdHpNYXRyaXggVG9FeHByZXNzaW9uIFRvRmlsZU5hbWUgVG9nZXRoZXIgVG9nZ2xlIFRvZ2dsZUZhbHNlIFRvZ2dsZXIgVG9nZ2xlckJhciBUb2dnbGVyQm94IFRvZ2dsZXJCb3hPcHRpb25zIFRvSGVsZEV4cHJlc3Npb24gVG9JbnZlcnRpYmxlVGltZVNlcmllcyBUb2tlbldvcmRzIFRvbGVyYW5jZSBUb0xvd2VyQ2FzZSBUb051bWJlckZpZWxkIFRvb0JpZyBUb29sdGlwIFRvb2x0aXBCb3ggVG9vbHRpcEJveE9wdGlvbnMgVG9vbHRpcERlbGF5IFRvb2x0aXBTdHlsZSBUb3AgVG9wSGF0VHJhbnNmb3JtIFRvcG9sb2dpY2FsU29ydCBUb1JhZGljYWxzIFRvUnVsZXMgVG9TdHJpbmcgVG90YWwgVG90YWxIZWlnaHQgVG90YWxWYXJpYXRpb25GaWx0ZXIgVG90YWxXaWR0aCBUb3VjaHNjcmVlbkF1dG9ab29tIFRvdWNoc2NyZWVuQ29udHJvbFBsYWNlbWVudCBUb1VwcGVyQ2FzZSBUciBUcmFjZSBUcmFjZUFib3ZlIFRyYWNlQWN0aW9uIFRyYWNlQmFja3dhcmQgVHJhY2VEZXB0aCBUcmFjZURpYWxvZyBUcmFjZUZvcndhcmQgVHJhY2VJbnRlcm5hbCBUcmFjZUxldmVsIFRyYWNlT2ZmIFRyYWNlT24gVHJhY2VPcmlnaW5hbCBUcmFjZVByaW50IFRyYWNlU2NhbiBUcmFja2VkU3ltYm9scyBUcmFkaW5nQ2hhcnQgVHJhZGl0aW9uYWxGb3JtIFRyYWRpdGlvbmFsRnVuY3Rpb25Ob3RhdGlvbiBUcmFkaXRpb25hbE5vdGF0aW9uIFRyYWRpdGlvbmFsT3JkZXIgVHJhbnNmZXJGdW5jdGlvbkNhbmNlbCBUcmFuc2ZlckZ1bmN0aW9uRXhwYW5kIFRyYW5zZmVyRnVuY3Rpb25GYWN0b3IgVHJhbnNmZXJGdW5jdGlvbk1vZGVsIFRyYW5zZmVyRnVuY3Rpb25Qb2xlcyBUcmFuc2ZlckZ1bmN0aW9uVHJhbnNmb3JtIFRyYW5zZmVyRnVuY3Rpb25aZXJvcyBUcmFuc2Zvcm1hdGlvbkZ1bmN0aW9uIFRyYW5zZm9ybWF0aW9uRnVuY3Rpb25zIFRyYW5zZm9ybWF0aW9uTWF0cml4IFRyYW5zZm9ybWVkRGlzdHJpYnV0aW9uIFRyYW5zZm9ybWVkRmllbGQgVHJhbnNsYXRlIFRyYW5zbGF0aW9uVHJhbnNmb3JtIFRyYW5zcGFyZW50Q29sb3IgVHJhbnNwb3NlIFRyZWVGb3JtIFRyZWVHcmFwaCBUcmVlR3JhcGhRIFRyZWVQbG90IFRyZW5kU3R5bGUgVHJpYW5nbGVXYXZlIFRyaWFuZ3VsYXJEaXN0cmlidXRpb24gVHJpZyBUcmlnRXhwYW5kIFRyaWdGYWN0b3IgVHJpZ0ZhY3Rvckxpc3QgVHJpZ2dlciBUcmlnUmVkdWNlIFRyaWdUb0V4cCBUcmltbWVkTWVhbiBUcnVlIFRydWVRIFRydW5jYXRlZERpc3RyaWJ1dGlvbiBUc2FsbGlzUUV4cG9uZW50aWFsRGlzdHJpYnV0aW9uIFRzYWxsaXNRR2F1c3NpYW5EaXN0cmlidXRpb24gVFRlc3QgVHViZSBUdWJlQmV6aWVyQ3VydmVCb3ggVHViZUJlemllckN1cnZlQm94T3B0aW9ucyBUdWJlQm94IFR1YmVCU3BsaW5lQ3VydmVCb3ggVHViZUJTcGxpbmVDdXJ2ZUJveE9wdGlvbnMgVHVlc2RheSBUdWtleUxhbWJkYURpc3RyaWJ1dGlvbiBUdWtleVdpbmRvdyBUdXBsZXMgVHVyYW5HcmFwaCBUdXJpbmdNYWNoaW5lIFRyYW5zcGFyZW50IFVuYXRlUSBVbmNvbXByZXNzIFVuZGVmaW5lZCBVbmRlckJhciBVbmRlcmZsb3cgVW5kZXJsaW5lZCBVbmRlcm92ZXJzY3JpcHQgVW5kZXJvdmVyc2NyaXB0Qm94IFVuZGVyb3ZlcnNjcmlwdEJveE9wdGlvbnMgVW5kZXJzY3JpcHQgVW5kZXJzY3JpcHRCb3ggVW5kZXJzY3JpcHRCb3hPcHRpb25zIFVuZGlyZWN0ZWRFZGdlIFVuZGlyZWN0ZWRHcmFwaCBVbmRpcmVjdGVkR3JhcGhRIFVuZG9jdW1lbnRlZFRlc3RGRVBhcnNlclBhY2tldCBVbmRvY3VtZW50ZWRUZXN0R2V0U2VsZWN0aW9uUGFja2V0IFVuZXF1YWwgVW5ldmFsdWF0ZWQgVW5pZm9ybURpc3RyaWJ1dGlvbiBVbmlmb3JtR3JhcGhEaXN0cmlidXRpb24gVW5pZm9ybVN1bURpc3RyaWJ1dGlvbiBVbmluc3RhbGwgVW5pb24gVW5pb25QbHVzIFVuaXF1ZSBVbml0Qm94IFVuaXRDb252ZXJ0IFVuaXREaW1lbnNpb25zIFVuaXRpemUgVW5pdFJvb3RUZXN0IFVuaXRTaW1wbGlmeSBVbml0U3RlcCBVbml0VHJpYW5nbGUgVW5pdFZlY3RvciBVbnByb3RlY3QgVW5zYW1lUSBVbnNhdmVkVmFyaWFibGVzIFVuc2V0IFVuc2V0U2hhcmVkIFVudHJhY2tlZFZhcmlhYmxlcyBVcCBVcEFycm93IFVwQXJyb3dCYXIgVXBBcnJvd0Rvd25BcnJvdyBVcGRhdGUgVXBkYXRlRHluYW1pY09iamVjdHMgVXBkYXRlRHluYW1pY09iamVjdHNTeW5jaHJvbm91cyBVcGRhdGVJbnRlcnZhbCBVcERvd25BcnJvdyBVcEVxdWlsaWJyaXVtIFVwcGVyQ2FzZVEgVXBwZXJMZWZ0QXJyb3cgVXBwZXJSaWdodEFycm93IFVwcGVyVHJpYW5ndWxhcml6ZSBVcHNhbXBsZSBVcFNldCBVcFNldERlbGF5ZWQgVXBUZWUgVXBUZWVBcnJvdyBVcFZhbHVlcyBVUkwgVVJMRmV0Y2ggVVJMRmV0Y2hBc3luY2hyb25vdXMgVVJMU2F2ZSBVUkxTYXZlQXN5bmNocm9ub3VzIFVzZUdyYXBoaWNzUmFuZ2UgVXNpbmcgVXNpbmdGcm9udEVuZCBWMkdldCBWYWxpZGF0aW9uTGVuZ3RoIFZhbHVlIFZhbHVlQm94IFZhbHVlQm94T3B0aW9ucyBWYWx1ZUZvcm0gVmFsdWVRIFZhbHVlc0RhdGEgVmFyaWFibGVzIFZhcmlhbmNlIFZhcmlhbmNlRXF1aXZhbGVuY2VUZXN0IFZhcmlhbmNlRXN0aW1hdG9yRnVuY3Rpb24gVmFyaWFuY2VHYW1tYURpc3RyaWJ1dGlvbiBWYXJpYW5jZVRlc3QgVmVjdG9yQW5nbGUgVmVjdG9yQ29sb3JGdW5jdGlvbiBWZWN0b3JDb2xvckZ1bmN0aW9uU2NhbGluZyBWZWN0b3JEZW5zaXR5UGxvdCBWZWN0b3JHbHlwaERhdGEgVmVjdG9yUGxvdCBWZWN0b3JQbG90M0QgVmVjdG9yUG9pbnRzIFZlY3RvclEgVmVjdG9ycyBWZWN0b3JTY2FsZSBWZWN0b3JTdHlsZSBWZWUgVmVyYmF0aW0gVmVyYm9zZSBWZXJib3NlQ29udmVydFRvUG9zdFNjcmlwdFBhY2tldCBWZXJpZnlDb252ZXJnZW5jZSBWZXJpZnlTb2x1dGlvbnMgVmVyaWZ5VGVzdEFzc3VtcHRpb25zIFZlcnNpb24gVmVyc2lvbk51bWJlciBWZXJ0ZXhBZGQgVmVydGV4Q2FwYWNpdHkgVmVydGV4Q29sb3JzIFZlcnRleENvbXBvbmVudCBWZXJ0ZXhDb25uZWN0aXZpdHkgVmVydGV4Q29vcmRpbmF0ZVJ1bGVzIFZlcnRleENvb3JkaW5hdGVzIFZlcnRleENvcnJlbGF0aW9uU2ltaWxhcml0eSBWZXJ0ZXhDb3NpbmVTaW1pbGFyaXR5IFZlcnRleENvdW50IFZlcnRleENvdmVyUSBWZXJ0ZXhEYXRhQ29vcmRpbmF0ZXMgVmVydGV4RGVncmVlIFZlcnRleERlbGV0ZSBWZXJ0ZXhEaWNlU2ltaWxhcml0eSBWZXJ0ZXhFY2NlbnRyaWNpdHkgVmVydGV4SW5Db21wb25lbnQgVmVydGV4SW5EZWdyZWUgVmVydGV4SW5kZXggVmVydGV4SmFjY2FyZFNpbWlsYXJpdHkgVmVydGV4TGFiZWxpbmcgVmVydGV4TGFiZWxzIFZlcnRleExhYmVsU3R5bGUgVmVydGV4TGlzdCBWZXJ0ZXhOb3JtYWxzIFZlcnRleE91dENvbXBvbmVudCBWZXJ0ZXhPdXREZWdyZWUgVmVydGV4USBWZXJ0ZXhSZW5kZXJpbmdGdW5jdGlvbiBWZXJ0ZXhSZXBsYWNlIFZlcnRleFNoYXBlIFZlcnRleFNoYXBlRnVuY3Rpb24gVmVydGV4U2l6ZSBWZXJ0ZXhTdHlsZSBWZXJ0ZXhUZXh0dXJlQ29vcmRpbmF0ZXMgVmVydGV4V2VpZ2h0IFZlcnRpY2FsIFZlcnRpY2FsQmFyIFZlcnRpY2FsRm9ybSBWZXJ0aWNhbEdhdWdlIFZlcnRpY2FsU2VwYXJhdG9yIFZlcnRpY2FsU2xpZGVyIFZlcnRpY2FsVGlsZGUgVmlld0FuZ2xlIFZpZXdDZW50ZXIgVmlld01hdHJpeCBWaWV3UG9pbnQgVmlld1BvaW50U2VsZWN0b3JTZXR0aW5ncyBWaWV3UG9ydCBWaWV3UmFuZ2UgVmlld1ZlY3RvciBWaWV3VmVydGljYWwgVmlydHVhbEdyb3VwRGF0YSBWaXNpYmxlIFZpc2libGVDZWxsIFZvaWd0RGlzdHJpYnV0aW9uIFZvbk1pc2VzRGlzdHJpYnV0aW9uIFdhaXRBbGwgV2FpdEFzeW5jaHJvbm91c1Rhc2sgV2FpdE5leHQgV2FpdFVudGlsIFdha2VieURpc3RyaWJ1dGlvbiBXYWxsZW5pdXNIeXBlcmdlb21ldHJpY0Rpc3RyaWJ1dGlvbiBXYXJpbmdZdWxlRGlzdHJpYnV0aW9uIFdhdGVyc2hlZENvbXBvbmVudHMgV2F0c29uVVNxdWFyZVRlc3QgV2F0dHNTdHJvZ2F0ekdyYXBoRGlzdHJpYnV0aW9uIFdhdmVsZXRCZXN0QmFzaXMgV2F2ZWxldEZpbHRlckNvZWZmaWNpZW50cyBXYXZlbGV0SW1hZ2VQbG90IFdhdmVsZXRMaXN0UGxvdCBXYXZlbGV0TWFwSW5kZXhlZCBXYXZlbGV0TWF0cml4UGxvdCBXYXZlbGV0UGhpIFdhdmVsZXRQc2kgV2F2ZWxldFNjYWxlIFdhdmVsZXRTY2Fsb2dyYW0gV2F2ZWxldFRocmVzaG9sZCBXZWFrbHlDb25uZWN0ZWRDb21wb25lbnRzIFdlYWtseUNvbm5lY3RlZEdyYXBoUSBXZWFrU3RhdGlvbmFyaXR5IFdlYXRoZXJEYXRhIFdlYmVyRSBXZWRnZSBXZWRuZXNkYXkgV2VpYnVsbERpc3RyaWJ1dGlvbiBXZWllcnN0cmFzc0hhbGZQZXJpb2RzIFdlaWVyc3RyYXNzSW52YXJpYW50cyBXZWllcnN0cmFzc1AgV2VpZXJzdHJhc3NQUHJpbWUgV2VpZXJzdHJhc3NTaWdtYSBXZWllcnN0cmFzc1pldGEgV2VpZ2h0ZWRBZGphY2VuY3lHcmFwaCBXZWlnaHRlZEFkamFjZW5jeU1hdHJpeCBXZWlnaHRlZERhdGEgV2VpZ2h0ZWRHcmFwaFEgV2VpZ2h0cyBXZWxjaFdpbmRvdyBXaGVlbEdyYXBoIFdoZW5FdmVudCBXaGljaCBXaGlsZSBXaGl0ZSBXaGl0ZXNwYWNlIFdoaXRlc3BhY2VDaGFyYWN0ZXIgV2hpdHRha2VyTSBXaGl0dGFrZXJXIFdpZW5lckZpbHRlciBXaWVuZXJQcm9jZXNzIFdpZ25lckQgV2lnbmVyU2VtaWNpcmNsZURpc3RyaWJ1dGlvbiBXaWxrc1cgV2lsa3NXVGVzdCBXaW5kb3dDbGlja1NlbGVjdCBXaW5kb3dFbGVtZW50cyBXaW5kb3dGbG9hdGluZyBXaW5kb3dGcmFtZSBXaW5kb3dGcmFtZUVsZW1lbnRzIFdpbmRvd01hcmdpbnMgV2luZG93TW92YWJsZSBXaW5kb3dPcGFjaXR5IFdpbmRvd1NlbGVjdGVkIFdpbmRvd1NpemUgV2luZG93U3RhdHVzQXJlYSBXaW5kb3dUaXRsZSBXaW5kb3dUb29sYmFycyBXaW5kb3dXaWR0aCBXaXRoIFdvbGZyYW1BbHBoYSBXb2xmcmFtQWxwaGFEYXRlIFdvbGZyYW1BbHBoYVF1YW50aXR5IFdvbGZyYW1BbHBoYVJlc3VsdCBXb3JkIFdvcmRCb3VuZGFyeSBXb3JkQ2hhcmFjdGVyIFdvcmREYXRhIFdvcmRTZWFyY2ggV29yZFNlcGFyYXRvcnMgV29ya2luZ1ByZWNpc2lvbiBXcml0ZSBXcml0ZVN0cmluZyBXcm9uc2tpYW4gWE1MRWxlbWVudCBYTUxPYmplY3QgWG5vciBYb3IgWWVsbG93IFl1bGVEaXNzaW1pbGFyaXR5IFplcm5pa2VSIFplcm9TeW1tZXRyaWMgWmVyb1Rlc3QgWmVyb1dpZHRoVGltZXMgWmV0YSBaZXRhWmVybyBaaXBmRGlzdHJpYnV0aW9uIFpUZXN0IFpUcmFuc2Zvcm0gJEFib3J0ZWQgJEFjdGl2YXRpb25Hcm91cElEICRBY3RpdmF0aW9uS2V5ICRBY3RpdmF0aW9uVXNlclJlZ2lzdGVyZWQgJEFkZE9uc0RpcmVjdG9yeSAkQXNzZXJ0RnVuY3Rpb24gJEFzc3VtcHRpb25zICRBc3luY2hyb25vdXNUYXNrICRCYXNlRGlyZWN0b3J5ICRCYXRjaElucHV0ICRCYXRjaE91dHB1dCAkQm94Rm9ybXMgJEJ5dGVPcmRlcmluZyAkQ2FuY2VsZWQgJENoYXJhY3RlckVuY29kaW5nICRDaGFyYWN0ZXJFbmNvZGluZ3MgJENvbW1hbmRMaW5lICRDb21waWxhdGlvblRhcmdldCAkQ29uZGl0aW9uSG9sZCAkQ29uZmlndXJlZEtlcm5lbHMgJENvbnRleHQgJENvbnRleHRQYXRoICRDb250cm9sQWN0aXZlU2V0dGluZyAkQ3JlYXRpb25EYXRlICRDdXJyZW50TGluayAkRGF0ZVN0cmluZ0Zvcm1hdCAkRGVmYXVsdEZvbnQgJERlZmF1bHRGcm9udEVuZCAkRGVmYXVsdEltYWdpbmdEZXZpY2UgJERlZmF1bHRQYXRoICREaXNwbGF5ICREaXNwbGF5RnVuY3Rpb24gJERpc3RyaWJ1dGVkQ29udGV4dHMgJER5bmFtaWNFdmFsdWF0aW9uICRFY2hvICRFcGlsb2cgJEV4cG9ydEZvcm1hdHMgJEZhaWxlZCAkRmluYW5jaWFsRGF0YVNvdXJjZSAkRm9ybWF0VHlwZSAkRnJvbnRFbmQgJEZyb250RW5kU2Vzc2lvbiAkR2VvTG9jYXRpb24gJEhpc3RvcnlMZW5ndGggJEhvbWVEaXJlY3RvcnkgJEhUVFBDb29raWVzICRJZ25vcmVFT0YgJEltYWdpbmdEZXZpY2VzICRJbXBvcnRGb3JtYXRzICRJbml0aWFsRGlyZWN0b3J5ICRJbnB1dCAkSW5wdXRGaWxlTmFtZSAkSW5wdXRTdHJlYW1NZXRob2RzICRJbnNwZWN0b3IgJEluc3RhbGxhdGlvbkRhdGUgJEluc3RhbGxhdGlvbkRpcmVjdG9yeSAkSW50ZXJmYWNlRW52aXJvbm1lbnQgJEl0ZXJhdGlvbkxpbWl0ICRLZXJuZWxDb3VudCAkS2VybmVsSUQgJExhbmd1YWdlICRMYXVuY2hEaXJlY3RvcnkgJExpYnJhcnlQYXRoICRMaWNlbnNlRXhwaXJhdGlvbkRhdGUgJExpY2Vuc2VJRCAkTGljZW5zZVByb2Nlc3NlcyAkTGljZW5zZVNlcnZlciAkTGljZW5zZVN1YnByb2Nlc3NlcyAkTGljZW5zZVR5cGUgJExpbmUgJExpbmtlZCAkTGlua1N1cHBvcnRlZCAkTG9hZGVkRmlsZXMgJE1hY2hpbmVBZGRyZXNzZXMgJE1hY2hpbmVEb21haW4gJE1hY2hpbmVEb21haW5zICRNYWNoaW5lRXBzaWxvbiAkTWFjaGluZUlEICRNYWNoaW5lTmFtZSAkTWFjaGluZVByZWNpc2lvbiAkTWFjaGluZVR5cGUgJE1heEV4dHJhUHJlY2lzaW9uICRNYXhMaWNlbnNlUHJvY2Vzc2VzICRNYXhMaWNlbnNlU3VicHJvY2Vzc2VzICRNYXhNYWNoaW5lTnVtYmVyICRNYXhOdW1iZXIgJE1heFBpZWNld2lzZUNhc2VzICRNYXhQcmVjaXNpb24gJE1heFJvb3REZWdyZWUgJE1lc3NhZ2VHcm91cHMgJE1lc3NhZ2VMaXN0ICRNZXNzYWdlUHJlUHJpbnQgJE1lc3NhZ2VzICRNaW5NYWNoaW5lTnVtYmVyICRNaW5OdW1iZXIgJE1pbm9yUmVsZWFzZU51bWJlciAkTWluUHJlY2lzaW9uICRNb2R1bGVOdW1iZXIgJE5ldHdvcmtMaWNlbnNlICROZXdNZXNzYWdlICROZXdTeW1ib2wgJE5vdGVib29rcyAkTnVtYmVyTWFya3MgJE9mZiAkT3BlcmF0aW5nU3lzdGVtICRPdXRwdXQgJE91dHB1dEZvcm1zICRPdXRwdXRTaXplTGltaXQgJE91dHB1dFN0cmVhbU1ldGhvZHMgJFBhY2thZ2VzICRQYXJlbnRMaW5rICRQYXJlbnRQcm9jZXNzSUQgJFBhc3N3b3JkRmlsZSAkUGF0Y2hMZXZlbElEICRQYXRoICRQYXRobmFtZVNlcGFyYXRvciAkUGVyZm9ybWFuY2VHb2FsICRQaXBlU3VwcG9ydGVkICRQb3N0ICRQcmUgJFByZWZlcmVuY2VzRGlyZWN0b3J5ICRQcmVQcmludCAkUHJlUmVhZCAkUHJpbnRGb3JtcyAkUHJpbnRMaXRlcmFsICRQcm9jZXNzSUQgJFByb2Nlc3NvckNvdW50ICRQcm9jZXNzb3JUeXBlICRQcm9kdWN0SW5mb3JtYXRpb24gJFByb2dyYW1OYW1lICRSYW5kb21TdGF0ZSAkUmVjdXJzaW9uTGltaXQgJFJlbGVhc2VOdW1iZXIgJFJvb3REaXJlY3RvcnkgJFNjaGVkdWxlZFRhc2sgJFNjcmlwdENvbW1hbmRMaW5lICRTZXNzaW9uSUQgJFNldFBhcmVudExpbmsgJFNoYXJlZEZ1bmN0aW9ucyAkU2hhcmVkVmFyaWFibGVzICRTb3VuZERpc3BsYXkgJFNvdW5kRGlzcGxheUZ1bmN0aW9uICRTdXBwcmVzc0lucHV0Rm9ybUhlYWRzICRTeW5jaHJvbm91c0V2YWx1YXRpb24gJFN5bnRheEhhbmRsZXIgJFN5c3RlbSAkU3lzdGVtQ2hhcmFjdGVyRW5jb2RpbmcgJFN5c3RlbUlEICRTeXN0ZW1Xb3JkTGVuZ3RoICRUZW1wb3JhcnlEaXJlY3RvcnkgJFRlbXBvcmFyeVByZWZpeCAkVGV4dFN0eWxlICRUaW1lZE91dCAkVGltZVVuaXQgJFRpbWVab25lICRUb3BEaXJlY3RvcnkgJFRyYWNlT2ZmICRUcmFjZU9uICRUcmFjZVBhdHRlcm4gJFRyYWNlUG9zdEFjdGlvbiAkVHJhY2VQcmVBY3Rpb24gJFVyZ2VudCAkVXNlckFkZE9uc0RpcmVjdG9yeSAkVXNlckJhc2VEaXJlY3RvcnkgJFVzZXJEb2N1bWVudHNEaXJlY3RvcnkgJFVzZXJOYW1lICRWZXJzaW9uICRWZXJzaW9uTnVtYmVyIixjOlt7Y046ImNvbW1lbnQiLGI6L1woXCovLGU6L1wqXCkvfSxlLkFTTSxlLlFTTSxlLkNOTSx7Y046Imxpc3QiLGI6L1x7LyxlOi9cfS8saTovOi99XX0KfSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJtYXRsYWIiLGZ1bmN0aW9uKGUpe3ZhciB0PVtlLkNOTSx7Y046InN0cmluZyIsYjoiJyIsZToiJyIsYzpbZS5CRSx7YjoiJycifV19XSxyPXtyOjAsYzpbe2NOOiJvcGVyYXRvciIsYjovJ1snXC5dKi99XX07cmV0dXJue2s6e2tleXdvcmQ6ImJyZWFrIGNhc2UgY2F0Y2ggY2xhc3NkZWYgY29udGludWUgZWxzZSBlbHNlaWYgZW5kIGVudW1lcmF0ZWQgZXZlbnRzIGZvciBmdW5jdGlvbiBnbG9iYWwgaWYgbWV0aG9kcyBvdGhlcndpc2UgcGFyZm9yIHBlcnNpc3RlbnQgcHJvcGVydGllcyByZXR1cm4gc3BtZCBzd2l0Y2ggdHJ5IHdoaWxlIixidWlsdF9pbjoic2luIHNpbmQgc2luaCBhc2luIGFzaW5kIGFzaW5oIGNvcyBjb3NkIGNvc2ggYWNvcyBhY29zZCBhY29zaCB0YW4gdGFuZCB0YW5oIGF0YW4gYXRhbmQgYXRhbjIgYXRhbmggc2VjIHNlY2Qgc2VjaCBhc2VjIGFzZWNkIGFzZWNoIGNzYyBjc2NkIGNzY2ggYWNzYyBhY3NjZCBhY3NjaCBjb3QgY290ZCBjb3RoIGFjb3QgYWNvdGQgYWNvdGggaHlwb3QgZXhwIGV4cG0xIGxvZyBsb2cxcCBsb2cxMCBsb2cyIHBvdzIgcmVhbHBvdyByZWFsbG9nIHJlYWxzcXJ0IHNxcnQgbnRocm9vdCBuZXh0cG93MiBhYnMgYW5nbGUgY29tcGxleCBjb25qIGltYWcgcmVhbCB1bndyYXAgaXNyZWFsIGNwbHhwYWlyIGZpeCBmbG9vciBjZWlsIHJvdW5kIG1vZCByZW0gc2lnbiBhaXJ5IGJlc3NlbGogYmVzc2VseSBiZXNzZWxoIGJlc3NlbGkgYmVzc2VsayBiZXRhIGJldGFpbmMgYmV0YWxuIGVsbGlwaiBlbGxpcGtlIGVyZiBlcmZjIGVyZmN4IGVyZmludiBleHBpbnQgZ2FtbWEgZ2FtbWFpbmMgZ2FtbWFsbiBwc2kgbGVnZW5kcmUgY3Jvc3MgZG90IGZhY3RvciBpc3ByaW1lIHByaW1lcyBnY2QgbGNtIHJhdCByYXRzIHBlcm1zIG5jaG9vc2VrIGZhY3RvcmlhbCBjYXJ0MnNwaCBjYXJ0MnBvbCBwb2wyY2FydCBzcGgyY2FydCBoc3YycmdiIHJnYjJoc3YgemVyb3Mgb25lcyBleWUgcmVwbWF0IHJhbmQgcmFuZG4gbGluc3BhY2UgbG9nc3BhY2UgZnJlcXNwYWNlIG1lc2hncmlkIGFjY3VtYXJyYXkgc2l6ZSBsZW5ndGggbmRpbXMgbnVtZWwgZGlzcCBpc2VtcHR5IGlzZXF1YWwgaXNlcXVhbHdpdGhlcXVhbG5hbnMgY2F0IHJlc2hhcGUgZGlhZyBibGtkaWFnIHRyaWwgdHJpdSBmbGlwbHIgZmxpcHVkIGZsaXBkaW0gcm90OTAgZmluZCBzdWIyaW5kIGluZDJzdWIgYnN4ZnVuIG5kZ3JpZCBwZXJtdXRlIGlwZXJtdXRlIHNoaWZ0ZGltIGNpcmNzaGlmdCBzcXVlZXplIGlzc2NhbGFyIGlzdmVjdG9yIGFucyBlcHMgcmVhbG1heCByZWFsbWluIHBpIGkgaW5mIG5hbiBpc25hbiBpc2luZiBpc2Zpbml0ZSBqIHdoeSBjb21wYW4gZ2FsbGVyeSBoYWRhbWFyZCBoYW5rZWwgaGlsYiBpbnZoaWxiIG1hZ2ljIHBhc2NhbCByb3NzZXIgdG9lcGxpdHogdmFuZGVyIHdpbGtpbnNvbiJ9LGk6JygvL3wifCN8L1xcKnxcXHMrL1xcdyspJyxjOlt7Y046ImZ1bmN0aW9uIixiSzoiZnVuY3Rpb24iLGU6IiQiLGM6W2UuVVRNLHtjTjoicGFyYW1zIixiOiJcXCgiLGU6IlxcKSJ9LHtjTjoicGFyYW1zIixiOiJcXFsiLGU6IlxcXSJ9XX0se2I6L1thLXpBLVpfXVthLXpBLVpfMC05XSonWydcLl0qLyxyQjohMCxyOjAsYzpbe2I6L1thLXpBLVpfXVthLXpBLVpfMC05XSovLHI6MH0sci5jWzBdXX0se2NOOiJtYXRyaXgiLGI6IlxcWyIsZToiXFxdIixjOnQscjowLHN0YXJ0czpyfSx7Y046ImNlbGwiLGI6IlxceyIsZTovXH0vLGM6dCxyOjAsaTovOi8sc3RhcnRzOnJ9LHtiOi9cKS8scjowLHN0YXJ0czpyfSx7Y046ImNvbW1lbnQiLGI6IlxcJSIsZToiJCJ9XS5jb25jYXQodCl9fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJtZWwiLGZ1bmN0aW9uKGUpe3JldHVybntrOiJpbnQgZmxvYXQgc3RyaW5nIHZlY3RvciBtYXRyaXggaWYgZWxzZSBzd2l0Y2ggY2FzZSBkZWZhdWx0IHdoaWxlIGRvIGZvciBpbiBicmVhayBjb250aW51ZSBnbG9iYWwgcHJvYyByZXR1cm4gYWJvdXQgYWJzIGFkZEF0dHIgYWRkQXR0cmlidXRlRWRpdG9yTm9kZUhlbHAgYWRkRHluYW1pYyBhZGROZXdTaGVsZlRhYiBhZGRQUCBhZGRQYW5lbENhdGVnb3J5IGFkZFByZWZpeFRvTmFtZSBhZHZhbmNlVG9OZXh0RHJpdmVuS2V5IGFmZmVjdGVkTmV0IGFmZmVjdHMgYWltQ29uc3RyYWludCBhaXIgYWxpYXMgYWxpYXNBdHRyIGFsaWduIGFsaWduQ3R4IGFsaWduQ3VydmUgYWxpZ25TdXJmYWNlIGFsbFZpZXdGaXQgYW1iaWVudExpZ2h0IGFuZ2xlIGFuZ2xlQmV0d2VlbiBhbmltQ29uZSBhbmltQ3VydmVFZGl0b3IgYW5pbURpc3BsYXkgYW5pbVZpZXcgYW5ub3RhdGUgYXBwZW5kU3RyaW5nQXJyYXkgYXBwbGljYXRpb25OYW1lIGFwcGx5QXR0clByZXNldCBhcHBseVRha2UgYXJjTGVuRGltQ29udGV4dCBhcmNMZW5ndGhEaW1lbnNpb24gYXJjbGVuIGFycmF5TWFwcGVyIGFydDNkUGFpbnRDdHggYXJ0QXR0ckN0eCBhcnRBdHRyUGFpbnRWZXJ0ZXhDdHggYXJ0QXR0clNraW5QYWludEN0eCBhcnRBdHRyVG9vbCBhcnRCdWlsZFBhaW50TWVudSBhcnRGbHVpZEF0dHJDdHggYXJ0UHV0dHlDdHggYXJ0U2VsZWN0Q3R4IGFydFNldFBhaW50Q3R4IGFydFVzZXJQYWludEN0eCBhc3NpZ25Db21tYW5kIGFzc2lnbklucHV0RGV2aWNlIGFzc2lnblZpZXdwb3J0RmFjdG9yaWVzIGF0dGFjaEN1cnZlIGF0dGFjaERldmljZUF0dHIgYXR0YWNoU3VyZmFjZSBhdHRyQ29sb3JTbGlkZXJHcnAgYXR0ckNvbXBhdGliaWxpdHkgYXR0ckNvbnRyb2xHcnAgYXR0ckVudW1PcHRpb25NZW51IGF0dHJFbnVtT3B0aW9uTWVudUdycCBhdHRyRmllbGRHcnAgYXR0ckZpZWxkU2xpZGVyR3JwIGF0dHJOYXZpZ2F0aW9uQ29udHJvbEdycCBhdHRyUHJlc2V0RWRpdFdpbiBhdHRyaWJ1dGVFeGlzdHMgYXR0cmlidXRlSW5mbyBhdHRyaWJ1dGVNZW51IGF0dHJpYnV0ZVF1ZXJ5IGF1dG9LZXlmcmFtZSBhdXRvUGxhY2UgYmFrZUNsaXAgYmFrZUZsdWlkU2hhZGluZyBiYWtlUGFydGlhbEhpc3RvcnkgYmFrZVJlc3VsdHMgYmFrZVNpbXVsYXRpb24gYmFzZW5hbWUgYmFzZW5hbWVFeCBiYXRjaFJlbmRlciBiZXNzZWwgYmV2ZWwgYmV2ZWxQbHVzIGJpbk1lbWJlcnNoaXAgYmluZFNraW4gYmxlbmQyIGJsZW5kU2hhcGUgYmxlbmRTaGFwZUVkaXRvciBibGVuZFNoYXBlUGFuZWwgYmxlbmRUd29BdHRyIGJsaW5kRGF0YVR5cGUgYm9uZUxhdHRpY2UgYm91bmRhcnkgYm94RG9sbHlDdHggYm94Wm9vbUN0eCBidWZmZXJDdXJ2ZSBidWlsZEJvb2ttYXJrTWVudSBidWlsZEtleWZyYW1lTWVudSBidXR0b24gYnV0dG9uTWFuaXAgQ0JHIGNhY2hlRmlsZSBjYWNoZUZpbGVDb21iaW5lIGNhY2hlRmlsZU1lcmdlIGNhY2hlRmlsZVRyYWNrIGNhbWVyYSBjYW1lcmFWaWV3IGNhbkNyZWF0ZU1hbmlwIGNhbnZhcyBjYXBpdGFsaXplU3RyaW5nIGNhdGNoIGNhdGNoUXVpZXQgY2VpbCBjaGFuZ2VTdWJkaXZDb21wb25lbnREaXNwbGF5TGV2ZWwgY2hhbmdlU3ViZGl2UmVnaW9uIGNoYW5uZWxCb3ggY2hhcmFjdGVyIGNoYXJhY3Rlck1hcCBjaGFyYWN0ZXJPdXRsaW5lRWRpdG9yIGNoYXJhY3Rlcml6ZSBjaGRpciBjaGVja0JveCBjaGVja0JveEdycCBjaGVja0RlZmF1bHRSZW5kZXJHbG9iYWxzIGNob2ljZSBjaXJjbGUgY2lyY3VsYXJGaWxsZXQgY2xhbXAgY2xlYXIgY2xlYXJDYWNoZSBjbGlwIGNsaXBFZGl0b3IgY2xpcEVkaXRvckN1cnJlbnRUaW1lQ3R4IGNsaXBTY2hlZHVsZSBjbGlwU2NoZWR1bGVyT3V0bGluZXIgY2xpcFRyaW1CZWZvcmUgY2xvc2VDdXJ2ZSBjbG9zZVN1cmZhY2UgY2x1c3RlciBjbWRGaWxlT3V0cHV0IGNtZFNjcm9sbEZpZWxkRXhlY3V0ZXIgY21kU2Nyb2xsRmllbGRSZXBvcnRlciBjbWRTaGVsbCBjb2Fyc2VuU3ViZGl2U2VsZWN0aW9uTGlzdCBjb2xsaXNpb24gY29sb3IgY29sb3JBdFBvaW50IGNvbG9yRWRpdG9yIGNvbG9ySW5kZXggY29sb3JJbmRleFNsaWRlckdycCBjb2xvclNsaWRlckJ1dHRvbkdycCBjb2xvclNsaWRlckdycCBjb2x1bW5MYXlvdXQgY29tbWFuZEVjaG8gY29tbWFuZExpbmUgY29tbWFuZFBvcnQgY29tcGFjdEhhaXJTeXN0ZW0gY29tcG9uZW50RWRpdG9yIGNvbXBvc2l0aW5nSW50ZXJvcCBjb21wdXRlUG9seXNldFZvbHVtZSBjb25kaXRpb24gY29uZSBjb25maXJtRGlhbG9nIGNvbm5lY3RBdHRyIGNvbm5lY3RDb250cm9sIGNvbm5lY3REeW5hbWljIGNvbm5lY3RKb2ludCBjb25uZWN0aW9uSW5mbyBjb25zdHJhaW4gY29uc3RyYWluVmFsdWUgY29uc3RydWN0aW9uSGlzdG9yeSBjb250YWluZXIgY29udGFpbnNNdWx0aWJ5dGUgY29udGV4dEluZm8gY29udHJvbCBjb252ZXJ0RnJvbU9sZExheWVycyBjb252ZXJ0SWZmVG9Qc2QgY29udmVydExpZ2h0bWFwIGNvbnZlcnRTb2xpZFR4IGNvbnZlcnRUZXNzZWxsYXRpb24gY29udmVydFVuaXQgY29weUFycmF5IGNvcHlGbGV4b3IgY29weUtleSBjb3B5U2tpbldlaWdodHMgY29zIGNwQnV0dG9uIGNwQ2FjaGUgY3BDbG90aFNldCBjcENvbGxpc2lvbiBjcENvbnN0cmFpbnQgY3BDb252Q2xvdGhUb01lc2ggY3BGb3JjZXMgY3BHZXRTb2x2ZXJBdHRyIGNwUGFuZWwgY3BQcm9wZXJ0eSBjcFJpZ2lkQ29sbGlzaW9uRmlsdGVyIGNwU2VhbSBjcFNldEVkaXQgY3BTZXRTb2x2ZXJBdHRyIGNwU29sdmVyIGNwU29sdmVyVHlwZXMgY3BUb29sIGNwVXBkYXRlQ2xvdGhVVnMgY3JlYXRlRGlzcGxheUxheWVyIGNyZWF0ZURyYXdDdHggY3JlYXRlRWRpdG9yIGNyZWF0ZUxheWVyZWRQc2RGaWxlIGNyZWF0ZU1vdGlvbkZpZWxkIGNyZWF0ZU5ld1NoZWxmIGNyZWF0ZU5vZGUgY3JlYXRlUmVuZGVyTGF5ZXIgY3JlYXRlU3ViZGl2UmVnaW9uIGNyb3NzIGNyb3NzUHJvZHVjdCBjdHhBYm9ydCBjdHhDb21wbGV0aW9uIGN0eEVkaXRNb2RlIGN0eFRyYXZlcnNlIGN1cnJlbnRDdHggY3VycmVudFRpbWUgY3VycmVudFRpbWVDdHggY3VycmVudFVuaXQgY3VydmUgY3VydmVBZGRQdEN0eCBjdXJ2ZUNWQ3R4IGN1cnZlRVBDdHggY3VydmVFZGl0b3JDdHggY3VydmVJbnRlcnNlY3QgY3VydmVNb3ZlRVBDdHggY3VydmVPblN1cmZhY2UgY3VydmVTa2V0Y2hDdHggY3V0S2V5IGN5Y2xlQ2hlY2sgY3lsaW5kZXIgZGFnUG9zZSBkYXRlIGRlZmF1bHRMaWdodExpc3RDaGVja0JveCBkZWZhdWx0TmF2aWdhdGlvbiBkZWZpbmVEYXRhU2VydmVyIGRlZmluZVZpcnR1YWxEZXZpY2UgZGVmb3JtZXIgZGVnX3RvX3JhZCBkZWxldGUgZGVsZXRlQXR0ciBkZWxldGVTaGFkaW5nR3JvdXBzQW5kTWF0ZXJpYWxzIGRlbGV0ZVNoZWxmVGFiIGRlbGV0ZVVJIGRlbGV0ZVVudXNlZEJydXNoZXMgZGVscmFuZHN0ciBkZXRhY2hDdXJ2ZSBkZXRhY2hEZXZpY2VBdHRyIGRldGFjaFN1cmZhY2UgZGV2aWNlRWRpdG9yIGRldmljZVBhbmVsIGRnSW5mbyBkZ2RpcnR5IGRnZXZhbCBkZ3RpbWVyIGRpbVdoZW4gZGlyZWN0S2V5Q3R4IGRpcmVjdGlvbmFsTGlnaHQgZGlybWFwIGRpcm5hbWUgZGlzYWJsZSBkaXNjb25uZWN0QXR0ciBkaXNjb25uZWN0Sm9pbnQgZGlza0NhY2hlIGRpc3BsYWNlbWVudFRvUG9seSBkaXNwbGF5QWZmZWN0ZWQgZGlzcGxheUNvbG9yIGRpc3BsYXlDdWxsIGRpc3BsYXlMZXZlbE9mRGV0YWlsIGRpc3BsYXlQcmVmIGRpc3BsYXlSR0JDb2xvciBkaXNwbGF5U21vb3RobmVzcyBkaXNwbGF5U3RhdHMgZGlzcGxheVN0cmluZyBkaXNwbGF5U3VyZmFjZSBkaXN0YW5jZURpbUNvbnRleHQgZGlzdGFuY2VEaW1lbnNpb24gZG9CbHVyIGRvbGx5IGRvbGx5Q3R4IGRvcGVTaGVldEVkaXRvciBkb3QgZG90UHJvZHVjdCBkb3VibGVQcm9maWxlQmlyYWlsU3VyZmFjZSBkcmFnIGRyYWdBdHRyQ29udGV4dCBkcmFnZ2VyQ29udGV4dCBkcm9wb2ZmTG9jYXRvciBkdXBsaWNhdGUgZHVwbGljYXRlQ3VydmUgZHVwbGljYXRlU3VyZmFjZSBkeW5DYWNoZSBkeW5Db250cm9sIGR5bkV4cG9ydCBkeW5FeHByZXNzaW9uIGR5bkdsb2JhbHMgZHluUGFpbnRFZGl0b3IgZHluUGFydGljbGVDdHggZHluUHJlZiBkeW5SZWxFZFBhbmVsIGR5blJlbEVkaXRvciBkeW5hbWljTG9hZCBlZGl0QXR0ckxpbWl0cyBlZGl0RGlzcGxheUxheWVyR2xvYmFscyBlZGl0RGlzcGxheUxheWVyTWVtYmVycyBlZGl0UmVuZGVyTGF5ZXJBZGp1c3RtZW50IGVkaXRSZW5kZXJMYXllckdsb2JhbHMgZWRpdFJlbmRlckxheWVyTWVtYmVycyBlZGl0b3IgZWRpdG9yVGVtcGxhdGUgZWZmZWN0b3IgZW1pdCBlbWl0dGVyIGVuYWJsZURldmljZSBlbmNvZGVTdHJpbmcgZW5kU3RyaW5nIGVuZHNXaXRoIGVudiBlcXVpdmFsZW50IGVxdWl2YWxlbnRUb2wgZXJmIGVycm9yIGV2YWwgZXZhbERlZmVycmVkIGV2YWxFY2hvIGV2ZW50IGV4YWN0V29ybGRCb3VuZGluZ0JveCBleGNsdXNpdmVMaWdodENoZWNrQm94IGV4ZWMgZXhlY3V0ZUZvckVhY2hPYmplY3QgZXhpc3RzIGV4cCBleHByZXNzaW9uIGV4cHJlc3Npb25FZGl0b3JMaXN0ZW4gZXh0ZW5kQ3VydmUgZXh0ZW5kU3VyZmFjZSBleHRydWRlIGZjaGVjayBmY2xvc2UgZmVvZiBmZmx1c2ggZmdldGxpbmUgZmdldHdvcmQgZmlsZSBmaWxlQnJvd3NlckRpYWxvZyBmaWxlRGlhbG9nIGZpbGVFeHRlbnNpb24gZmlsZUluZm8gZmlsZXRlc3QgZmlsbGV0Q3VydmUgZmlsdGVyIGZpbHRlckN1cnZlIGZpbHRlckV4cGFuZCBmaWx0ZXJTdHVkaW9JbXBvcnQgZmluZEFsbEludGVyc2VjdGlvbnMgZmluZEFuaW1DdXJ2ZXMgZmluZEtleWZyYW1lIGZpbmRNZW51SXRlbSBmaW5kUmVsYXRlZFNraW5DbHVzdGVyIGZpbmRlciBmaXJzdFBhcmVudE9mIGZpdEJzcGxpbmUgZmxleG9yIGZsb2F0RXEgZmxvYXRGaWVsZCBmbG9hdEZpZWxkR3JwIGZsb2F0U2Nyb2xsQmFyIGZsb2F0U2xpZGVyIGZsb2F0U2xpZGVyMiBmbG9hdFNsaWRlckJ1dHRvbkdycCBmbG9hdFNsaWRlckdycCBmbG9vciBmbG93IGZsdWlkQ2FjaGVJbmZvIGZsdWlkRW1pdHRlciBmbHVpZFZveGVsSW5mbyBmbHVzaFVuZG8gZm1vZCBmb250RGlhbG9nIGZvcGVuIGZvcm1MYXlvdXQgZm9ybWF0IGZwcmludCBmcmFtZUxheW91dCBmcmVhZCBmcmVlRm9ybUZpbGxldCBmcmV3aW5kIGZyb21OYXRpdmVQYXRoIGZ3cml0ZSBnYW1tYSBnYXVzcyBnZW9tZXRyeUNvbnN0cmFpbnQgZ2V0QXBwbGljYXRpb25WZXJzaW9uQXNGbG9hdCBnZXRBdHRyIGdldENsYXNzaWZpY2F0aW9uIGdldERlZmF1bHRCcnVzaCBnZXRGaWxlTGlzdCBnZXRGbHVpZEF0dHIgZ2V0SW5wdXREZXZpY2VSYW5nZSBnZXRNYXlhUGFuZWxUeXBlcyBnZXRNb2RpZmllcnMgZ2V0UGFuZWwgZ2V0UGFydGljbGVBdHRyIGdldFBsdWdpblJlc291cmNlIGdldGVudiBnZXRwaWQgZ2xSZW5kZXIgZ2xSZW5kZXJFZGl0b3IgZ2xvYmFsU3RpdGNoIGdtYXRjaCBnb2FsIGdvdG9CaW5kUG9zZSBncmFiQ29sb3IgZ3JhZGllbnRDb250cm9sIGdyYWRpZW50Q29udHJvbE5vQXR0ciBncmFwaERvbGx5Q3R4IGdyYXBoU2VsZWN0Q29udGV4dCBncmFwaFRyYWNrQ3R4IGdyYXZpdHkgZ3JpZCBncmlkTGF5b3V0IGdyb3VwIGdyb3VwT2JqZWN0c0J5TmFtZSBIZkFkZEF0dHJhY3RvclRvQVMgSGZBc3NpZ25BUyBIZkJ1aWxkRXF1YWxNYXAgSGZCdWlsZEZ1ckZpbGVzIEhmQnVpbGRGdXJJbWFnZXMgSGZDYW5jZWxBRlIgSGZDb25uZWN0QVNUb0hGIEhmQ3JlYXRlQXR0cmFjdG9yIEhmRGVsZXRlQVMgSGZFZGl0QVMgSGZQZXJmb3JtQ3JlYXRlQVMgSGZSZW1vdmVBdHRyYWN0b3JGcm9tQVMgSGZTZWxlY3RBdHRhY2hlZCBIZlNlbGVjdEF0dHJhY3RvcnMgSGZVbkFzc2lnbkFTIGhhcmRlblBvaW50Q3VydmUgaGFyZHdhcmUgaGFyZHdhcmVSZW5kZXJQYW5lbCBoZWFkc1VwRGlzcGxheSBoZWFkc1VwTWVzc2FnZSBoZWxwIGhlbHBMaW5lIGhlcm1pdGUgaGlkZSBoaWxpdGUgaGl0VGVzdCBob3RCb3ggaG90a2V5IGhvdGtleUNoZWNrIGhzdl90b19yZ2IgaHVkQnV0dG9uIGh1ZFNsaWRlciBodWRTbGlkZXJCdXR0b24gaHdSZWZsZWN0aW9uTWFwIGh3UmVuZGVyIGh3UmVuZGVyTG9hZCBoeXBlckdyYXBoIGh5cGVyUGFuZWwgaHlwZXJTaGFkZSBoeXBvdCBpY29uVGV4dEJ1dHRvbiBpY29uVGV4dENoZWNrQm94IGljb25UZXh0UmFkaW9CdXR0b24gaWNvblRleHRSYWRpb0NvbGxlY3Rpb24gaWNvblRleHRTY3JvbGxMaXN0IGljb25UZXh0U3RhdGljTGFiZWwgaWtIYW5kbGUgaWtIYW5kbGVDdHggaWtIYW5kbGVEaXNwbGF5U2NhbGUgaWtTb2x2ZXIgaWtTcGxpbmVIYW5kbGVDdHggaWtTeXN0ZW0gaWtTeXN0ZW1JbmZvIGlrZmtEaXNwbGF5TWV0aG9kIGlsbHVzdHJhdG9yQ3VydmVzIGltYWdlIGltZlBsdWdpbnMgaW5oZXJpdFRyYW5zZm9ybSBpbnNlcnRKb2ludCBpbnNlcnRKb2ludEN0eCBpbnNlcnRLZXlDdHggaW5zZXJ0S25vdEN1cnZlIGluc2VydEtub3RTdXJmYWNlIGluc3RhbmNlIGluc3RhbmNlYWJsZSBpbnN0YW5jZXIgaW50RmllbGQgaW50RmllbGRHcnAgaW50U2Nyb2xsQmFyIGludFNsaWRlciBpbnRTbGlkZXJHcnAgaW50ZXJUb1VJIGludGVybmFsVmFyIGludGVyc2VjdCBpcHJFbmdpbmUgaXNBbmltQ3VydmUgaXNDb25uZWN0ZWQgaXNEaXJ0eSBpc1BhcmVudE9mIGlzU2FtZU9iamVjdCBpc1RydWUgaXNWYWxpZE9iamVjdE5hbWUgaXNWYWxpZFN0cmluZyBpc1ZhbGlkVWlOYW1lIGlzb2xhdGVTZWxlY3QgaXRlbUZpbHRlciBpdGVtRmlsdGVyQXR0ciBpdGVtRmlsdGVyUmVuZGVyIGl0ZW1GaWx0ZXJUeXBlIGpvaW50IGpvaW50Q2x1c3RlciBqb2ludEN0eCBqb2ludERpc3BsYXlTY2FsZSBqb2ludExhdHRpY2Uga2V5VGFuZ2VudCBrZXlmcmFtZSBrZXlmcmFtZU91dGxpbmVyIGtleWZyYW1lUmVnaW9uQ3VycmVudFRpbWVDdHgga2V5ZnJhbWVSZWdpb25EaXJlY3RLZXlDdHgga2V5ZnJhbWVSZWdpb25Eb2xseUN0eCBrZXlmcmFtZVJlZ2lvbkluc2VydEtleUN0eCBrZXlmcmFtZVJlZ2lvbk1vdmVLZXlDdHgga2V5ZnJhbWVSZWdpb25TY2FsZUtleUN0eCBrZXlmcmFtZVJlZ2lvblNlbGVjdEtleUN0eCBrZXlmcmFtZVJlZ2lvblNldEtleUN0eCBrZXlmcmFtZVJlZ2lvblRyYWNrQ3R4IGtleWZyYW1lU3RhdHMgbGFzc29Db250ZXh0IGxhdHRpY2UgbGF0dGljZURlZm9ybUtleUN0eCBsYXVuY2ggbGF1bmNoSW1hZ2VFZGl0b3IgbGF5ZXJCdXR0b24gbGF5ZXJlZFNoYWRlclBvcnQgbGF5ZXJlZFRleHR1cmVQb3J0IGxheW91dCBsYXlvdXREaWFsb2cgbGlnaHRMaXN0IGxpZ2h0TGlzdEVkaXRvciBsaWdodExpc3RQYW5lbCBsaWdodGxpbmsgbGluZUludGVyc2VjdGlvbiBsaW5lYXJQcmVjaXNpb24gbGluc3RlcCBsaXN0QW5pbWF0YWJsZSBsaXN0QXR0ciBsaXN0Q2FtZXJhcyBsaXN0Q29ubmVjdGlvbnMgbGlzdERldmljZUF0dGFjaG1lbnRzIGxpc3RIaXN0b3J5IGxpc3RJbnB1dERldmljZUF4ZXMgbGlzdElucHV0RGV2aWNlQnV0dG9ucyBsaXN0SW5wdXREZXZpY2VzIGxpc3RNZW51QW5ub3RhdGlvbiBsaXN0Tm9kZVR5cGVzIGxpc3RQYW5lbENhdGVnb3JpZXMgbGlzdFJlbGF0aXZlcyBsaXN0U2V0cyBsaXN0VHJhbnNmb3JtcyBsaXN0VW5zZWxlY3RlZCBsaXN0ZXJFZGl0b3IgbG9hZEZsdWlkIGxvYWROZXdTaGVsZiBsb2FkUGx1Z2luIGxvYWRQbHVnaW5MYW5ndWFnZVJlc291cmNlcyBsb2FkUHJlZk9iamVjdHMgbG9jYWxpemVkUGFuZWxMYWJlbCBsb2NrTm9kZSBsb2Z0IGxvZyBsb25nTmFtZU9mIGxvb2tUaHJ1IGxzIGxzVGhyb3VnaEZpbHRlciBsc1R5cGUgbHNVSSBNYXlhdG9tciBtYWcgbWFrZUlkZW50aXR5IG1ha2VMaXZlIG1ha2VQYWludGFibGUgbWFrZVJvbGwgbWFrZVNpbmdsZVN1cmZhY2UgbWFrZVR1YmVPbiBtYWtlYm90IG1hbmlwTW92ZUNvbnRleHQgbWFuaXBNb3ZlTGltaXRzQ3R4IG1hbmlwT3B0aW9ucyBtYW5pcFJvdGF0ZUNvbnRleHQgbWFuaXBSb3RhdGVMaW1pdHNDdHggbWFuaXBTY2FsZUNvbnRleHQgbWFuaXBTY2FsZUxpbWl0c0N0eCBtYXJrZXIgbWF0Y2ggbWF4IG1lbW9yeSBtZW51IG1lbnVCYXJMYXlvdXQgbWVudUVkaXRvciBtZW51SXRlbSBtZW51SXRlbVRvU2hlbGYgbWVudVNldCBtZW51U2V0UHJlZiBtZXNzYWdlTGluZSBtaW4gbWluaW1pemVBcHAgbWlycm9ySm9pbnQgbW9kZWxDdXJyZW50VGltZUN0eCBtb2RlbEVkaXRvciBtb2RlbFBhbmVsIG1vdXNlIG1vdkluIG1vdk91dCBtb3ZlIG1vdmVJS3RvRksgbW92ZUtleUN0eCBtb3ZlVmVydGV4QWxvbmdEaXJlY3Rpb24gbXVsdGlQcm9maWxlQmlyYWlsU3VyZmFjZSBtdXRlIG5QYXJ0aWNsZSBuYW1lQ29tbWFuZCBuYW1lRmllbGQgbmFtZXNwYWNlIG5hbWVzcGFjZUluZm8gbmV3UGFuZWxJdGVtcyBuZXd0b24gbm9kZUNhc3Qgbm9kZUljb25CdXR0b24gbm9kZU91dGxpbmVyIG5vZGVQcmVzZXQgbm9kZVR5cGUgbm9pc2Ugbm9uTGluZWFyIG5vcm1hbENvbnN0cmFpbnQgbm9ybWFsaXplIG51cmJzQm9vbGVhbiBudXJic0NvcHlVVlNldCBudXJic0N1YmUgbnVyYnNFZGl0VVYgbnVyYnNQbGFuZSBudXJic1NlbGVjdCBudXJic1NxdWFyZSBudXJic1RvUG9seSBudXJic1RvUG9seWdvbnNQcmVmIG51cmJzVG9TdWJkaXYgbnVyYnNUb1N1YmRpdlByZWYgbnVyYnNVVlNldCBudXJic1ZpZXdEaXJlY3Rpb25WZWN0b3Igb2JqRXhpc3RzIG9iamVjdENlbnRlciBvYmplY3RMYXllciBvYmplY3RUeXBlIG9iamVjdFR5cGVVSSBvYnNvbGV0ZVByb2Mgb2NlYW5OdXJic1ByZXZpZXdQbGFuZSBvZmZzZXRDdXJ2ZSBvZmZzZXRDdXJ2ZU9uU3VyZmFjZSBvZmZzZXRTdXJmYWNlIG9wZW5HTEV4dGVuc2lvbiBvcGVuTWF5YVByZWYgb3B0aW9uTWVudSBvcHRpb25NZW51R3JwIG9wdGlvblZhciBvcmJpdCBvcmJpdEN0eCBvcmllbnRDb25zdHJhaW50IG91dGxpbmVyRWRpdG9yIG91dGxpbmVyUGFuZWwgb3ZlcnJpZGVNb2RpZmllciBwYWludEVmZmVjdHNEaXNwbGF5IHBhaXJCbGVuZCBwYWxldHRlUG9ydCBwYW5lTGF5b3V0IHBhbmVsIHBhbmVsQ29uZmlndXJhdGlvbiBwYW5lbEhpc3RvcnkgcGFyYW1EaW1Db250ZXh0IHBhcmFtRGltZW5zaW9uIHBhcmFtTG9jYXRvciBwYXJlbnQgcGFyZW50Q29uc3RyYWludCBwYXJ0aWNsZSBwYXJ0aWNsZUV4aXN0cyBwYXJ0aWNsZUluc3RhbmNlciBwYXJ0aWNsZVJlbmRlckluZm8gcGFydGl0aW9uIHBhc3RlS2V5IHBhdGhBbmltYXRpb24gcGF1c2UgcGNsb3NlIHBlcmNlbnQgcGVyZm9ybWFuY2VPcHRpb25zIHBmeHN0cm9rZXMgcGlja1dhbGsgcGljdHVyZSBwaXhlbE1vdmUgcGxhbmFyU3JmIHBsYW5lIHBsYXkgcGxheWJhY2tPcHRpb25zIHBsYXlibGFzdCBwbHVnQXR0ciBwbHVnTm9kZSBwbHVnaW5JbmZvIHBsdWdpblJlc291cmNlVXRpbCBwb2ludENvbnN0cmFpbnQgcG9pbnRDdXJ2ZUNvbnN0cmFpbnQgcG9pbnRMaWdodCBwb2ludE1hdHJpeE11bHQgcG9pbnRPbkN1cnZlIHBvaW50T25TdXJmYWNlIHBvaW50UG9zaXRpb24gcG9sZVZlY3RvckNvbnN0cmFpbnQgcG9seUFwcGVuZCBwb2x5QXBwZW5kRmFjZXRDdHggcG9seUFwcGVuZFZlcnRleCBwb2x5QXV0b1Byb2plY3Rpb24gcG9seUF2ZXJhZ2VOb3JtYWwgcG9seUF2ZXJhZ2VWZXJ0ZXggcG9seUJldmVsIHBvbHlCbGVuZENvbG9yIHBvbHlCbGluZERhdGEgcG9seUJvb2xPcCBwb2x5QnJpZGdlRWRnZSBwb2x5Q2FjaGVNb25pdG9yIHBvbHlDaGVjayBwb2x5Q2hpcE9mZiBwb2x5Q2xpcGJvYXJkIHBvbHlDbG9zZUJvcmRlciBwb2x5Q29sbGFwc2VFZGdlIHBvbHlDb2xsYXBzZUZhY2V0IHBvbHlDb2xvckJsaW5kRGF0YSBwb2x5Q29sb3JEZWwgcG9seUNvbG9yUGVyVmVydGV4IHBvbHlDb2xvclNldCBwb2x5Q29tcGFyZSBwb2x5Q29uZSBwb2x5Q29weVVWIHBvbHlDcmVhc2UgcG9seUNyZWFzZUN0eCBwb2x5Q3JlYXRlRmFjZXQgcG9seUNyZWF0ZUZhY2V0Q3R4IHBvbHlDdWJlIHBvbHlDdXQgcG9seUN1dEN0eCBwb2x5Q3lsaW5kZXIgcG9seUN5bGluZHJpY2FsUHJvamVjdGlvbiBwb2x5RGVsRWRnZSBwb2x5RGVsRmFjZXQgcG9seURlbFZlcnRleCBwb2x5RHVwbGljYXRlQW5kQ29ubmVjdCBwb2x5RHVwbGljYXRlRWRnZSBwb2x5RWRpdFVWIHBvbHlFZGl0VVZTaGVsbCBwb2x5RXZhbHVhdGUgcG9seUV4dHJ1ZGVFZGdlIHBvbHlFeHRydWRlRmFjZXQgcG9seUV4dHJ1ZGVWZXJ0ZXggcG9seUZsaXBFZGdlIHBvbHlGbGlwVVYgcG9seUZvcmNlVVYgcG9seUdlb1NhbXBsZXIgcG9seUhlbGl4IHBvbHlJbmZvIHBvbHlJbnN0YWxsQWN0aW9uIHBvbHlMYXlvdXRVViBwb2x5TGlzdENvbXBvbmVudENvbnZlcnNpb24gcG9seU1hcEN1dCBwb2x5TWFwRGVsIHBvbHlNYXBTZXcgcG9seU1hcFNld01vdmUgcG9seU1lcmdlRWRnZSBwb2x5TWVyZ2VFZGdlQ3R4IHBvbHlNZXJnZUZhY2V0IHBvbHlNZXJnZUZhY2V0Q3R4IHBvbHlNZXJnZVVWIHBvbHlNZXJnZVZlcnRleCBwb2x5TWlycm9yRmFjZSBwb2x5TW92ZUVkZ2UgcG9seU1vdmVGYWNldCBwb2x5TW92ZUZhY2V0VVYgcG9seU1vdmVVViBwb2x5TW92ZVZlcnRleCBwb2x5Tm9ybWFsIHBvbHlOb3JtYWxQZXJWZXJ0ZXggcG9seU5vcm1hbGl6ZVVWIHBvbHlPcHRVdnMgcG9seU9wdGlvbnMgcG9seU91dHB1dCBwb2x5UGlwZSBwb2x5UGxhbmFyUHJvamVjdGlvbiBwb2x5UGxhbmUgcG9seVBsYXRvbmljU29saWQgcG9seVBva2UgcG9seVByaW1pdGl2ZSBwb2x5UHJpc20gcG9seVByb2plY3Rpb24gcG9seVB5cmFtaWQgcG9seVF1YWQgcG9seVF1ZXJ5QmxpbmREYXRhIHBvbHlSZWR1Y2UgcG9seVNlbGVjdCBwb2x5U2VsZWN0Q29uc3RyYWludCBwb2x5U2VsZWN0Q29uc3RyYWludE1vbml0b3IgcG9seVNlbGVjdEN0eCBwb2x5U2VsZWN0RWRpdEN0eCBwb2x5U2VwYXJhdGUgcG9seVNldFRvRmFjZU5vcm1hbCBwb2x5U2V3RWRnZSBwb2x5U2hvcnRlc3RQYXRoQ3R4IHBvbHlTbW9vdGggcG9seVNvZnRFZGdlIHBvbHlTcGhlcmUgcG9seVNwaGVyaWNhbFByb2plY3Rpb24gcG9seVNwbGl0IHBvbHlTcGxpdEN0eCBwb2x5U3BsaXRFZGdlIHBvbHlTcGxpdFJpbmcgcG9seVNwbGl0VmVydGV4IHBvbHlTdHJhaWdodGVuVVZCb3JkZXIgcG9seVN1YmRpdmlkZUVkZ2UgcG9seVN1YmRpdmlkZUZhY2V0IHBvbHlUb1N1YmRpdiBwb2x5VG9ydXMgcG9seVRyYW5zZmVyIHBvbHlUcmlhbmd1bGF0ZSBwb2x5VVZTZXQgcG9seVVuaXRlIHBvbHlXZWRnZUZhY2UgcG9wZW4gcG9wdXBNZW51IHBvc2UgcG93IHByZWxvYWRSZWZFZCBwcmludCBwcm9ncmVzc0JhciBwcm9ncmVzc1dpbmRvdyBwcm9qRmlsZVZpZXdlciBwcm9qZWN0Q3VydmUgcHJvamVjdFRhbmdlbnQgcHJvamVjdGlvbkNvbnRleHQgcHJvamVjdGlvbk1hbmlwIHByb21wdERpYWxvZyBwcm9wTW9kQ3R4IHByb3BNb3ZlIHBzZENoYW5uZWxPdXRsaW5lciBwc2RFZGl0VGV4dHVyZUZpbGUgcHNkRXhwb3J0IHBzZFRleHR1cmVGaWxlIHB1dGVudiBwd2QgcHl0aG9uIHF1ZXJ5U3ViZGl2IHF1aXQgcmFkX3RvX2RlZyByYWRpYWwgcmFkaW9CdXR0b24gcmFkaW9CdXR0b25HcnAgcmFkaW9Db2xsZWN0aW9uIHJhZGlvTWVudUl0ZW1Db2xsZWN0aW9uIHJhbXBDb2xvclBvcnQgcmFuZCByYW5kb21pemVGb2xsaWNsZXMgcmFuZHN0YXRlIHJhbmdlQ29udHJvbCByZWFkVGFrZSByZWJ1aWxkQ3VydmUgcmVidWlsZFN1cmZhY2UgcmVjb3JkQXR0ciByZWNvcmREZXZpY2UgcmVkbyByZWZlcmVuY2UgcmVmZXJlbmNlRWRpdCByZWZlcmVuY2VRdWVyeSByZWZpbmVTdWJkaXZTZWxlY3Rpb25MaXN0IHJlZnJlc2ggcmVmcmVzaEFFIHJlZ2lzdGVyUGx1Z2luUmVzb3VyY2UgcmVoYXNoIHJlbG9hZEltYWdlIHJlbW92ZUpvaW50IHJlbW92ZU11bHRpSW5zdGFuY2UgcmVtb3ZlUGFuZWxDYXRlZ29yeSByZW5hbWUgcmVuYW1lQXR0ciByZW5hbWVTZWxlY3Rpb25MaXN0IHJlbmFtZVVJIHJlbmRlciByZW5kZXJHbG9iYWxzTm9kZSByZW5kZXJJbmZvIHJlbmRlckxheWVyQnV0dG9uIHJlbmRlckxheWVyUGFyZW50IHJlbmRlckxheWVyUG9zdFByb2Nlc3MgcmVuZGVyTGF5ZXJVbnBhcmVudCByZW5kZXJNYW5pcCByZW5kZXJQYXJ0aXRpb24gcmVuZGVyUXVhbGl0eU5vZGUgcmVuZGVyU2V0dGluZ3MgcmVuZGVyVGh1bWJuYWlsVXBkYXRlIHJlbmRlcldpbmRvd0VkaXRvciByZW5kZXJXaW5kb3dTZWxlY3RDb250ZXh0IHJlbmRlcmVyIHJlb3JkZXIgcmVvcmRlckRlZm9ybWVycyByZXF1aXJlcyByZXJvb3QgcmVzYW1wbGVGbHVpZCByZXNldEFFIHJlc2V0UGZ4VG9Qb2x5Q2FtZXJhIHJlc2V0VG9vbCByZXNvbHV0aW9uTm9kZSByZXRhcmdldCByZXZlcnNlQ3VydmUgcmV2ZXJzZVN1cmZhY2UgcmV2b2x2ZSByZ2JfdG9faHN2IHJpZ2lkQm9keSByaWdpZFNvbHZlciByb2xsIHJvbGxDdHggcm9vdE9mIHJvdCByb3RhdGUgcm90YXRpb25JbnRlcnBvbGF0aW9uIHJvdW5kQ29uc3RhbnRSYWRpdXMgcm93Q29sdW1uTGF5b3V0IHJvd0xheW91dCBydW5UaW1lQ29tbWFuZCBydW51cCBzYW1wbGVJbWFnZSBzYXZlQWxsU2hlbHZlcyBzYXZlQXR0clByZXNldCBzYXZlRmx1aWQgc2F2ZUltYWdlIHNhdmVJbml0aWFsU3RhdGUgc2F2ZU1lbnUgc2F2ZVByZWZPYmplY3RzIHNhdmVQcmVmcyBzYXZlU2hlbGYgc2F2ZVRvb2xTZXR0aW5ncyBzY2FsZSBzY2FsZUJydXNoQnJpZ2h0bmVzcyBzY2FsZUNvbXBvbmVudHMgc2NhbGVDb25zdHJhaW50IHNjYWxlS2V5IHNjYWxlS2V5Q3R4IHNjZW5lRWRpdG9yIHNjZW5lVUlSZXBsYWNlbWVudCBzY21oIHNjcmlwdEN0eCBzY3JpcHRFZGl0b3JJbmZvIHNjcmlwdEpvYiBzY3JpcHROb2RlIHNjcmlwdFRhYmxlIHNjcmlwdFRvU2hlbGYgc2NyaXB0ZWRQYW5lbCBzY3JpcHRlZFBhbmVsVHlwZSBzY3JvbGxGaWVsZCBzY3JvbGxMYXlvdXQgc2N1bHB0IHNlYXJjaFBhdGhBcnJheSBzZWVkIHNlbExvYWRTZXR0aW5ncyBzZWxlY3Qgc2VsZWN0Q29udGV4dCBzZWxlY3RDdXJ2ZUNWIHNlbGVjdEtleSBzZWxlY3RLZXlDdHggc2VsZWN0S2V5ZnJhbWVSZWdpb25DdHggc2VsZWN0TW9kZSBzZWxlY3RQcmVmIHNlbGVjdFByaW9yaXR5IHNlbGVjdFR5cGUgc2VsZWN0ZWROb2RlcyBzZWxlY3Rpb25Db25uZWN0aW9uIHNlcGFyYXRvciBzZXRBdHRyIHNldEF0dHJFbnVtUmVzb3VyY2Ugc2V0QXR0ck1hcHBpbmcgc2V0QXR0ck5pY2VOYW1lUmVzb3VyY2Ugc2V0Q29uc3RyYWludFJlc3RQb3NpdGlvbiBzZXREZWZhdWx0U2hhZGluZ0dyb3VwIHNldERyaXZlbktleWZyYW1lIHNldER5bmFtaWMgc2V0RWRpdEN0eCBzZXRFZGl0b3Igc2V0Rmx1aWRBdHRyIHNldEZvY3VzIHNldEluZmluaXR5IHNldElucHV0RGV2aWNlTWFwcGluZyBzZXRLZXlDdHggc2V0S2V5UGF0aCBzZXRLZXlmcmFtZSBzZXRLZXlmcmFtZUJsZW5kc2hhcGVUYXJnZXRXdHMgc2V0TWVudU1vZGUgc2V0Tm9kZU5pY2VOYW1lUmVzb3VyY2Ugc2V0Tm9kZVR5cGVGbGFnIHNldFBhcmVudCBzZXRQYXJ0aWNsZUF0dHIgc2V0UGZ4VG9Qb2x5Q2FtZXJhIHNldFBsdWdpblJlc291cmNlIHNldFByb2plY3Qgc2V0U3RhbXBEZW5zaXR5IHNldFN0YXJ0dXBNZXNzYWdlIHNldFN0YXRlIHNldFRvb2xUbyBzZXRVSVRlbXBsYXRlIHNldFhmb3JtTWFuaXAgc2V0cyBzaGFkaW5nQ29ubmVjdGlvbiBzaGFkaW5nR2VvbWV0cnlSZWxDdHggc2hhZGluZ0xpZ2h0UmVsQ3R4IHNoYWRpbmdOZXR3b3JrQ29tcGFyZSBzaGFkaW5nTm9kZSBzaGFwZUNvbXBhcmUgc2hlbGZCdXR0b24gc2hlbGZMYXlvdXQgc2hlbGZUYWJMYXlvdXQgc2hlbGxGaWVsZCBzaG9ydE5hbWVPZiBzaG93SGVscCBzaG93SGlkZGVuIHNob3dNYW5pcEN0eCBzaG93U2VsZWN0aW9uSW5UaXRsZSBzaG93U2hhZGluZ0dyb3VwQXR0ckVkaXRvciBzaG93V2luZG93IHNpZ24gc2ltcGxpZnkgc2luIHNpbmdsZVByb2ZpbGVCaXJhaWxTdXJmYWNlIHNpemUgc2l6ZUJ5dGVzIHNraW5DbHVzdGVyIHNraW5QZXJjZW50IHNtb290aEN1cnZlIHNtb290aFRhbmdlbnRTdXJmYWNlIHNtb290aHN0ZXAgc25hcDJ0bzIgc25hcEtleSBzbmFwTW9kZSBzbmFwVG9nZXRoZXJDdHggc25hcHNob3Qgc29mdCBzb2Z0TW9kIHNvZnRNb2RDdHggc29ydCBzb3VuZCBzb3VuZENvbnRyb2wgc291cmNlIHNwYWNlTG9jYXRvciBzcGhlcmUgc3BocmFuZCBzcG90TGlnaHQgc3BvdExpZ2h0UHJldmlld1BvcnQgc3ByZWFkU2hlZXRFZGl0b3Igc3ByaW5nIHNxcnQgc3F1YXJlU3VyZmFjZSBzcnRDb250ZXh0IHN0YWNrVHJhY2Ugc3RhcnRTdHJpbmcgc3RhcnRzV2l0aCBzdGl0Y2hBbmRFeHBsb2RlU2hlbGwgc3RpdGNoU3VyZmFjZSBzdGl0Y2hTdXJmYWNlUG9pbnRzIHN0cmNtcCBzdHJpbmdBcnJheUNhdGVuYXRlIHN0cmluZ0FycmF5Q29udGFpbnMgc3RyaW5nQXJyYXlDb3VudCBzdHJpbmdBcnJheUluc2VydEF0SW5kZXggc3RyaW5nQXJyYXlJbnRlcnNlY3RvciBzdHJpbmdBcnJheVJlbW92ZSBzdHJpbmdBcnJheVJlbW92ZUF0SW5kZXggc3RyaW5nQXJyYXlSZW1vdmVEdXBsaWNhdGVzIHN0cmluZ0FycmF5UmVtb3ZlRXhhY3Qgc3RyaW5nQXJyYXlUb1N0cmluZyBzdHJpbmdUb1N0cmluZ0FycmF5IHN0cmlwIHN0cmlwUHJlZml4RnJvbU5hbWUgc3Ryb2tlIHN1YmRBdXRvUHJvamVjdGlvbiBzdWJkQ2xlYW5Ub3BvbG9neSBzdWJkQ29sbGFwc2Ugc3ViZER1cGxpY2F0ZUFuZENvbm5lY3Qgc3ViZEVkaXRVViBzdWJkTGlzdENvbXBvbmVudENvbnZlcnNpb24gc3ViZE1hcEN1dCBzdWJkTWFwU2V3TW92ZSBzdWJkTWF0Y2hUb3BvbG9neSBzdWJkTWlycm9yIHN1YmRUb0JsaW5kIHN1YmRUb1BvbHkgc3ViZFRyYW5zZmVyVVZzVG9DYWNoZSBzdWJkaXYgc3ViZGl2Q3JlYXNlIHN1YmRpdkRpc3BsYXlTbW9vdGhuZXNzIHN1YnN0aXR1dGUgc3Vic3RpdHV0ZUFsbFN0cmluZyBzdWJzdGl0dXRlR2VvbWV0cnkgc3Vic3RyaW5nIHN1cmZhY2Ugc3VyZmFjZVNhbXBsZXIgc3VyZmFjZVNoYWRlckxpc3Qgc3dhdGNoRGlzcGxheVBvcnQgc3dpdGNoVGFibGUgc3ltYm9sQnV0dG9uIHN5bWJvbENoZWNrQm94IHN5c0ZpbGUgc3lzdGVtIHRhYkxheW91dCB0YW4gdGFuZ2VudENvbnN0cmFpbnQgdGV4TGF0dGljZURlZm9ybUNvbnRleHQgdGV4TWFuaXBDb250ZXh0IHRleE1vdmVDb250ZXh0IHRleE1vdmVVVlNoZWxsQ29udGV4dCB0ZXhSb3RhdGVDb250ZXh0IHRleFNjYWxlQ29udGV4dCB0ZXhTZWxlY3RDb250ZXh0IHRleFNlbGVjdFNob3J0ZXN0UGF0aEN0eCB0ZXhTbXVkZ2VVVkNvbnRleHQgdGV4V2luVG9vbEN0eCB0ZXh0IHRleHRDdXJ2ZXMgdGV4dEZpZWxkIHRleHRGaWVsZEJ1dHRvbkdycCB0ZXh0RmllbGRHcnAgdGV4dE1hbmlwIHRleHRTY3JvbGxMaXN0IHRleHRUb1NoZWxmIHRleHR1cmVEaXNwbGFjZVBsYW5lIHRleHR1cmVIYWlyQ29sb3IgdGV4dHVyZVBsYWNlbWVudENvbnRleHQgdGV4dHVyZVdpbmRvdyB0aHJlYWRDb3VudCB0aHJlZVBvaW50QXJjQ3R4IHRpbWVDb250cm9sIHRpbWVQb3J0IHRpbWVyWCB0b05hdGl2ZVBhdGggdG9nZ2xlIHRvZ2dsZUF4aXMgdG9nZ2xlV2luZG93VmlzaWJpbGl0eSB0b2tlbml6ZSB0b2tlbml6ZUxpc3QgdG9sZXJhbmNlIHRvbG93ZXIgdG9vbEJ1dHRvbiB0b29sQ29sbGVjdGlvbiB0b29sRHJvcHBlZCB0b29sSGFzT3B0aW9ucyB0b29sUHJvcGVydHlXaW5kb3cgdG9ydXMgdG91cHBlciB0cmFjZSB0cmFjayB0cmFja0N0eCB0cmFuc2ZlckF0dHJpYnV0ZXMgdHJhbnNmb3JtQ29tcGFyZSB0cmFuc2Zvcm1MaW1pdHMgdHJhbnNsYXRvciB0cmltIHRydW5jIHRydW5jYXRlRmx1aWRDYWNoZSB0cnVuY2F0ZUhhaXJDYWNoZSB0dW1ibGUgdHVtYmxlQ3R4IHR1cmJ1bGVuY2UgdHdvUG9pbnRBcmNDdHggdWlSZXMgdWlUZW1wbGF0ZSB1bmFzc2lnbklucHV0RGV2aWNlIHVuZG8gdW5kb0luZm8gdW5ncm91cCB1bmlmb3JtIHVuaXQgdW5sb2FkUGx1Z2luIHVudGFuZ2xlVVYgdW50aXRsZWRGaWxlTmFtZSB1bnRyaW0gdXBBeGlzIHVwZGF0ZUFFIHVzZXJDdHggdXZMaW5rIHV2U25hcHNob3QgdmFsaWRhdGVTaGVsZk5hbWUgdmVjdG9yaXplIHZpZXcyZFRvb2xDdHggdmlld0NhbWVyYSB2aWV3Q2xpcFBsYW5lIHZpZXdGaXQgdmlld0hlYWRPbiB2aWV3TG9va0F0IHZpZXdNYW5pcCB2aWV3UGxhY2Ugdmlld1NldCB2aXNvciB2b2x1bWVBeGlzIHZvcnRleCB3YWl0Q3Vyc29yIHdhcm5pbmcgd2ViQnJvd3NlciB3ZWJCcm93c2VyUHJlZnMgd2hhdElzIHdpbmRvdyB3aW5kb3dQcmVmIHdpcmUgd2lyZUNvbnRleHQgd29ya3NwYWNlIHdyaW5rbGUgd3JpbmtsZUNvbnRleHQgd3JpdGVUYWtlIHhibUxhbmdQYXRoTGlzdCB4Zm9ybSIsaToiPC8iLGM6W2UuQ05NLGUuQVNNLGUuUVNNLHtjTjoic3RyaW5nIixiOiJgIixlOiJgIixjOltlLkJFXX0se2NOOiJ2YXJpYWJsZSIsdjpbe2I6IlxcJFxcZCJ9LHtiOiJbXFwkXFwlXFxAXShcXF5cXHdcXGJ8I1xcdyt8W15cXHNcXHd7XXx7XFx3K318XFx3KykifSx7YjoiXFwqKFxcXlxcd1xcYnwjXFx3K3xbXlxcc1xcd3tdfHtcXHcrfXxcXHcrKSIscjowfV19LGUuQ0xDTSxlLkNCQ01dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgibWVyY3VyeSIsZnVuY3Rpb24oZSl7dmFyIHQ9e2tleXdvcmQ6Im1vZHVsZSB1c2VfbW9kdWxlIGltcG9ydF9tb2R1bGUgaW5jbHVkZV9tb2R1bGUgZW5kX21vZHVsZSBpbml0aWFsaXNlIG11dGFibGUgaW5pdGlhbGl6ZSBmaW5hbGl6ZSBmaW5hbGlzZSBpbnRlcmZhY2UgaW1wbGVtZW50YXRpb24gcHJlZCBtb2RlIGZ1bmMgdHlwZSBpbnN0IHNvbHZlciBhbnlfcHJlZCBhbnlfZnVuYyBpcyBzZW1pZGV0IGRldCBub25kZXQgbXVsdGkgZXJyb25lb3VzIGZhaWx1cmUgY2Nfbm9uZGV0IGNjX211bHRpIHR5cGVjbGFzcyBpbnN0YW5jZSB3aGVyZSBwcmFnbWEgcHJvbWlzZSBleHRlcm5hbCB0cmFjZSBhdG9taWMgb3JfZWxzZSByZXF1aXJlX2NvbXBsZXRlX3N3aXRjaCByZXF1aXJlX2RldCByZXF1aXJlX3NlbWlkZXQgcmVxdWlyZV9tdWx0aSByZXF1aXJlX25vbmRldCByZXF1aXJlX2NjX211bHRpIHJlcXVpcmVfY2Nfbm9uZGV0IHJlcXVpcmVfZXJyb25lb3VzIHJlcXVpcmVfZmFpbHVyZSIscHJhZ21hOiJpbmxpbmUgbm9faW5saW5lIHR5cGVfc3BlYyBzb3VyY2VfZmlsZSBmYWN0X3RhYmxlIG9ic29sZXRlIG1lbW8gbG9vcF9jaGVjayBtaW5pbWFsX21vZGVsIHRlcm1pbmF0ZXMgZG9lc19ub3RfdGVybWluYXRlIGNoZWNrX3Rlcm1pbmF0aW9uIHByb21pc2VfZXF1aXZhbGVudF9jbGF1c2VzIixwcmVwcm9jZXNzb3I6ImZvcmVpZ25fcHJvYyBmb3JlaWduX2RlY2wgZm9yZWlnbl9jb2RlIGZvcmVpZ25fdHlwZSBmb3JlaWduX2ltcG9ydF9tb2R1bGUgZm9yZWlnbl9leHBvcnRfZW51bSBmb3JlaWduX2V4cG9ydCBmb3JlaWduX2VudW0gbWF5X2NhbGxfbWVyY3VyeSB3aWxsX25vdF9jYWxsX21lcmN1cnkgdGhyZWFkX3NhZmUgbm90X3RocmVhZF9zYWZlIG1heWJlX3RocmVhZF9zYWZlIHByb21pc2VfcHVyZSBwcm9taXNlX3NlbWlwdXJlIHRhYmxlZF9mb3JfaW8gbG9jYWwgdW50cmFpbGVkIHRyYWlsZWQgYXR0YWNoX3RvX2lvX3N0YXRlIGNhbl9wYXNzX2FzX21lcmN1cnlfdHlwZSBzdGFibGUgd2lsbF9ub3RfdGhyb3dfZXhjZXB0aW9uIG1heV9tb2RpZnlfdHJhaWwgd2lsbF9ub3RfbW9kaWZ5X3RyYWlsIG1heV9kdXBsaWNhdGUgbWF5X25vdF9kdXBsaWNhdGUgYWZmZWN0c19saXZlbmVzcyBkb2VzX25vdF9hZmZlY3RfbGl2ZW5lc3MgZG9lc250X2FmZmVjdF9saXZlbmVzcyBub19zaGFyaW5nIHVua25vd25fc2hhcmluZyBzaGFyaW5nIixidWlsdF9pbjoic29tZSBhbGwgbm90IGlmIHRoZW4gZWxzZSB0cnVlIGZhaWwgZmFsc2UgdHJ5IGNhdGNoIGNhdGNoX2FueSBzZW1pZGV0X3RydWUgc2VtaWRldF9mYWxzZSBzZW1pZGV0X2ZhaWwgaW1wdXJlX3RydWUgaW1wdXJlIHNlbWlwdXJlIn0scj17Y046ImxhYmVsIixiOiJYWFgiLGU6IiQiLGVXOiEwLHI6MH0sYT1lLmluaGVyaXQoZS5DTENNLHtiOiIlIn0pLGk9ZS5pbmhlcml0KGUuQ0JDTSx7cjowfSk7YS5jLnB1c2gociksaS5jLnB1c2gocik7dmFyIG49e2NOOiJudW1iZXIiLGI6IjAnLlxcfDBbYm94XVswLTlhLWZBLUZdKiJ9LG89ZS5pbmhlcml0KGUuQVNNLHtyOjB9KSxzPWUuaW5oZXJpdChlLlFTTSx7cjowfSksbD17Y046ImNvbnN0YW50IixiOiJcXFxcW2FiZm5ydHZdXFx8XFxcXHhbMC05YS1mQS1GXSpcXFxcXFx8JVstKyMgKi4wLTldKltkaW94WHVjc2ZlRWdHcF0iLHI6MH07cy5jLnB1c2gobCk7dmFyIGM9e2NOOiJidWlsdF9pbiIsdjpbe2I6Ijw9PiJ9LHtiOiI8PSIscjowfSx7YjoiPT4iLHI6MH0se2I6Ii9cXFxcIn0se2I6IlxcXFwvIn1dfSxwPXtjTjoiYnVpbHRfaW4iLHY6W3tiOiI6LVxcfC0tPiJ9LHtiOiI9IixyOjB9XX07cmV0dXJue2FsaWFzZXM6WyJtIiwibW9vIl0sazp0LGM6W2MscCxhLGksbixlLk5NLG8scyx7YjovOi0vfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJtaXphciIsZnVuY3Rpb24oKXtyZXR1cm57azoiZW52aXJvbiB2b2NhYnVsYXJpZXMgbm90YXRpb25zIGNvbnN0cnVjdG9ycyBkZWZpbml0aW9ucyByZWdpc3RyYXRpb25zIHRoZW9yZW1zIHNjaGVtZXMgcmVxdWlyZW1lbnRzIGJlZ2luIGVuZCBkZWZpbml0aW9uIHJlZ2lzdHJhdGlvbiBjbHVzdGVyIGV4aXN0ZW5jZSBwcmVkIGZ1bmMgZGVmcHJlZCBkZWZmdW5jIHRoZW9yZW0gcHJvb2YgbGV0IHRha2UgYXNzdW1lIHRoZW4gdGh1cyBoZW5jZSBleCBmb3Igc3QgaG9sZHMgY29uc2lkZXIgcmVjb25zaWRlciBzdWNoIHRoYXQgYW5kIGluIHByb3ZpZGVkIG9mIGFzIGZyb20gYmUgYmVpbmcgYnkgbWVhbnMgZXF1YWxzIGltcGxpZXMgaWZmIHJlZGVmaW5lIGRlZmluZSBub3cgbm90IG9yIGF0dHIgaXMgbW9kZSBzdXBwb3NlIHBlciBjYXNlcyBzZXQgdGhlc2lzIGNvbnRyYWRpY3Rpb24gc2NoZW1lIHJlc2VydmUgc3RydWN0IGNvcnJlY3RuZXNzIGNvbXBhdGliaWxpdHkgY29oZXJlbmNlIHN5bW1ldHJ5IGFzc3ltZXRyeSByZWZsZXhpdml0eSBpcnJlZmxleGl2aXR5IGNvbm5lY3RlZG5lc3MgdW5pcXVlbmVzcyBjb21tdXRhdGl2aXR5IGlkZW1wb3RlbmNlIGludm9sdXRpdmVuZXNzIHByb2plY3Rpdml0eSIsYzpbe2NOOiJjb21tZW50IixiOiI6OiIsZToiJCJ9XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoIm1vbmtleSIsZnVuY3Rpb24oZSl7dmFyIHQ9e2NOOiJudW1iZXIiLHI6MCx2Olt7YjoiWyRdW2EtZkEtRjAtOV0rIn0sZS5OTV19O3JldHVybntjSTohMCxrOntrZXl3b3JkOiJwdWJsaWMgcHJpdmF0ZSBwcm9wZXJ0eSBjb250aW51ZSBleGl0IGV4dGVybiBuZXcgdHJ5IGNhdGNoIGVhY2hpbiBub3QgYWJzdHJhY3QgZmluYWwgc2VsZWN0IGNhc2UgZGVmYXVsdCBjb25zdCBsb2NhbCBnbG9iYWwgZmllbGQgZW5kIGlmIHRoZW4gZWxzZSBlbHNlaWYgZW5kaWYgd2hpbGUgd2VuZCByZXBlYXQgdW50aWwgZm9yZXZlciBmb3IgdG8gc3RlcCBuZXh0IHJldHVybiBtb2R1bGUgaW5saW5lIHRocm93IixidWlsdF9pbjoiRGVidWdMb2cgRGVidWdTdG9wIEVycm9yIFByaW50IEFDb3MgQUNvc3IgQVNpbiBBU2luciBBVGFuIEFUYW4yIEFUYW4yciBBVGFuciBBYnMgQWJzIENlaWwgQ2xhbXAgQ2xhbXAgQ29zIENvc3IgRXhwIEZsb29yIExvZyBNYXggTWF4IE1pbiBNaW4gUG93IFNnbiBTZ24gU2luIFNpbnIgU3FydCBUYW4gVGFuciBTZWVkIFBJIEhBTEZQSSBUV09QSSIsbGl0ZXJhbDoidHJ1ZSBmYWxzZSBudWxsIGFuZCBvciBzaGwgc2hyIG1vZCJ9LGM6W3tjTjoiY29tbWVudCIsYjoiI3JlbSIsZToiI2VuZCJ9LHtjTjoiY29tbWVudCIsYjoiJyIsZToiJCIscjowfSx7Y046ImZ1bmN0aW9uIixiSzoiZnVuY3Rpb24gbWV0aG9kIixlOiJbKD06XXwkIixpOi9cbi8sYzpbZS5VVE1dfSx7Y046ImNsYXNzIixiSzoiY2xhc3MgaW50ZXJmYWNlIixlOiIkIixjOlt7Yks6ImV4dGVuZHMgaW1wbGVtZW50cyJ9LGUuVVRNXX0se2NOOiJ2YXJpYWJsZSIsYjoiXFxiKHNlbGZ8c3VwZXIpXFxiIn0se2NOOiJwcmVwcm9jZXNzb3IiLGJLOiJpbXBvcnQiLGU6IiQifSx7Y046InByZXByb2Nlc3NvciIsYjoiXFxzKiMiLGU6IiQiLGs6ImlmIGVsc2UgZWxzZWlmIGVuZGlmIGVuZCB0aGVuIn0se2NOOiJwaSIsYjoiXlxccypzdHJpY3RcXGIifSx7Yks6ImFsaWFzIixlOiI9IixjOltlLlVUTV19LGUuUVNNLHRdfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgibmdpbngiLGZ1bmN0aW9uKGUpe3ZhciB0PXtjTjoidmFyaWFibGUiLHY6W3tiOi9cJFxkKy99LHtiOi9cJFx7LyxlOi99L30se2I6IltcXCRcXEBdIitlLlVJUn1dfSxyPXtlVzohMCxsOiJbYS16L19dKyIsazp7YnVpbHRfaW46Im9uIG9mZiB5ZXMgbm8gdHJ1ZSBmYWxzZSBub25lIGJsb2NrZWQgZGVidWcgaW5mbyBub3RpY2Ugd2FybiBlcnJvciBjcml0IHNlbGVjdCBicmVhayBsYXN0IHBlcm1hbmVudCByZWRpcmVjdCBrcXVldWUgcnRzaWcgZXBvbGwgcG9sbCAvZGV2L3BvbGwifSxyOjAsaToiPT4iLGM6W2UuSENNLHtjTjoic3RyaW5nIixjOltlLkJFLHRdLHY6W3tiOi8iLyxlOi8iL30se2I6LycvLGU6LycvfV19LHtjTjoidXJsIixiOiIoW2Etel0rKTovIixlOiJcXHMiLGVXOiEwLGVFOiEwLGM6W3RdfSx7Y046InJlZ2V4cCIsYzpbZS5CRSx0XSx2Olt7YjoiXFxzXFxeIixlOiJcXHN8e3w7IixyRTohMH0se2I6In5cXCo/XFxzKyIsZToiXFxzfHt8OyIsckU6ITB9LHtiOiJcXCooXFwuW2EtelxcLV0rKSsifSx7YjoiKFthLXpcXC1dK1xcLikrXFwqIn1dfSx7Y046Im51bWJlciIsYjoiXFxiXFxkezEsM31cXC5cXGR7MSwzfVxcLlxcZHsxLDN9XFwuXFxkezEsM30oOlxcZHsxLDV9KT9cXGIifSx7Y046Im51bWJlciIsYjoiXFxiXFxkK1trS21NZ0dkc2hkd3ldKlxcYiIscjowfSx0XX07cmV0dXJue2FsaWFzZXM6WyJuZ2lueGNvbmYiXSxjOltlLkhDTSx7YjplLlVJUisiXFxzIixlOiI7fHsiLHJCOiEwLGM6W3tjTjoidGl0bGUiLGI6ZS5VSVIsc3RhcnRzOnJ9XSxyOjB9XSxpOiJbXlxcc1xcfV0ifX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgibmltcm9kIixmdW5jdGlvbihlKXtyZXR1cm57azp7a2V5d29yZDoiYWRkciBhbmQgYXMgYXNtIGJpbmQgYmxvY2sgYnJlYWt8MCBjYXNlfDAgY2FzdCBjb25zdHwwIGNvbnRpbnVlfDAgY29udmVydGVyIGRpc2NhcmQgZGlzdGluY3R8MTAgZGl2IGRvIGVsaWYgZWxzZXwwIGVuZHwwIGVudW18MCBleGNlcHQgZXhwb3J0IGZpbmFsbHkgZm9yIGZyb20gZ2VuZXJpYyBpZnwwIGltcG9ydHwwIGluIGluY2x1ZGV8MCBpbnRlcmZhY2UgaXMgaXNub3R8MTAgaXRlcmF0b3J8MTAgbGV0fDAgbWFjcm8gbWV0aG9kfDEwIG1peGluIG1vZCBuaWwgbm90IG5vdGlufDEwIG9iamVjdHwwIG9mIG9yIG91dCBwcm9jfDEwIHB0ciByYWlzZSByZWZ8MTAgcmV0dXJuIHNobCBzaHIgc3RhdGljIHRlbXBsYXRlfDEwIHRyeXwwIHR1cGxlIHR5cGV8MCB1c2luZ3wwIHZhcnwwIHdoZW4gd2hpbGV8MCB3aXRoIHdpdGhvdXQgeG9yIHlpZWxkIixsaXRlcmFsOiJzaGFyZWQgZ3VhcmRlZCBzdGRpbiBzdGRvdXQgc3RkZXJyIHJlc3VsdHwxMCB0cnVlIGZhbHNlIn0sYzpbe2NOOiJkZWNvcmF0b3IiLGI6L3tcLi8sZTovXC59LyxyOjEwfSx7Y046InN0cmluZyIsYjovW2EtekEtWl1cdyoiLyxlOi8iLyxjOlt7YjovIiIvfV19LHtjTjoic3RyaW5nIixiOi8oW2EtekEtWl1cdyopPyIiIi8sZTovIiIiL30se2NOOiJzdHJpbmciLGI6LyIvLGU6LyIvLGk6L1xuLyxjOlt7YjovXFwuL31dfSx7Y046InR5cGUiLGI6L1xiW0EtWl1cdytcYi8scjowfSx7Y046InR5cGUiLGI6L1xiKGludHxpbnQ4fGludDE2fGludDMyfGludDY0fHVpbnR8dWludDh8dWludDE2fHVpbnQzMnx1aW50NjR8ZmxvYXR8ZmxvYXQzMnxmbG9hdDY0fGJvb2x8Y2hhcnxzdHJpbmd8Y3N0cmluZ3xwb2ludGVyfGV4cHJ8c3RtdHx2b2lkfGF1dG98YW55fHJhbmdlfGFycmF5fG9wZW5hcnJheXx2YXJhcmdzfHNlcXxzZXR8Y2xvbmd8Y3Vsb25nfGNjaGFyfGNzY2hhcnxjc2hvcnR8Y2ludHxjc2l6ZXxjbG9uZ2xvbmd8Y2Zsb2F0fGNkb3VibGV8Y2xvbmdkb3VibGV8Y3VjaGFyfGN1c2hvcnR8Y3VpbnR8Y3Vsb25nbG9uZ3xjc3RyaW5nYXJyYXl8c2VtaXN0YXRpYylcYi99LHtjTjoibnVtYmVyIixiOi9cYigwW3hYXVswLTlhLWZBLUZdW18wLTlhLWZBLUZdKikoJz9baUl1VV0oOHwxNnwzMnw2NCkpPy8scjowfSx7Y046Im51bWJlciIsYjovXGIoMG9bMC03XVtfMC03XSopKCc/W2lJdVVmRl0oOHwxNnwzMnw2NCkpPy8scjowfSx7Y046Im51bWJlciIsYjovXGIoMChifEIpWzAxXVtfMDFdKikoJz9baUl1VWZGXSg4fDE2fDMyfDY0KSk/LyxyOjB9LHtjTjoibnVtYmVyIixiOi9cYihcZFtfXGRdKikoJz9baUl1VWZGXSg4fDE2fDMyfDY0KSk/LyxyOjB9LGUuSENNXX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoIm5peCIsZnVuY3Rpb24oZSl7dmFyIHQ9e2tleXdvcmQ6InJlYyB3aXRoIGxldCBpbiBpbmhlcml0IGFzc2VydCBpZiBlbHNlIHRoZW4iLGNvbnN0YW50OiJ0cnVlIGZhbHNlIG9yIGFuZCBudWxsIixidWlsdF9pbjoiaW1wb3J0IGFib3J0IGJhc2VOYW1lT2YgZGlyT2YgaXNOdWxsIGJ1aWx0aW5zIG1hcCByZW1vdmVBdHRycyB0aHJvdyB0b1N0cmluZyBkZXJpdmF0aW9uIn0scj17Y046InN1YnN0IixiOi9cJFx7LyxlOi9cfS8sazp0fSxhPXtjTjoidmFyaWFibGUiLGI6L1thLXpBLVowLTktX10rKFxzKj0pL30saT17Y046InN0cmluZyIsYjoiJyciLGU6IicnIixjOltyXX0sbj17Y046InN0cmluZyIsYjonIicsZTonIicsYzpbcl19LG89W2UuTk0sZS5IQ00sZS5DQkNNLGksbixhXTtyZXR1cm4gci5jPW8se2FsaWFzZXM6WyJuaXhvcyJdLGs6dCxjOm99fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJuc2lzIixmdW5jdGlvbihlKXt2YXIgdD17Y046InN5bWJvbCIsYjoiXFwkKEFETUlOVE9PTFN8QVBQREFUQXxDREJVUk5fQVJFQXxDTURMSU5FfENPTU1PTkZJTEVTMzJ8Q09NTU9ORklMRVM2NHxDT01NT05GSUxFU3xDT09LSUVTfERFU0tUT1B8RE9DVU1FTlRTfEVYRURJUnxFWEVGSUxFfEVYRVBBVEh8RkFWT1JJVEVTfEZPTlRTfEhJU1RPUll8SFdORFBBUkVOVHxJTlNURElSfElOVEVSTkVUX0NBQ0hFfExBTkdVQUdFfExPQ0FMQVBQREFUQXxNVVNJQ3xORVRIT09EfE9VVERJUnxQSUNUVVJFU3xQTFVHSU5TRElSfFBSSU5USE9PRHxQUk9GSUxFfFBST0dSQU1GSUxFUzMyfFBST0dSQU1GSUxFUzY0fFBST0dSQU1GSUxFU3xRVUlDS0xBVU5DSHxSRUNFTlR8UkVTT1VSQ0VTX0xPQ0FMSVpFRHxSRVNPVVJDRVN8U0VORFRPfFNNUFJPR1JBTVN8U01TVEFSVFVQfFNUQVJUTUVOVXxTWVNESVJ8VEVNUHxURU1QTEFURVN8VklERU9TfFdJTkRJUikifSxyPXtjTjoiY29uc3RhbnQiLGI6IlxcJCt7W2EtekEtWjAtOV9dK30ifSxhPXtjTjoidmFyaWFibGUiLGI6IlxcJCtbYS16QS1aMC05X10rIixpOiJcXChcXCl7fSJ9LGk9e2NOOiJjb25zdGFudCIsYjoiXFwkK1xcKFthLXpBLVowLTlfXStcXCkifSxuPXtjTjoicGFyYW1zIixiOiIoQVJDSElWRXxGSUxFX0FUVFJJQlVURV9BUkNISVZFfEZJTEVfQVRUUklCVVRFX05PUk1BTHxGSUxFX0FUVFJJQlVURV9PRkZMSU5FfEZJTEVfQVRUUklCVVRFX1JFQURPTkxZfEZJTEVfQVRUUklCVVRFX1NZU1RFTXxGSUxFX0FUVFJJQlVURV9URU1QT1JBUll8SEtDUnxIS0NVfEhLRER8SEtFWV9DTEFTU0VTX1JPT1R8SEtFWV9DVVJSRU5UX0NPTkZJR3xIS0VZX0NVUlJFTlRfVVNFUnxIS0VZX0RZTl9EQVRBfEhLRVlfTE9DQUxfTUFDSElORXxIS0VZX1BFUkZPUk1BTkNFX0RBVEF8SEtFWV9VU0VSU3xIS0xNfEhLUER8SEtVfElEQUJPUlR8SURDQU5DRUx8SURJR05PUkV8SUROT3xJRE9LfElEUkVUUll8SURZRVN8TUJfQUJPUlRSRVRSWUlHTk9SRXxNQl9ERUZCVVRUT04xfE1CX0RFRkJVVFRPTjJ8TUJfREVGQlVUVE9OM3xNQl9ERUZCVVRUT040fE1CX0lDT05FWENMQU1BVElPTnxNQl9JQ09OSU5GT1JNQVRJT058TUJfSUNPTlFVRVNUSU9OfE1CX0lDT05TVE9QfE1CX09LfE1CX09LQ0FOQ0VMfE1CX1JFVFJZQ0FOQ0VMfE1CX1JJR0hUfE1CX1JUTFJFQURJTkd8TUJfU0VURk9SRUdST1VORHxNQl9UT1BNT1NUfE1CX1VTRVJJQ09OfE1CX1lFU05PfE5PUk1BTHxPRkZMSU5FfFJFQURPTkxZfFNIQ1RYfFNIRUxMX0NPTlRFWFR8U1lTVEVNfFRFTVBPUkFSWSkifSxvPXtjTjoiY29uc3RhbnQiLGI6IlxcIShhZGRpbmNsdWRlZGlyfGFkZHBsdWdpbmRpcnxhcHBlbmRmaWxlfGNkfGRlZmluZXxkZWxmaWxlfGVjaG98ZWxzZXxlbmRpZnxlcnJvcnxleGVjdXRlfGZpbmFsaXplfGdldGRsbHZlcnNpb25zeXN0ZW18aWZkZWZ8aWZtYWNyb2RlZnxpZm1hY3JvbmRlZnxpZm5kZWZ8aWZ8aW5jbHVkZXxpbnNlcnRtYWNyb3xtYWNyb2VuZHxtYWNyb3xtYWtlbnNpc3xwYWNraGRyfHNlYXJjaHBhcnNlfHNlYXJjaHJlcGxhY2V8dGVtcGZpbGV8dW5kZWZ8dmVyYm9zZXx3YXJuaW5nKSJ9O3JldHVybntjSTohMSxrOntrZXl3b3JkOiJBYm9ydCBBZGRCcmFuZGluZ0ltYWdlIEFkZFNpemUgQWxsb3dSb290RGlySW5zdGFsbCBBbGxvd1NraXBGaWxlcyBBdXRvQ2xvc2VXaW5kb3cgQkdGb250IEJHR3JhZGllbnQgQnJhbmRpbmdUZXh0IEJyaW5nVG9Gcm9udCBDYWxsIENhbGxJbnN0RExMIENhcHRpb24gQ2hhbmdlVUkgQ2hlY2tCaXRtYXAgQ2xlYXJFcnJvcnMgQ29tcGxldGVkVGV4dCBDb21wb25lbnRUZXh0IENvcHlGaWxlcyBDUkNDaGVjayBDcmVhdGVEaXJlY3RvcnkgQ3JlYXRlRm9udCBDcmVhdGVTaG9ydEN1dCBEZWxldGUgRGVsZXRlSU5JU2VjIERlbGV0ZUlOSVN0ciBEZWxldGVSZWdLZXkgRGVsZXRlUmVnVmFsdWUgRGV0YWlsUHJpbnQgRGV0YWlsc0J1dHRvblRleHQgRGlyVGV4dCBEaXJWYXIgRGlyVmVyaWZ5IEVuYWJsZVdpbmRvdyBFbnVtUmVnS2V5IEVudW1SZWdWYWx1ZSBFeGNoIEV4ZWMgRXhlY1NoZWxsIEV4ZWNXYWl0IEV4cGFuZEVudlN0cmluZ3MgRmlsZSBGaWxlQnVmU2l6ZSBGaWxlQ2xvc2UgRmlsZUVycm9yVGV4dCBGaWxlT3BlbiBGaWxlUmVhZCBGaWxlUmVhZEJ5dGUgRmlsZVJlYWRVVEYxNkxFIEZpbGVSZWFkV29yZCBGaWxlU2VlayBGaWxlV3JpdGUgRmlsZVdyaXRlQnl0ZSBGaWxlV3JpdGVVVEYxNkxFIEZpbGVXcml0ZVdvcmQgRmluZENsb3NlIEZpbmRGaXJzdCBGaW5kTmV4dCBGaW5kV2luZG93IEZsdXNoSU5JIEZ1bmN0aW9uRW5kIEdldEN1ckluc3RUeXBlIEdldEN1cnJlbnRBZGRyZXNzIEdldERsZ0l0ZW0gR2V0RExMVmVyc2lvbiBHZXRETExWZXJzaW9uTG9jYWwgR2V0RXJyb3JMZXZlbCBHZXRGaWxlVGltZSBHZXRGaWxlVGltZUxvY2FsIEdldEZ1bGxQYXRoTmFtZSBHZXRGdW5jdGlvbkFkZHJlc3MgR2V0SW5zdERpckVycm9yIEdldExhYmVsQWRkcmVzcyBHZXRUZW1wRmlsZU5hbWUgR290byBIaWRlV2luZG93IEljb24gSWZBYm9ydCBJZkVycm9ycyBJZkZpbGVFeGlzdHMgSWZSZWJvb3RGbGFnIElmU2lsZW50IEluaXRQbHVnaW5zRGlyIEluc3RhbGxCdXR0b25UZXh0IEluc3RhbGxDb2xvcnMgSW5zdGFsbERpciBJbnN0YWxsRGlyUmVnS2V5IEluc3RQcm9ncmVzc0ZsYWdzIEluc3RUeXBlIEluc3RUeXBlR2V0VGV4dCBJbnN0VHlwZVNldFRleHQgSW50Q21wIEludENtcFUgSW50Rm10IEludE9wIElzV2luZG93IExhbmdTdHJpbmcgTGljZW5zZUJrQ29sb3IgTGljZW5zZURhdGEgTGljZW5zZUZvcmNlU2VsZWN0aW9uIExpY2Vuc2VMYW5nU3RyaW5nIExpY2Vuc2VUZXh0IExvYWRMYW5ndWFnZUZpbGUgTG9ja1dpbmRvdyBMb2dTZXQgTG9nVGV4dCBNYW5pZmVzdERQSUF3YXJlIE1hbmlmZXN0U3VwcG9ydGVkT1MgTWVzc2FnZUJveCBNaXNjQnV0dG9uVGV4dCBOYW1lIE5vcCBPdXRGaWxlIFBhZ2UgUGFnZUNhbGxiYWNrcyBQYWdlRXhFbmQgUG9wIFB1c2ggUXVpdCBSZWFkRW52U3RyIFJlYWRJTklTdHIgUmVhZFJlZ0RXT1JEIFJlYWRSZWdTdHIgUmVib290IFJlZ0RMTCBSZW5hbWUgUmVxdWVzdEV4ZWN1dGlvbkxldmVsIFJlc2VydmVGaWxlIFJldHVybiBSTURpciBTZWFyY2hQYXRoIFNlY3Rpb25FbmQgU2VjdGlvbkdldEZsYWdzIFNlY3Rpb25HZXRJbnN0VHlwZXMgU2VjdGlvbkdldFNpemUgU2VjdGlvbkdldFRleHQgU2VjdGlvbkdyb3VwRW5kIFNlY3Rpb25JbiBTZWN0aW9uU2V0RmxhZ3MgU2VjdGlvblNldEluc3RUeXBlcyBTZWN0aW9uU2V0U2l6ZSBTZWN0aW9uU2V0VGV4dCBTZW5kTWVzc2FnZSBTZXRBdXRvQ2xvc2UgU2V0QnJhbmRpbmdJbWFnZSBTZXRDb21wcmVzcyBTZXRDb21wcmVzc29yIFNldENvbXByZXNzb3JEaWN0U2l6ZSBTZXRDdGxDb2xvcnMgU2V0Q3VySW5zdFR5cGUgU2V0RGF0YWJsb2NrT3B0aW1pemUgU2V0RGF0ZVNhdmUgU2V0RGV0YWlsc1ByaW50IFNldERldGFpbHNWaWV3IFNldEVycm9yTGV2ZWwgU2V0RXJyb3JzIFNldEZpbGVBdHRyaWJ1dGVzIFNldEZvbnQgU2V0T3V0UGF0aCBTZXRPdmVyd3JpdGUgU2V0UGx1Z2luVW5sb2FkIFNldFJlYm9vdEZsYWcgU2V0UmVnVmlldyBTZXRTaGVsbFZhckNvbnRleHQgU2V0U2lsZW50IFNob3dJbnN0RGV0YWlscyBTaG93VW5pbnN0RGV0YWlscyBTaG93V2luZG93IFNpbGVudEluc3RhbGwgU2lsZW50VW5JbnN0YWxsIFNsZWVwIFNwYWNlVGV4dHMgU3RyQ21wIFN0ckNtcFMgU3RyQ3B5IFN0ckxlbiBTdWJDYXB0aW9uIFN1YlNlY3Rpb25FbmQgVW5pY29kZSBVbmluc3RhbGxCdXR0b25UZXh0IFVuaW5zdGFsbENhcHRpb24gVW5pbnN0YWxsSWNvbiBVbmluc3RhbGxTdWJDYXB0aW9uIFVuaW5zdGFsbFRleHQgVW5pbnN0UGFnZSBVblJlZ0RMTCBWYXIgVklBZGRWZXJzaW9uS2V5IFZJRmlsZVZlcnNpb24gVklQcm9kdWN0VmVyc2lvbiBXaW5kb3dJY29uIFdyaXRlSU5JU3RyIFdyaXRlUmVnQmluIFdyaXRlUmVnRFdPUkQgV3JpdGVSZWdFeHBhbmRTdHIgV3JpdGVSZWdTdHIgV3JpdGVVbmluc3RhbGxlciBYUFN0eWxlIixsaXRlcmFsOiJhZG1pbiBhbGwgYXV0byBib3RoIGNvbG9yZWQgY3VycmVudCBmYWxzZSBmb3JjZSBoaWRlIGhpZ2hlc3QgbGFzdHVzZWQgbGVhdmUgbGlzdG9ubHkgbm9uZSBub3JtYWwgbm90c2V0IG9mZiBvbiBvcGVuIHByaW50IHNob3cgc2lsZW50IHNpbGVudGxvZyBzbW9vdGggdGV4dG9ubHkgdHJ1ZSB1c2VyICJ9LGM6W2UuSENNLGUuQ0JDTSx7Y046InN0cmluZyIsYjonIicsZTonIicsaToiXFxuIixjOlt7Y046InN5bWJvbCIsYjoiXFwkKFxcXFwobnxyfHQpfFxcJCkifSx0LHIsYSxpXX0se2NOOiJjb21tZW50IixiOiI7IixlOiIkIixyOjB9LHtjTjoiZnVuY3Rpb24iLGJLOiJGdW5jdGlvbiBQYWdlRXggU2VjdGlvbiBTZWN0aW9uR3JvdXAgU3ViU2VjdGlvbiIsZToiJCJ9LG8scixhLGksbixlLk5NLHtjTjoibGl0ZXJhbCIsYjplLklSKyI6OiIrZS5JUn1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgib2JqZWN0aXZlYyIsZnVuY3Rpb24oZSl7dmFyIHQ9e2tleXdvcmQ6ImludCBmbG9hdCB3aGlsZSBjaGFyIGV4cG9ydCBzaXplb2YgdHlwZWRlZiBjb25zdCBzdHJ1Y3QgZm9yIHVuaW9uIHVuc2lnbmVkIGxvbmcgdm9sYXRpbGUgc3RhdGljIGJvb2wgbXV0YWJsZSBpZiBkbyByZXR1cm4gZ290byB2b2lkIGVudW0gZWxzZSBicmVhayBleHRlcm4gYXNtIGNhc2Ugc2hvcnQgZGVmYXVsdCBkb3VibGUgcmVnaXN0ZXIgZXhwbGljaXQgc2lnbmVkIHR5cGVuYW1lIHRoaXMgc3dpdGNoIGNvbnRpbnVlIHdjaGFyX3QgaW5saW5lIHJlYWRvbmx5IGFzc2lnbiByZWFkd3JpdGUgc2VsZiBAc3luY2hyb25pemVkIGlkIHR5cGVvZiBub25hdG9taWMgc3VwZXIgdW5pY2hhciBJQk91dGxldCBJQkFjdGlvbiBzdHJvbmcgd2VhayBjb3B5IGluIG91dCBpbm91dCBieWNvcHkgYnlyZWYgb25ld2F5IF9fc3Ryb25nIF9fd2VhayBfX2Jsb2NrIF9fYXV0b3JlbGVhc2luZyBAcHJpdmF0ZSBAcHJvdGVjdGVkIEBwdWJsaWMgQHRyeSBAcHJvcGVydHkgQGVuZCBAdGhyb3cgQGNhdGNoIEBmaW5hbGx5IEBhdXRvcmVsZWFzZXBvb2wgQHN5bnRoZXNpemUgQGR5bmFtaWMgQHNlbGVjdG9yIEBvcHRpb25hbCBAcmVxdWlyZWQiLGxpdGVyYWw6ImZhbHNlIHRydWUgRkFMU0UgVFJVRSBuaWwgWUVTIE5PIE5VTEwiLGJ1aWx0X2luOiJOU1N0cmluZyBOU0RhdGEgTlNEaWN0aW9uYXJ5IENHUmVjdCBDR1BvaW50IFVJQnV0dG9uIFVJTGFiZWwgVUlUZXh0VmlldyBVSVdlYlZpZXcgTUtNYXBWaWV3IE5TVmlldyBOU1ZpZXdDb250cm9sbGVyIE5TV2luZG93IE5TV2luZG93Q29udHJvbGxlciBOU1NldCBOU1VVSUQgTlNJbmRleFNldCBVSVNlZ21lbnRlZENvbnRyb2wgTlNPYmplY3QgVUlUYWJsZVZpZXdEZWxlZ2F0ZSBVSVRhYmxlVmlld0RhdGFTb3VyY2UgTlNUaHJlYWQgVUlBY3Rpdml0eUluZGljYXRvciBVSVRhYmJhciBVSVRvb2xCYXIgVUlCYXJCdXR0b25JdGVtIFVJSW1hZ2VWaWV3IE5TQXV0b3JlbGVhc2VQb29sIFVJVGFibGVWaWV3IEJPT0wgTlNJbnRlZ2VyIENHRmxvYXQgTlNFeGNlcHRpb24gTlNMb2cgTlNNdXRhYmxlU3RyaW5nIE5TTXV0YWJsZUFycmF5IE5TTXV0YWJsZURpY3Rpb25hcnkgTlNVUkwgTlNJbmRleFBhdGggQ0dTaXplIFVJVGFibGVWaWV3Q2VsbCBVSVZpZXcgVUlWaWV3Q29udHJvbGxlciBVSU5hdmlnYXRpb25CYXIgVUlOYXZpZ2F0aW9uQ29udHJvbGxlciBVSVRhYkJhckNvbnRyb2xsZXIgVUlQb3BvdmVyQ29udHJvbGxlciBVSVBvcG92ZXJDb250cm9sbGVyRGVsZWdhdGUgVUlJbWFnZSBOU051bWJlciBVSVNlYXJjaEJhciBOU0ZldGNoZWRSZXN1bHRzQ29udHJvbGxlciBOU0ZldGNoZWRSZXN1bHRzQ2hhbmdlVHlwZSBVSVNjcm9sbFZpZXcgVUlTY3JvbGxWaWV3RGVsZWdhdGUgVUlFZGdlSW5zZXRzIFVJQ29sb3IgVUlGb250IFVJQXBwbGljYXRpb24gTlNOb3RGb3VuZCBOU05vdGlmaWNhdGlvbkNlbnRlciBOU05vdGlmaWNhdGlvbiBVSUxvY2FsTm90aWZpY2F0aW9uIE5TQnVuZGxlIE5TRmlsZU1hbmFnZXIgTlNUaW1lSW50ZXJ2YWwgTlNEYXRlIE5TQ2FsZW5kYXIgTlNVc2VyRGVmYXVsdHMgVUlXaW5kb3cgTlNSYW5nZSBOU0FycmF5IE5TRXJyb3IgTlNVUkxSZXF1ZXN0IE5TVVJMQ29ubmVjdGlvbiBOU1VSTFNlc3Npb24gTlNVUkxTZXNzaW9uRGF0YVRhc2sgTlNVUkxTZXNzaW9uRG93bmxvYWRUYXNrIE5TVVJMU2Vzc2lvblVwbG9hZFRhc2sgTlNVUkxSZXNwb25zZVVJSW50ZXJmYWNlT3JpZW50YXRpb24gTVBNb3ZpZVBsYXllckNvbnRyb2xsZXIgZGlzcGF0Y2hfb25jZV90IGRpc3BhdGNoX3F1ZXVlX3QgZGlzcGF0Y2hfc3luYyBkaXNwYXRjaF9hc3luYyBkaXNwYXRjaF9vbmNlIn0scj0vW2EtekEtWkBdW2EtekEtWjAtOV9dKi8sYT0iQGludGVyZmFjZSBAY2xhc3MgQHByb3RvY29sIEBpbXBsZW1lbnRhdGlvbiI7cmV0dXJue2FsaWFzZXM6WyJtIiwibW0iLCJvYmpjIiwib2JqLWMiXSxrOnQsbDpyLGk6IjwvIixjOltlLkNMQ00sZS5DQkNNLGUuQ05NLGUuUVNNLHtjTjoic3RyaW5nIix2Olt7YjonQCInLGU6JyInLGk6IlxcbiIsYzpbZS5CRV19LHtiOiInIixlOiJbXlxcXFxdJyIsaToiW15cXFxcXVteJ10ifV19LHtjTjoicHJlcHJvY2Vzc29yIixiOiIjIixlOiIkIixjOlt7Y046InRpdGxlIix2Olt7YjonIicsZTonIid9LHtiOiI8IixlOiI+In1dfV19LHtjTjoiY2xhc3MiLGI6IigiK2Euc3BsaXQoIiAiKS5qb2luKCJ8IikrIilcXGIiLGU6Iih7fCQpIixlRTohMCxrOmEsbDpyLGM6W2UuVVRNXX0se2NOOiJ2YXJpYWJsZSIsYjoiXFwuIitlLlVJUixyOjB9XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoIm9jYW1sIixmdW5jdGlvbihlKXtyZXR1cm57YWxpYXNlczpbIm1sIl0sazp7a2V5d29yZDoiYW5kIGFzIGFzc2VydCBhc3IgYmVnaW4gY2xhc3MgY29uc3RyYWludCBkbyBkb25lIGRvd250byBlbHNlIGVuZCBleGNlcHRpb24gZXh0ZXJuYWwgZm9yIGZ1biBmdW5jdGlvbiBmdW5jdG9yIGlmIGluIGluY2x1ZGUgaW5oZXJpdCEgaW5oZXJpdCBpbml0aWFsaXplciBsYW5kIGxhenkgbGV0IGxvciBsc2wgbHNyIGx4b3IgbWF0Y2ggbWV0aG9kIXwxMCBtZXRob2QgbW9kIG1vZHVsZSBtdXRhYmxlIG5ldyBvYmplY3Qgb2Ygb3BlbiEgb3BlbiBvciBwcml2YXRlIHJlYyBzaWcgc3RydWN0IHRoZW4gdG8gdHJ5IHR5cGUgdmFsISB2YWwgdmlydHVhbCB3aGVuIHdoaWxlIHdpdGggcGFyc2VyIHZhbHVlIixidWlsdF9pbjoiYXJyYXkgYm9vbCBieXRlcyBjaGFyIGV4bnw1IGZsb2F0IGludCBpbnQzMiBpbnQ2NCBsaXN0IGxhenlfdHw1IG5hdGl2ZWludHw1IHN0cmluZyB1bml0IGluX2NoYW5uZWwgb3V0X2NoYW5uZWwgcmVmIixsaXRlcmFsOiJ0cnVlIGZhbHNlIn0saTovXC9cL3w+Pi8sbDoiW2Etel9dXFx3KiE/IixjOlt7Y046ImxpdGVyYWwiLGI6IlxcWyhcXHxcXHwpP1xcXXxcXChcXCkifSx7Y046ImNvbW1lbnQiLGI6IlxcKFxcKiIsZToiXFwqXFwpIixjOlsic2VsZiJdfSx7Y046InN5bWJvbCIsYjoiJ1tBLVphLXpfXSg/IScpW1xcdyddKiJ9LHtjTjoidGFnIixiOiJgW0EtWl1bXFx3J10qIn0se2NOOiJ0eXBlIixiOiJcXGJbQS1aXVtcXHcnXSoiLHI6MH0se2I6IlthLXpfXVxcdyonW1xcdyddKiJ9LGUuaW5oZXJpdChlLkFTTSx7Y046ImNoYXIiLHI6MH0pLGUuaW5oZXJpdChlLlFTTSx7aTpudWxsfSkse2NOOiJudW1iZXIiLGI6IlxcYigwW3hYXVthLWZBLUYwLTlfXStbTGxuXT98MFtvT11bMC03X10rW0xsbl0/fDBbYkJdWzAxX10rW0xsbl0/fFswLTldWzAtOV9dKihbTGxuXXwoXFwuWzAtOV9dKik/KFtlRV1bLStdP1swLTlfXSspPyk/KSIscjowfSx7YjovWy09XT4vfV19Cn0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgib3h5Z2VuZSIsZnVuY3Rpb24oZSl7dmFyIHQ9ImFic3RyYWN0IGFkZCBhbmQgYXJyYXkgYXMgYXNjIGFzcGVjdCBhc3NlbWJseSBhc3luYyBiZWdpbiBicmVhayBibG9jayBieSBjYXNlIGNsYXNzIGNvbmNhdCBjb25zdCBjb3B5IGNvbnN0cnVjdG9yIGNvbnRpbnVlIGNyZWF0ZSBkZWZhdWx0IGRlbGVnYXRlIGRlc2MgZGlzdGluY3QgZGl2IGRvIGRvd250byBkeW5hbWljIGVhY2ggZWxzZSBlbXB0eSBlbmQgZW5zdXJlIGVudW0gZXF1YWxzIGV2ZW50IGV4Y2VwdCBleGl0IGV4dGVuc2lvbiBleHRlcm5hbCBmYWxzZSBmaW5hbCBmaW5hbGl6ZSBmaW5hbGl6ZXIgZmluYWxseSBmbGFncyBmb3IgZm9yd2FyZCBmcm9tIGZ1bmN0aW9uIGZ1dHVyZSBnbG9iYWwgZ3JvdXAgaGFzIGlmIGltcGxlbWVudGF0aW9uIGltcGxlbWVudHMgaW1wbGllcyBpbiBpbmRleCBpbmhlcml0ZWQgaW5saW5lIGludGVyZmFjZSBpbnRvIGludmFyaWFudHMgaXMgaXRlcmF0b3Igam9pbiBsb2NrZWQgbG9ja2luZyBsb29wIG1hdGNoaW5nIG1ldGhvZCBtb2QgbW9kdWxlIG5hbWVzcGFjZSBuZXN0ZWQgbmV3IG5pbCBub3Qgbm90aWZ5IG51bGxhYmxlIG9mIG9sZCBvbiBvcGVyYXRvciBvciBvcmRlciBvdXQgb3ZlcnJpZGUgcGFyYWxsZWwgcGFyYW1zIHBhcnRpYWwgcGlubmVkIHByaXZhdGUgcHJvY2VkdXJlIHByb3BlcnR5IHByb3RlY3RlZCBwdWJsaWMgcXVlcnlhYmxlIHJhaXNlIHJlYWQgcmVhZG9ubHkgcmVjb3JkIHJlaW50cm9kdWNlIHJlbW92ZSByZXBlYXQgcmVxdWlyZSByZXN1bHQgcmV2ZXJzZSBzZWFsZWQgc2VsZWN0IHNlbGYgc2VxdWVuY2Ugc2V0IHNobCBzaHIgc2tpcCBzdGF0aWMgc3RlcCBzb2Z0IHRha2UgdGhlbiB0byB0cnVlIHRyeSB0dXBsZSB0eXBlIHVuaW9uIHVuaXQgdW5zYWZlIHVudGlsIHVzZXMgdXNpbmcgdmFyIHZpcnR1YWwgcmFpc2VzIHZvbGF0aWxlIHdoZXJlIHdoaWxlIHdpdGggd3JpdGUgeG9yIHlpZWxkIGF3YWl0IG1hcHBlZCBkZXByZWNhdGVkIHN0ZGNhbGwgY2RlY2wgcGFzY2FsIHJlZ2lzdGVyIHNhZmVjYWxsIG92ZXJsb2FkIGxpYnJhcnkgcGxhdGZvcm0gcmVmZXJlbmNlIHBhY2tlZCBzdHJpY3QgcHVibGlzaGVkIGF1dG9yZWxlYXNlcG9vbCBzZWxlY3RvciBzdHJvbmcgd2VhayB1bnJldGFpbmVkIixyPXtjTjoiY29tbWVudCIsYjoieyIsZToifSIscjowfSxhPXtjTjoiY29tbWVudCIsYjoiXFwoXFwqIixlOiJcXCpcXCkiLHI6MTB9LGk9e2NOOiJzdHJpbmciLGI6IiciLGU6IiciLGM6W3tiOiInJyJ9XX0sbj17Y046InN0cmluZyIsYjoiKCNcXGQrKSsifSxvPXtjTjoiZnVuY3Rpb24iLGJLOiJmdW5jdGlvbiBjb25zdHJ1Y3RvciBkZXN0cnVjdG9yIHByb2NlZHVyZSBtZXRob2QiLGU6Ils6O10iLGs6ImZ1bmN0aW9uIGNvbnN0cnVjdG9yfDEwIGRlc3RydWN0b3J8MTAgcHJvY2VkdXJlfDEwIG1ldGhvZHwxMCIsYzpbZS5UTSx7Y046InBhcmFtcyIsYjoiXFwoIixlOiJcXCkiLGs6dCxjOltpLG5dfSxyLGFdfTtyZXR1cm57Y0k6ITAsazp0LGk6JygifFxcJFtHLVpnLXpdfFxcL1xcKnw8L3w9PnwtPiknLGM6W3IsYSxlLkNMQ00saSxuLGUuTk0sbyx7Y046ImNsYXNzIixiOiI9XFxiY2xhc3NcXGIiLGU6ImVuZDsiLGs6dCxjOltpLG4scixhLGUuQ0xDTSxvXX1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgicGFyc2VyMyIsZnVuY3Rpb24oZSl7cmV0dXJue3NMOiJ4bWwiLHI6MCxjOlt7Y046ImNvbW1lbnQiLGI6Il4jIixlOiIkIn0se2NOOiJjb21tZW50IixiOiJcXF5yZW17IixlOiJ9IixyOjEwLGM6W3tiOiJ7IixlOiJ9IixjOlsic2VsZiJdfV19LHtjTjoicHJlcHJvY2Vzc29yIixiOiJeQCg/OkJBU0V8VVNFfENMQVNTfE9QVElPTlMpJCIscjoxMH0se2NOOiJ0aXRsZSIsYjoiQFtcXHdcXC1dK1xcW1tcXHdeO1xcLV0qXFxdKD86XFxbW1xcd147XFwtXSpcXF0pPyg/Oi4qKSQifSx7Y046InZhcmlhYmxlIixiOiJcXCRcXHs/W1xcd1xcLVxcLlxcOl0rXFx9PyJ9LHtjTjoia2V5d29yZCIsYjoiXFxeW1xcd1xcLVxcLlxcOl0rIn0se2NOOiJudW1iZXIiLGI6IlxcXiNbMC05YS1mQS1GXSsifSxlLkNOTV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJwZXJsIixmdW5jdGlvbihlKXt2YXIgdD0iZ2V0cHdlbnQgZ2V0c2VydmVudCBxdW90ZW1ldGEgbXNncmN2IHNjYWxhciBraWxsIGRibWNsb3NlIHVuZGVmIGxjIG1hIHN5c3dyaXRlIHRyIHNlbmQgdW1hc2sgc3lzb3BlbiBzaG13cml0ZSB2ZWMgcXggdXRpbWUgbG9jYWwgb2N0IHNlbWN0bCBsb2NhbHRpbWUgcmVhZHBpcGUgZG8gcmV0dXJuIGZvcm1hdCByZWFkIHNwcmludGYgZGJtb3BlbiBwb3AgZ2V0cGdycCBub3QgZ2V0cHduYW0gcmV3aW5kZGlyIHFxZmlsZW5vIHF3IGVuZHByb3RvZW50IHdhaXQgc2V0aG9zdGVudCBibGVzcyBzfDAgb3BlbmRpciBjb250aW51ZSBlYWNoIHNsZWVwIGVuZGdyZW50IHNodXRkb3duIGR1bXAgY2hvbXAgY29ubmVjdCBnZXRzb2NrbmFtZSBkaWUgc29ja2V0cGFpciBjbG9zZSBmbG9jayBleGlzdHMgaW5kZXggc2htZ2V0c3ViIGZvciBlbmRwd2VudCByZWRvIGxzdGF0IG1zZ2N0bCBzZXRwZ3JwIGFicyBleGl0IHNlbGVjdCBwcmludCByZWYgZ2V0aG9zdGJ5YWRkciB1bnNoaWZ0IGZjbnRsIHN5c2NhbGwgZ290byBnZXRuZXRieWFkZHIgam9pbiBnbXRpbWUgc3ltbGluayBzZW1nZXQgc3BsaWNlIHh8MCBnZXRwZWVybmFtZSByZWN2IGxvZyBzZXRzb2Nrb3B0IGNvcyBsYXN0IHJldmVyc2UgZ2V0aG9zdGJ5bmFtZSBnZXRncm5hbSBzdHVkeSBmb3JtbGluZSBlbmRob3N0ZW50IHRpbWVzIGNob3AgbGVuZ3RoIGdldGhvc3RlbnQgZ2V0bmV0ZW50IHBhY2sgZ2V0cHJvdG9lbnQgZ2V0c2VydmJ5bmFtZSByYW5kIG1rZGlyIHBvcyBjaG1vZCB5fDAgc3Vic3RyIGVuZG5ldGVudCBwcmludGYgbmV4dCBvcGVuIG1zZ3NuZCByZWFkZGlyIHVzZSB1bmxpbmsgZ2V0c29ja29wdCBnZXRwcmlvcml0eSByaW5kZXggd2FudGFycmF5IGhleCBzeXN0ZW0gZ2V0c2VydmJ5cG9ydCBlbmRzZXJ2ZW50IGludCBjaHIgdW50aWUgcm1kaXIgcHJvdG90eXBlIHRlbGwgbGlzdGVuIGZvcmsgc2htcmVhZCB1Y2ZpcnN0IHNldHByb3RvZW50IGVsc2Ugc3lzc2VlayBsaW5rIGdldGdyZ2lkIHNobWN0bCB3YWl0cGlkIHVucGFjayBnZXRuZXRieW5hbWUgcmVzZXQgY2hkaXIgZ3JlcCBzcGxpdCByZXF1aXJlIGNhbGxlciBsY2ZpcnN0IHVudGlsIHdhcm4gd2hpbGUgdmFsdWVzIHNoaWZ0IHRlbGxkaXIgZ2V0cHd1aWQgbXkgZ2V0cHJvdG9ieW51bWJlciBkZWxldGUgYW5kIHNvcnQgdWMgZGVmaW5lZCBzcmFuZCBhY2NlcHQgcGFja2FnZSBzZWVrZGlyIGdldHByb3RvYnluYW1lIHNlbW9wIG91ciByZW5hbWUgc2VlayBpZiBxfDAgY2hyb290IHN5c3JlYWQgc2V0cHdlbnQgbm8gY3J5cHQgZ2V0YyBjaG93biBzcXJ0IHdyaXRlIHNldG5ldGVudCBzZXRwcmlvcml0eSBmb3JlYWNoIHRpZSBzaW4gbXNnZ2V0IG1hcCBzdGF0IGdldGxvZ2luIHVubGVzcyBlbHNpZiB0cnVuY2F0ZSBleGVjIGtleXMgZ2xvYiB0aWVkIGNsb3NlZGlyaW9jdGwgc29ja2V0IHJlYWRsaW5rIGV2YWwgeG9yIHJlYWRsaW5lIGJpbm1vZGUgc2V0c2VydmVudCBlb2Ygb3JkIGJpbmQgYWxhcm0gcGlwZSBhdGFuMiBnZXRncmVudCBleHAgdGltZSBwdXNoIHNldGdyZW50IGd0IGx0IG9yIG5lIG18MCBicmVhayBnaXZlbiBzYXkgc3RhdGUgd2hlbiIscj17Y046InN1YnN0IixiOiJbJEBdXFx7IixlOiJcXH0iLGs6dH0sYT17YjoiLT57IixlOiJ9In0saT17Y046InZhcmlhYmxlIix2Olt7YjovXCRcZC99LHtiOi9bXCRcJVxAXShcXlx3XGJ8I1x3KyhcOlw6XHcrKSp8e1x3K318XHcrKFw6XDpcdyopKikvfSx7YjovW1wkXCVcQF1bXlxzXHd7XS8scjowfV19LG49e2NOOiJjb21tZW50IixiOiJeKF9fRU5EX198X19EQVRBX18pIixlOiJcXG4kIixyOjV9LG89W2UuQkUscixpXSxzPVtpLGUuSENNLG4se2NOOiJjb21tZW50IixiOiJeXFw9XFx3IixlOiJcXD1jdXQiLGVXOiEwfSxhLHtjTjoic3RyaW5nIixjOm8sdjpbe2I6InFbcXd4cl0/XFxzKlxcKCIsZToiXFwpIixyOjV9LHtiOiJxW3F3eHJdP1xccypcXFsiLGU6IlxcXSIscjo1fSx7YjoicVtxd3hyXT9cXHMqXFx7IixlOiJcXH0iLHI6NX0se2I6InFbcXd4cl0/XFxzKlxcfCIsZToiXFx8IixyOjV9LHtiOiJxW3F3eHJdP1xccypcXDwiLGU6IlxcPiIscjo1fSx7YjoicXdcXHMrcSIsZToicSIscjo1fSx7YjoiJyIsZToiJyIsYzpbZS5CRV19LHtiOiciJyxlOiciJ30se2I6ImAiLGU6ImAiLGM6W2UuQkVdfSx7Yjoie1xcdyt9IixjOltdLHI6MH0se2I6Ii0/XFx3K1xccypcXD1cXD4iLGM6W10scjowfV19LHtjTjoibnVtYmVyIixiOiIoXFxiMFswLTdfXSspfChcXGIweFswLTlhLWZBLUZfXSspfChcXGJbMS05XVswLTlfXSooXFwuWzAtOV9dKyk/KXxbMF9dXFxiIixyOjB9LHtiOiIoXFwvXFwvfCIrZS5SU1IrInxcXGIoc3BsaXR8cmV0dXJufHByaW50fHJldmVyc2V8Z3JlcClcXGIpXFxzKiIsazoic3BsaXQgcmV0dXJuIHByaW50IHJldmVyc2UgZ3JlcCIscjowLGM6W2UuSENNLG4se2NOOiJyZWdleHAiLGI6IihzfHRyfHkpLyhcXFxcLnxbXi9dKSovKFxcXFwufFteL10pKi9bYS16XSoiLHI6MTB9LHtjTjoicmVnZXhwIixiOiIobXxxcik/LyIsZToiL1thLXpdKiIsYzpbZS5CRV0scjowfV19LHtjTjoic3ViIixiSzoic3ViIixlOiIoXFxzKlxcKC4qP1xcKSk/Wzt7XSIscjo1fSx7Y046Im9wZXJhdG9yIixiOiItXFx3XFxiIixyOjB9XTtyZXR1cm4gci5jPXMsYS5jPXMse2FsaWFzZXM6WyJwbCJdLGs6dCxjOnN9fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJwaHAiLGZ1bmN0aW9uKGUpe3ZhciB0PXtjTjoidmFyaWFibGUiLGI6IlxcJCtbYS16QS1aX38tw79dW2EtekEtWjAtOV9/LcO/XSoifSxyPXtjTjoicHJlcHJvY2Vzc29yIixiOi88XD8ocGhwKT98XD8+L30sYT17Y046InN0cmluZyIsYzpbZS5CRSxyXSx2Olt7YjonYiInLGU6JyInfSx7YjoiYiciLGU6IicifSxlLmluaGVyaXQoZS5BU00se2k6bnVsbH0pLGUuaW5oZXJpdChlLlFTTSx7aTpudWxsfSldfSxpPXt2OltlLkJOTSxlLkNOTV19O3JldHVybnthbGlhc2VzOlsicGhwMyIsInBocDQiLCJwaHA1IiwicGhwNiJdLGNJOiEwLGs6ImFuZCBpbmNsdWRlX29uY2UgbGlzdCBhYnN0cmFjdCBnbG9iYWwgcHJpdmF0ZSBlY2hvIGludGVyZmFjZSBhcyBzdGF0aWMgZW5kc3dpdGNoIGFycmF5IG51bGwgaWYgZW5kd2hpbGUgb3IgY29uc3QgZm9yIGVuZGZvcmVhY2ggc2VsZiB2YXIgd2hpbGUgaXNzZXQgcHVibGljIHByb3RlY3RlZCBleGl0IGZvcmVhY2ggdGhyb3cgZWxzZWlmIGluY2x1ZGUgX19GSUxFX18gZW1wdHkgcmVxdWlyZV9vbmNlIGRvIHhvciByZXR1cm4gcGFyZW50IGNsb25lIHVzZSBfX0NMQVNTX18gX19MSU5FX18gZWxzZSBicmVhayBwcmludCBldmFsIG5ldyBjYXRjaCBfX01FVEhPRF9fIGNhc2UgZXhjZXB0aW9uIGRlZmF1bHQgZGllIHJlcXVpcmUgX19GVU5DVElPTl9fIGVuZGRlY2xhcmUgZmluYWwgdHJ5IHN3aXRjaCBjb250aW51ZSBlbmRmb3IgZW5kaWYgZGVjbGFyZSB1bnNldCB0cnVlIGZhbHNlIHRyYWl0IGdvdG8gaW5zdGFuY2VvZiBpbnN0ZWFkb2YgX19ESVJfXyBfX05BTUVTUEFDRV9fIHlpZWxkIGZpbmFsbHkiLGM6W2UuQ0xDTSxlLkhDTSx7Y046ImNvbW1lbnQiLGI6Ii9cXCoiLGU6IlxcKi8iLGM6W3tjTjoicGhwZG9jIixiOiJcXHNAW0EtWmEtel0rIn0scl19LHtjTjoiY29tbWVudCIsYjoiX19oYWx0X2NvbXBpbGVyLis/OyIsZVc6ITAsazoiX19oYWx0X2NvbXBpbGVyIixsOmUuVUlSfSx7Y046InN0cmluZyIsYjoiPDw8WydcIl0/XFx3K1snXCJdPyQiLGU6Il5cXHcrOyIsYzpbZS5CRV19LHIsdCx7YjovLT4rW2EtekEtWl9ceDdmLVx4ZmZdW2EtekEtWjAtOV9ceDdmLVx4ZmZdKi99LHtjTjoiZnVuY3Rpb24iLGJLOiJmdW5jdGlvbiIsZTovWzt7XS8sZUU6ITAsaToiXFwkfFxcW3wlIixjOltlLlVUTSx7Y046InBhcmFtcyIsYjoiXFwoIixlOiJcXCkiLGM6WyJzZWxmIix0LGUuQ0JDTSxhLGldfV19LHtjTjoiY2xhc3MiLGJLOiJjbGFzcyBpbnRlcmZhY2UiLGU6InsiLGVFOiEwLGk6L1s6XChcJCJdLyxjOlt7Yks6ImV4dGVuZHMgaW1wbGVtZW50cyJ9LGUuVVRNXX0se2JLOiJuYW1lc3BhY2UiLGU6IjsiLGk6L1tcLiddLyxjOltlLlVUTV19LHtiSzoidXNlIixlOiI7IixjOltlLlVUTV19LHtiOiI9PiJ9LGEsaV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJwb3dlcnNoZWxsIixmdW5jdGlvbihlKXt2YXIgdD17YjoiYFtcXHNcXFNdIixyOjB9LHI9e2NOOiJ2YXJpYWJsZSIsdjpbe2I6L1wkW1x3XGRdW1x3XGRfOl0qL31dfSxhPXtjTjoic3RyaW5nIixiOi8iLyxlOi8iLyxjOlt0LHIse2NOOiJ2YXJpYWJsZSIsYjovXCRbQS16XS8sZTovW15BLXpdL31dfSxpPXtjTjoic3RyaW5nIixiOi8nLyxlOi8nL307cmV0dXJue2FsaWFzZXM6WyJwcyJdLGw6Ly0/W0EtelwuXC1dKy8sY0k6ITAsazp7a2V5d29yZDoiaWYgZWxzZSBmb3JlYWNoIHJldHVybiBmdW5jdGlvbiBkbyB3aGlsZSB1bnRpbCBlbHNlaWYgYmVnaW4gZm9yIHRyYXAgZGF0YSBkeW5hbWljcGFyYW0gZW5kIGJyZWFrIHRocm93IHBhcmFtIGNvbnRpbnVlIGZpbmFsbHkgaW4gc3dpdGNoIGV4aXQgZmlsdGVyIHRyeSBwcm9jZXNzIGNhdGNoIixsaXRlcmFsOiIkbnVsbCAkdHJ1ZSAkZmFsc2UiLGJ1aWx0X2luOiJBZGQtQ29udGVudCBBZGQtSGlzdG9yeSBBZGQtTWVtYmVyIEFkZC1QU1NuYXBpbiBDbGVhci1Db250ZW50IENsZWFyLUl0ZW0gQ2xlYXItSXRlbSBQcm9wZXJ0eSBDbGVhci1WYXJpYWJsZSBDb21wYXJlLU9iamVjdCBDb252ZXJ0RnJvbS1TZWN1cmVTdHJpbmcgQ29udmVydC1QYXRoIENvbnZlcnRUby1IdG1sIENvbnZlcnRUby1TZWN1cmVTdHJpbmcgQ29weS1JdGVtIENvcHktSXRlbVByb3BlcnR5IEV4cG9ydC1BbGlhcyBFeHBvcnQtQ2xpeG1sIEV4cG9ydC1Db25zb2xlIEV4cG9ydC1Dc3YgRm9yRWFjaC1PYmplY3QgRm9ybWF0LUN1c3RvbSBGb3JtYXQtTGlzdCBGb3JtYXQtVGFibGUgRm9ybWF0LVdpZGUgR2V0LUFjbCBHZXQtQWxpYXMgR2V0LUF1dGhlbnRpY29kZVNpZ25hdHVyZSBHZXQtQ2hpbGRJdGVtIEdldC1Db21tYW5kIEdldC1Db250ZW50IEdldC1DcmVkZW50aWFsIEdldC1DdWx0dXJlIEdldC1EYXRlIEdldC1FdmVudExvZyBHZXQtRXhlY3V0aW9uUG9saWN5IEdldC1IZWxwIEdldC1IaXN0b3J5IEdldC1Ib3N0IEdldC1JdGVtIEdldC1JdGVtUHJvcGVydHkgR2V0LUxvY2F0aW9uIEdldC1NZW1iZXIgR2V0LVBmeENlcnRpZmljYXRlIEdldC1Qcm9jZXNzIEdldC1QU0RyaXZlIEdldC1QU1Byb3ZpZGVyIEdldC1QU1NuYXBpbiBHZXQtU2VydmljZSBHZXQtVHJhY2VTb3VyY2UgR2V0LVVJQ3VsdHVyZSBHZXQtVW5pcXVlIEdldC1WYXJpYWJsZSBHZXQtV21pT2JqZWN0IEdyb3VwLU9iamVjdCBJbXBvcnQtQWxpYXMgSW1wb3J0LUNsaXhtbCBJbXBvcnQtQ3N2IEludm9rZS1FeHByZXNzaW9uIEludm9rZS1IaXN0b3J5IEludm9rZS1JdGVtIEpvaW4tUGF0aCBNZWFzdXJlLUNvbW1hbmQgTWVhc3VyZS1PYmplY3QgTW92ZS1JdGVtIE1vdmUtSXRlbVByb3BlcnR5IE5ldy1BbGlhcyBOZXctSXRlbSBOZXctSXRlbVByb3BlcnR5IE5ldy1PYmplY3QgTmV3LVBTRHJpdmUgTmV3LVNlcnZpY2UgTmV3LVRpbWVTcGFuIE5ldy1WYXJpYWJsZSBPdXQtRGVmYXVsdCBPdXQtRmlsZSBPdXQtSG9zdCBPdXQtTnVsbCBPdXQtUHJpbnRlciBPdXQtU3RyaW5nIFBvcC1Mb2NhdGlvbiBQdXNoLUxvY2F0aW9uIFJlYWQtSG9zdCBSZW1vdmUtSXRlbSBSZW1vdmUtSXRlbVByb3BlcnR5IFJlbW92ZS1QU0RyaXZlIFJlbW92ZS1QU1NuYXBpbiBSZW1vdmUtVmFyaWFibGUgUmVuYW1lLUl0ZW0gUmVuYW1lLUl0ZW1Qcm9wZXJ0eSBSZXNvbHZlLVBhdGggUmVzdGFydC1TZXJ2aWNlIFJlc3VtZS1TZXJ2aWNlIFNlbGVjdC1PYmplY3QgU2VsZWN0LVN0cmluZyBTZXQtQWNsIFNldC1BbGlhcyBTZXQtQXV0aGVudGljb2RlU2lnbmF0dXJlIFNldC1Db250ZW50IFNldC1EYXRlIFNldC1FeGVjdXRpb25Qb2xpY3kgU2V0LUl0ZW0gU2V0LUl0ZW1Qcm9wZXJ0eSBTZXQtTG9jYXRpb24gU2V0LVBTRGVidWcgU2V0LVNlcnZpY2UgU2V0LVRyYWNlU291cmNlIFNldC1WYXJpYWJsZSBTb3J0LU9iamVjdCBTcGxpdC1QYXRoIFN0YXJ0LVNlcnZpY2UgU3RhcnQtU2xlZXAgU3RhcnQtVHJhbnNjcmlwdCBTdG9wLVByb2Nlc3MgU3RvcC1TZXJ2aWNlIFN0b3AtVHJhbnNjcmlwdCBTdXNwZW5kLVNlcnZpY2UgVGVlLU9iamVjdCBUZXN0LVBhdGggVHJhY2UtQ29tbWFuZCBVcGRhdGUtRm9ybWF0RGF0YSBVcGRhdGUtVHlwZURhdGEgV2hlcmUtT2JqZWN0IFdyaXRlLURlYnVnIFdyaXRlLUVycm9yIFdyaXRlLUhvc3QgV3JpdGUtT3V0cHV0IFdyaXRlLVByb2dyZXNzIFdyaXRlLVZlcmJvc2UgV3JpdGUtV2FybmluZyIsb3BlcmF0b3I6Ii1uZSAtZXEgLWx0IC1ndCAtZ2UgLWxlIC1ub3QgLWxpa2UgLW5vdGxpa2UgLW1hdGNoIC1ub3RtYXRjaCAtY29udGFpbnMgLW5vdGNvbnRhaW5zIC1pbiAtbm90aW4gLXJlcGxhY2UifSxjOltlLkhDTSxlLk5NLGEsaSxyXX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInByb2Nlc3NpbmciLGZ1bmN0aW9uKGUpe3JldHVybntrOntrZXl3b3JkOiJCdWZmZXJlZFJlYWRlciBQVmVjdG9yIFBGb250IFBJbWFnZSBQR3JhcGhpY3MgSGFzaE1hcCBib29sZWFuIGJ5dGUgY2hhciBjb2xvciBkb3VibGUgZmxvYXQgaW50IGxvbmcgU3RyaW5nIEFycmF5IEZsb2F0RGljdCBGbG9hdExpc3QgSW50RGljdCBJbnRMaXN0IEpTT05BcnJheSBKU09OT2JqZWN0IE9iamVjdCBTdHJpbmdEaWN0IFN0cmluZ0xpc3QgVGFibGUgVGFibGVSb3cgWE1MIGZhbHNlIHN5bmNocm9uaXplZCBpbnQgYWJzdHJhY3QgZmxvYXQgcHJpdmF0ZSBjaGFyIGJvb2xlYW4gc3RhdGljIG51bGwgaWYgY29uc3QgZm9yIHRydWUgd2hpbGUgbG9uZyB0aHJvdyBzdHJpY3RmcCBmaW5hbGx5IHByb3RlY3RlZCBpbXBvcnQgbmF0aXZlIGZpbmFsIHJldHVybiB2b2lkIGVudW0gZWxzZSBicmVhayB0cmFuc2llbnQgbmV3IGNhdGNoIGluc3RhbmNlb2YgYnl0ZSBzdXBlciB2b2xhdGlsZSBjYXNlIGFzc2VydCBzaG9ydCBwYWNrYWdlIGRlZmF1bHQgZG91YmxlIHB1YmxpYyB0cnkgdGhpcyBzd2l0Y2ggY29udGludWUgdGhyb3dzIHByb3RlY3RlZCBwdWJsaWMgcHJpdmF0ZSIsY29uc3RhbnQ6IlAyRCBQM0QgSEFMRl9QSSBQSSBRVUFSVEVSX1BJIFRBVSBUV09fUEkiLHZhcmlhYmxlOiJkaXNwbGF5SGVpZ2h0IGRpc3BsYXlXaWR0aCBtb3VzZVkgbW91c2VYIG1vdXNlUHJlc3NlZCBwbW91c2VYIHBtb3VzZVkga2V5IGtleUNvZGUgcGl4ZWxzIGZvY3VzZWQgZnJhbWVDb3VudCBmcmFtZVJhdGUgaGVpZ2h0IHdpZHRoIix0aXRsZToic2V0dXAgZHJhdyIsYnVpbHRfaW46InNpemUgY3JlYXRlR3JhcGhpY3MgYmVnaW5EcmF3IGNyZWF0ZVNoYXBlIGxvYWRTaGFwZSBQU2hhcGUgYXJjIGVsbGlwc2UgbGluZSBwb2ludCBxdWFkIHJlY3QgdHJpYW5nbGUgYmV6aWVyIGJlemllckRldGFpbCBiZXppZXJQb2ludCBiZXppZXJUYW5nZW50IGN1cnZlIGN1cnZlRGV0YWlsIGN1cnZlUG9pbnQgY3VydmVUYW5nZW50IGN1cnZlVGlnaHRuZXNzIHNoYXBlIHNoYXBlTW9kZSBiZWdpbkNvbnRvdXIgYmVnaW5TaGFwZSBiZXppZXJWZXJ0ZXggY3VydmVWZXJ0ZXggZW5kQ29udG91ciBlbmRTaGFwZSBxdWFkcmF0aWNWZXJ0ZXggdmVydGV4IGVsbGlwc2VNb2RlIG5vU21vb3RoIHJlY3RNb2RlIHNtb290aCBzdHJva2VDYXAgc3Ryb2tlSm9pbiBzdHJva2VXZWlnaHQgbW91c2VDbGlja2VkIG1vdXNlRHJhZ2dlZCBtb3VzZU1vdmVkIG1vdXNlUHJlc3NlZCBtb3VzZVJlbGVhc2VkIG1vdXNlV2hlZWwga2V5UHJlc3NlZCBrZXlQcmVzc2Vka2V5UmVsZWFzZWQga2V5VHlwZWQgcHJpbnQgcHJpbnRsbiBzYXZlIHNhdmVGcmFtZSBkYXkgaG91ciBtaWxsaXMgbWludXRlIG1vbnRoIHNlY29uZCB5ZWFyIGJhY2tncm91bmQgY2xlYXIgY29sb3JNb2RlIGZpbGwgbm9GaWxsIG5vU3Ryb2tlIHN0cm9rZSBhbHBoYSBibHVlIGJyaWdodG5lc3MgY29sb3IgZ3JlZW4gaHVlIGxlcnBDb2xvciByZWQgc2F0dXJhdGlvbiBtb2RlbFggbW9kZWxZIG1vZGVsWiBzY3JlZW5YIHNjcmVlblkgc2NyZWVuWiBhbWJpZW50IGVtaXNzaXZlIHNoaW5pbmVzcyBzcGVjdWxhciBhZGQgY3JlYXRlSW1hZ2UgYmVnaW5DYW1lcmEgY2FtZXJhIGVuZENhbWVyYSBmcnVzdHVtIG9ydGhvIHBlcnNwZWN0aXZlIHByaW50Q2FtZXJhIHByaW50UHJvamVjdGlvbiBjdXJzb3IgZnJhbWVSYXRlIG5vQ3Vyc29yIGV4aXQgbG9vcCBub0xvb3AgcG9wU3R5bGUgcHVzaFN0eWxlIHJlZHJhdyBiaW5hcnkgYm9vbGVhbiBieXRlIGNoYXIgZmxvYXQgaGV4IGludCBzdHIgdW5iaW5hcnkgdW5oZXggam9pbiBtYXRjaCBtYXRjaEFsbCBuZiBuZmMgbmZwIG5mcyBzcGxpdCBzcGxpdFRva2VucyB0cmltIGFwcGVuZCBhcnJheUNvcHkgY29uY2F0IGV4cGFuZCByZXZlcnNlIHNob3J0ZW4gc29ydCBzcGxpY2Ugc3Vic2V0IGJveCBzcGhlcmUgc3BoZXJlRGV0YWlsIGNyZWF0ZUlucHV0IGNyZWF0ZVJlYWRlciBsb2FkQnl0ZXMgbG9hZEpTT05BcnJheSBsb2FkSlNPTk9iamVjdCBsb2FkU3RyaW5ncyBsb2FkVGFibGUgbG9hZFhNTCBvcGVuIHBhcnNlWE1MIHNhdmVUYWJsZSBzZWxlY3RGb2xkZXIgc2VsZWN0SW5wdXQgYmVnaW5SYXcgYmVnaW5SZWNvcmQgY3JlYXRlT3V0cHV0IGNyZWF0ZVdyaXRlciBlbmRSYXcgZW5kUmVjb3JkIFByaW50V3JpdGVyc2F2ZUJ5dGVzIHNhdmVKU09OQXJyYXkgc2F2ZUpTT05PYmplY3Qgc2F2ZVN0cmVhbSBzYXZlU3RyaW5ncyBzYXZlWE1MIHNlbGVjdE91dHB1dCBwb3BNYXRyaXggcHJpbnRNYXRyaXggcHVzaE1hdHJpeCByZXNldE1hdHJpeCByb3RhdGUgcm90YXRlWCByb3RhdGVZIHJvdGF0ZVogc2NhbGUgc2hlYXJYIHNoZWFyWSB0cmFuc2xhdGUgYW1iaWVudExpZ2h0IGRpcmVjdGlvbmFsTGlnaHQgbGlnaHRGYWxsb2ZmIGxpZ2h0cyBsaWdodFNwZWN1bGFyIG5vTGlnaHRzIG5vcm1hbCBwb2ludExpZ2h0IHNwb3RMaWdodCBpbWFnZSBpbWFnZU1vZGUgbG9hZEltYWdlIG5vVGludCByZXF1ZXN0SW1hZ2UgdGludCB0ZXh0dXJlIHRleHR1cmVNb2RlIHRleHR1cmVXcmFwIGJsZW5kIGNvcHkgZmlsdGVyIGdldCBsb2FkUGl4ZWxzIHNldCB1cGRhdGVQaXhlbHMgYmxlbmRNb2RlIGxvYWRTaGFkZXIgUFNoYWRlcnJlc2V0U2hhZGVyIHNoYWRlciBjcmVhdGVGb250IGxvYWRGb250IHRleHQgdGV4dEZvbnQgdGV4dEFsaWduIHRleHRMZWFkaW5nIHRleHRNb2RlIHRleHRTaXplIHRleHRXaWR0aCB0ZXh0QXNjZW50IHRleHREZXNjZW50IGFicyBjZWlsIGNvbnN0cmFpbiBkaXN0IGV4cCBmbG9vciBsZXJwIGxvZyBtYWcgbWFwIG1heCBtaW4gbm9ybSBwb3cgcm91bmQgc3Egc3FydCBhY29zIGFzaW4gYXRhbiBhdGFuMiBjb3MgZGVncmVlcyByYWRpYW5zIHNpbiB0YW4gbm9pc2Ugbm9pc2VEZXRhaWwgbm9pc2VTZWVkIHJhbmRvbSByYW5kb21HYXVzc2lhbiByYW5kb21TZWVkIn0sYzpbZS5DTENNLGUuQ0JDTSxlLkFTTSxlLlFTTSxlLkNOTV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJwcm9maWxlIixmdW5jdGlvbihlKXtyZXR1cm57YzpbZS5DTk0se2NOOiJidWlsdF9pbiIsYjoieyIsZToifSQiLGVCOiEwLGVFOiEwLGM6W2UuQVNNLGUuUVNNXSxyOjB9LHtjTjoiZmlsZW5hbWUiLGI6IlthLXpBLVpfXVtcXGRhLXpBLVpfXStcXC5bXFxkYS16QS1aX117MSwzfSIsZToiOiIsZUU6ITB9LHtjTjoiaGVhZGVyIixiOiIobmNhbGxzfHRvdHRpbWV8Y3VtdGltZSkiLGU6IiQiLGs6Im5jYWxscyB0b3R0aW1lfDEwIGN1bXRpbWV8MTAgZmlsZW5hbWUiLHI6MTB9LHtjTjoic3VtbWFyeSIsYjoiZnVuY3Rpb24gY2FsbHMiLGU6IiQiLGM6W2UuQ05NXSxyOjEwfSxlLkFTTSxlLlFTTSx7Y046ImZ1bmN0aW9uIixiOiJcXCgiLGU6IlxcKSQiLGM6W2UuVVRNXSxyOjB9XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInByb3RvYnVmIixmdW5jdGlvbihlKXtyZXR1cm57azp7a2V5d29yZDoicGFja2FnZSBpbXBvcnQgb3B0aW9uIG9wdGlvbmFsIHJlcXVpcmVkIHJlcGVhdGVkIGdyb3VwIixidWlsdF9pbjoiZG91YmxlIGZsb2F0IGludDMyIGludDY0IHVpbnQzMiB1aW50NjQgc2ludDMyIHNpbnQ2NCBmaXhlZDMyIGZpeGVkNjQgc2ZpeGVkMzIgc2ZpeGVkNjQgYm9vbCBzdHJpbmcgYnl0ZXMiLGxpdGVyYWw6InRydWUgZmFsc2UifSxjOltlLlFTTSxlLk5NLGUuQ0xDTSx7Y046ImNsYXNzIixiSzoibWVzc2FnZSBlbnVtIHNlcnZpY2UiLGU6L1x7LyxpOi9cbi8sYzpbZS5pbmhlcml0KGUuVE0se3N0YXJ0czp7ZVc6ITAsZUU6ITB9fSldfSx7Y046ImZ1bmN0aW9uIixiSzoicnBjIixlOi87LyxlRTohMCxrOiJycGMgcmV0dXJucyJ9LHtjTjoiY29uc3RhbnQiLGI6L15ccypbQS1aX10rLyxlOi9ccyo9LyxlRTohMH1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgicHVwcGV0IixmdW5jdGlvbihlKXt2YXIgdD0iYXVnZWFzIGNvbXB1dGVyIGNyb24gZXhlYyBmaWxlIGZpbGVidWNrZXQgaG9zdCBpbnRlcmZhY2UgazVsb2dpbiBtYWNhdXRob3JpemF0aW9uIG1haWxhbGlhcyBtYWlsbGlzdCBtY3ggbW91bnQgbmFnaW9zX2NvbW1hbmQgbmFnaW9zX2NvbnRhY3QgbmFnaW9zX2NvbnRhY3Rncm91cCBuYWdpb3NfaG9zdCBuYWdpb3NfaG9zdGRlcGVuZGVuY3kgbmFnaW9zX2hvc3Rlc2NhbGF0aW9uIG5hZ2lvc19ob3N0ZXh0aW5mbyBuYWdpb3NfaG9zdGdyb3VwIG5hZ2lvc19zZXJ2aWNlIGZpcmV3YWxsIG5hZ2lvc19zZXJ2aWNlZGVwZW5kZW5jeSBuYWdpb3Nfc2VydmljZWVzY2FsYXRpb24gbmFnaW9zX3NlcnZpY2VleHRpbmZvIG5hZ2lvc19zZXJ2aWNlZ3JvdXAgbmFnaW9zX3RpbWVwZXJpb2Qgbm90aWZ5IHBhY2thZ2UgcmVzb3VyY2VzIHJvdXRlciBzY2hlZHVsZSBzY2hlZHVsZWRfdGFzayBzZWxib29sZWFuIHNlbG1vZHVsZSBzZXJ2aWNlIHNzaF9hdXRob3JpemVkX2tleSBzc2hrZXkgc3RhZ2UgdGlkeSB1c2VyIHZsYW4geXVtcmVwbyB6ZnMgem9uZSB6cG9vbCIscj0iYWxpYXMgYXVkaXQgYmVmb3JlIGxvZ2xldmVsIG5vb3AgcmVxdWlyZSBzdWJzY3JpYmUgdGFnIG93bmVyIGVuc3VyZSBncm91cCBtb2RlIG5hbWV8MCBjaGFuZ2VzIGNvbnRleHQgZm9yY2UgaW5jbCBsZW5zIGxvYWRfcGF0aCBvbmx5aWYgcHJvdmlkZXIgcmV0dXJucyByb290IHNob3dfZGlmZiB0eXBlX2NoZWNrIGVuX2FkZHJlc3MgaXBfYWRkcmVzcyByZWFsbmFtZSBjb21tYW5kIGVudmlyb25tZW50IGhvdXIgbW9udXRlIG1vbnRoIG1vbnRoZGF5IHNwZWNpYWwgdGFyZ2V0IHdlZWtkYXkgY3JlYXRlcyBjd2Qgb2dvdXRwdXQgcmVmcmVzaCByZWZyZXNob25seSB0cmllcyB0cnlfc2xlZXAgdW1hc2sgYmFja3VwIGNoZWNrc3VtIGNvbnRlbnQgY3RpbWUgZm9yY2UgaWdub3JlIGxpbmtzIG10aW1lIHB1cmdlIHJlY3Vyc2UgcmVjdXJzZWxpbWl0IHJlcGxhY2Ugc2VsaW51eF9pZ25vcmVfZGVmYXVsdHMgc2VscmFuZ2Ugc2Vscm9sZSBzZWx0eXBlIHNlbHVzZXIgc291cmNlIHNvdWlyY2VfcGVybWlzc2lvbnMgc291cmNlc2VsZWN0IHZhbGlkYXRlX2NtZCB2YWxpZGF0ZV9yZXBsYWNlbWVudCBhbGxvd2R1cGUgYXR0cmlidXRlX21lbWJlcnNoaXAgYXV0aF9tZW1iZXJzaGlwIGZvcmNlbG9jYWwgZ2lkIGlhX2xvYWRfbW9kdWxlIG1lbWJlcnMgc3lzdGVtIGhvc3RfYWxpYXNlcyBpcCBhbGxvd2VkX3RydW5rX3ZsYW5zIGRlc2NyaXB0aW9uIGRldmljZV91cmwgZHVwbGV4IGVuY2Fwc3VsYXRpb24gZXRoZXJjaGFubmVsIG5hdGl2ZV92bGFuIHNwZWVkIHByaW5jaXBhbHMgYWxsb3dfcm9vdCBhdXRoX2NsYXNzIGF1dGhfdHlwZSBhdXRoZW50aWNhdGVfdXNlciBrX29mX24gbWVjaGFuaXNtcyBydWxlIHNlc3Npb25fb3duZXIgc2hhcmVkIG9wdGlvbnMgZGV2aWNlIGZzdHlwZSBlbmFibGUgaGFzcmVzdGFydCBkaXJlY3RvcnkgcHJlc2VudCBhYnNlbnQgbGluayBhdGJvb3QgYmxvY2tkZXZpY2UgZGV2aWNlIGR1bXAgcGFzcyByZW1vdW50cyBwb2xsZXJfdGFnIHVzZSBtZXNzYWdlIHdpdGhwYXRoIGFkbWluZmlsZSBhbGxvd192aXJ0dWFsIGFsbG93Y2Ryb20gY2F0ZWdvcnkgY29uZmlnZmlsZXMgZmxhdm9yIGluc3RhbGxfb3B0aW9ucyBpbnN0YW5jZSBwYWNrYWdlX3NldHRpbmdzIHBsYXRmb3JtIHJlc3BvbnNlZmlsZSBzdGF0dXMgdW5pbnN0YWxsX29wdGlvbnMgdmVuZG9yIHVubGVzc19zeXN0ZW1fdXNlciB1bmxlc3NfdWlkIGJpbmFyeSBjb250cm9sIGZsYWdzIGhhc3N0YXR1cyBtYW5pZmVzdCBwYXR0ZXJuIHJlc3RhcnQgcnVubmluZyBzdGFydCBzdG9wIGFsbG93ZHVwZSBhdXRocyBleHBpcnkgZ2lkIGdyb3VwcyBob21lIGl0ZXJhdGlvbnMga2V5X21lbWJlcnNoaXAga2V5cyBtYW5hZ2Vob21lIG1lbWJlcnNoaXAgcGFzc3dvcmQgcGFzc3dvcmRfbWF4X2FnZSBwYXNzd29yZF9taW5fYWdlIHByb2ZpbGVfbWVtYmVyc2hpcCBwcm9maWxlcyBwcm9qZWN0IHB1cmdlX3NzaF9rZXlzIHJvbGVfbWVtYmVyc2hpcCByb2xlcyBzYWx0IHNoZWxsIHVpZCBiYXNldXJsIGNvc3QgZGVzY3IgZW5hYmxlZCBlbmFibGVncm91cHMgZXhjbHVkZSBmYWlsb3Zlcm1ldGhvZCBncGdjaGVjayBncGdrZXkgaHR0cF9jYWNoaW5nIGluY2x1ZGUgaW5jbHVkZXBrZ3Mga2VlcGFsaXZlIG1ldGFkYXRhX2V4cGlyZSBtZXRhbGluayBtaXJyb3JsaXN0IHByaW9yaXR5IHByb3RlY3QgcHJveHkgcHJveHlfcGFzc3dvcmQgcHJveHlfdXNlcm5hbWUgcmVwb19ncGdjaGVjayBzM19lbmFibGVkIHNraXBfaWZfdW5hdmFpbGFibGUgc3NsY2FjZXJ0IHNzbGNsaWVudGNlcnQgc3NsY2xpZW50a2V5IHNzbHZlcmlmeSBtb3VudGVkIixhPXtrZXl3b3JkOiJhbmQgY2FzZSBjbGFzcyBkZWZhdWx0IGRlZmluZSBlbHNlIGVsc2lmIGZhbHNlIGlmIGluIGltcG9ydCBlbmhlcml0cyBub2RlIG9yIHRydWUgdW5kZWYgdW5sZXNzIG1haW4gc2V0dGluZ3MgJHN0cmluZyAiK3QsbGl0ZXJhbDpyLGJ1aWx0X2luOiJhcmNoaXRlY3R1cmUgYXVnZWFzdmVyc2lvbiBibG9ja2RldmljZXMgYm9hcmRtYW51ZmFjdHVyZXIgYm9hcmRwcm9kdWN0bmFtZSBib2FyZHNlcmlhbG51bWJlciBjZmtleSBkaGNwX3NlcnZlcnMgZG9tYWluIGVjMl8gZWMyX3VzZXJkYXRhIGZhY3RlcnZlcnNpb24gZmlsZXN5c3RlbXMgbGRvbSBmcWRuIGdpZCBoYXJkd2FyZWlzYSBoYXJkd2FyZW1vZGVsIGhvc3RuYW1lIGlkfDAgaW50ZXJmYWNlcyBpcGFkZHJlc3MgaXBhZGRyZXNzXyBpcGFkZHJlc3M2IGlwYWRkcmVzczZfIGlwaG9zdG51bWJlciBpc192aXJ0dWFsIGtlcm5lbCBrZXJuZWxtYWp2ZXJzaW9uIGtlcm5lbHJlbGVhc2Uga2VybmVsdmVyc2lvbiBrZXJuZWxyZWxlYXNlIGtlcm5lbHZlcnNpb24gbHNiZGlzdGNvZGVuYW1lIGxzYmRpc3RkZXNjcmlwdGlvbiBsc2JkaXN0aWQgbHNiZGlzdHJlbGVhc2UgbHNibWFqZGlzdHJlbGVhc2UgbHNibWlub3JkaXN0cmVsZWFzZSBsc2JyZWxlYXNlIG1hY2FkZHJlc3MgbWFjYWRkcmVzc18gbWFjb3N4X2J1aWxkdmVyc2lvbiBtYWNvc3hfcHJvZHVjdG5hbWUgbWFjb3N4X3Byb2R1Y3R2ZXJzaW9uIG1hY29zeF9wcm9kdWN0dmVyc29uX21ham9yIG1hY29zeF9wcm9kdWN0dmVyc2lvbl9taW5vciBtYW51ZmFjdHVyZXIgbWVtb3J5ZnJlZSBtZW1vcnlzaXplIG5ldG1hc2sgbWV0bWFza18gbmV0d29ya18gb3BlcmF0aW5nc3lzdGVtIG9wZXJhdGluZ3N5c3RlbW1hanJlbGVhc2Ugb3BlcmF0aW5nc3lzdGVtcmVsZWFzZSBvc2ZhbWlseSBwYXJ0aXRpb25zIHBhdGggcGh5c2ljYWxwcm9jZXNzb3Jjb3VudCBwcm9jZXNzb3IgcHJvY2Vzc29yY291bnQgcHJvZHVjdG5hbWUgcHMgcHVwcGV0dmVyc2lvbiBydWJ5c2l0ZWRpciBydWJ5dmVyc2lvbiBzZWxpbnV4IHNlbGludXhfY29uZmlnX21vZGUgc2VsaW51eF9jb25maWdfcG9saWN5IHNlbGludXhfY3VycmVudF9tb2RlIHNlbGludXhfY3VycmVudF9tb2RlIHNlbGludXhfZW5mb3JjZWQgc2VsaW51eF9wb2xpY3l2ZXJzaW9uIHNlcmlhbG51bWJlciBzcF8gc3NoZHNha2V5IHNzaGVjZHNha2V5IHNzaHJzYWtleSBzd2FwZW5jcnlwdGVkIHN3YXBmcmVlIHN3YXBzaXplIHRpbWV6b25lIHR5cGUgdW5pcXVlaWQgdXB0aW1lIHVwdGltZV9kYXlzIHVwdGltZV9ob3VycyB1cHRpbWVfc2Vjb25kcyB1dWlkIHZpcnR1YWwgdmxhbnMgeGVuZG9tYWlucyB6ZnNfdmVyc2lvbiB6b25lbmFlIHpvbmVzIHpwb29sX3ZlcnNpb24ifSxpPXtjTjoiY29tbWVudCIsYjoiIyIsZToiJCJ9LG49e2NOOiJzdHJpbmciLGM6W2UuQkVdLHY6W3tiOi8nLyxlOi8nL30se2I6LyIvLGU6LyIvfV19LG89W24saSx7Y046ImtleXdvcmQiLGJLOiJjbGFzcyIsZToiJHw7IixpOi89LyxjOltlLmluaGVyaXQoZS5UTSx7YjoiKDo6KT9bQS1aYS16X11cXHcqKDo6XFx3KykqIn0pLGksbl19LHtjTjoia2V5d29yZCIsYjoiKFthLXpBLVpfKDo6KV0rICpcXHspIixjOltuLGldLHI6MH0se2NOOiJrZXl3b3JkIixiOiIoXFx9fFxceykiLHI6MH0se2NOOiJmdW5jdGlvbiIsYjoiW2EtekEtWl9dK1xccyo9PiJ9LHtjTjoiY29uc3RhbnQiLGI6Iig6Oik/KFxcYltBLVpdW2Etel9dKig6Oik/KSsiLHI6MH0se2NOOiJudW1iZXIiLGI6IihcXGIwWzAtN19dKyl8KFxcYjB4WzAtOWEtZkEtRl9dKyl8KFxcYlsxLTldWzAtOV9dKihcXC5bMC05X10rKT8pfFswX11cXGIiLHI6MH1dO3JldHVybnthbGlhc2VzOlsicHAiXSxrOmEsYzpvfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgicHl0aG9uIixmdW5jdGlvbihlKXt2YXIgdD17Y046InByb21wdCIsYjovXig+Pj58XC5cLlwuKSAvfSxyPXtjTjoic3RyaW5nIixjOltlLkJFXSx2Olt7YjovKHV8Yik/cj8nJycvLGU6LycnJy8sYzpbdF0scjoxMH0se2I6Lyh1fGIpP3I/IiIiLyxlOi8iIiIvLGM6W3RdLHI6MTB9LHtiOi8odXxyfHVyKScvLGU6LycvLHI6MTB9LHtiOi8odXxyfHVyKSIvLGU6LyIvLHI6MTB9LHtiOi8oYnxiciknLyxlOi8nL30se2I6LyhifGJyKSIvLGU6LyIvfSxlLkFTTSxlLlFTTV19LGE9e2NOOiJudW1iZXIiLHI6MCx2Olt7YjplLkJOUisiW2xMakpdPyJ9LHtiOiJcXGIoMG9bMC03XSspW2xMakpdPyJ9LHtiOmUuQ05SKyJbbExqSl0/In1dfSxpPXtjTjoicGFyYW1zIixiOi9cKC8sZTovXCkvLGM6WyJzZWxmIix0LGEscl19O3JldHVybnthbGlhc2VzOlsicHkiLCJneXAiXSxrOntrZXl3b3JkOiJhbmQgZWxpZiBpcyBnbG9iYWwgYXMgaW4gaWYgZnJvbSByYWlzZSBmb3IgZXhjZXB0IGZpbmFsbHkgcHJpbnQgaW1wb3J0IHBhc3MgcmV0dXJuIGV4ZWMgZWxzZSBicmVhayBub3Qgd2l0aCBjbGFzcyBhc3NlcnQgeWllbGQgdHJ5IHdoaWxlIGNvbnRpbnVlIGRlbCBvciBkZWYgbGFtYmRhIG5vbmxvY2FsfDEwIE5vbmUgVHJ1ZSBGYWxzZSIsYnVpbHRfaW46IkVsbGlwc2lzIE5vdEltcGxlbWVudGVkIn0saTovKDxcL3wtPnxcPykvLGM6W3QsYSxyLGUuSENNLHt2Olt7Y046ImZ1bmN0aW9uIixiSzoiZGVmIixyOjEwfSx7Y046ImNsYXNzIixiSzoiY2xhc3MifV0sZTovOi8saTovWyR7PTtcbl0vLGM6W2UuVVRNLGldfSx7Y046ImRlY29yYXRvciIsYjovQC8sZTovJC99LHtiOi9cYihwcmludHxleGVjKVwoL31dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgicSIsZnVuY3Rpb24oZSl7dmFyIHQ9e2tleXdvcmQ6ImRvIHdoaWxlIHNlbGVjdCBkZWxldGUgYnkgdXBkYXRlIGZyb20iLGNvbnN0YW50OiIwYiAxYiIsYnVpbHRfaW46Im5lZyBub3QgbnVsbCBzdHJpbmcgcmVjaXByb2NhbCBmbG9vciBjZWlsaW5nIHNpZ251bSBtb2QgeGJhciB4bG9nIGFuZCBvciBlYWNoIHNjYW4gb3ZlciBwcmlvciBtbXUgbHNxIGludiBtZDUgbHRpbWUgZ3RpbWUgY291bnQgZmlyc3QgdmFyIGRldiBtZWQgY292IGNvciBhbGwgYW55IHJhbmQgc3VtcyBwcmRzIG1pbnMgbWF4cyBmaWxscyBkZWx0YXMgcmF0aW9zIGF2Z3MgZGlmZmVyIHByZXYgbmV4dCByYW5rIHJldmVyc2UgaWFzYyBpZGVzYyBhc2MgZGVzYyBtc3VtIG1jb3VudCBtYXZnIG1kZXYgeHJhbmsgbW1pbiBtbWF4IHhwcmV2IHJvdGF0ZSBkaXN0aW5jdCBncm91cCB3aGVyZSBmbGlwIHR5cGUga2V5IHRpbCBnZXQgdmFsdWUgYXR0ciBjdXQgc2V0IHVwc2VydCByYXplIHVuaW9uIGludGVyIGV4Y2VwdCBjcm9zcyBzdiB2cyBzdWJsaXN0IGVubGlzdCByZWFkMCByZWFkMSBob3BlbiBoY2xvc2UgaGRlbCBoc3ltIGhjb3VudCBwZWFjaCBzeXN0ZW0gbHRyaW0gcnRyaW0gdHJpbSBsb3dlciB1cHBlciBzc3IgdmlldyB0YWJsZXMgdmlld3MgY29scyB4Y29scyBrZXlzIHhrZXkgeGNvbCB4YXNjIHhkZXNjIGZrZXlzIG1ldGEgbGogYWogYWowIGlqIHBqIGFzb2YgdWogd3cgd2ogd2oxIGZieSB4Z3JvdXAgdW5ncm91cCBlaiBzYXZlIGxvYWQgcnNhdmUgcmxvYWQgc2hvdyBjc3YgcGFyc2UgZXZhbCBtaW4gbWF4IGF2ZyB3YXZnIHdzdW0gc2luIGNvcyB0YW4gc3VtIix0eXBlbmFtZToiYGZsb2F0IGBkb3VibGUgaW50IGB0aW1lc3RhbXAgYHRpbWVzcGFuIGBkYXRldGltZSBgdGltZSBgYm9vbGVhbiBgc3ltYm9sIGBjaGFyIGBieXRlIGBzaG9ydCBgbG9uZyBgcmVhbCBgbW9udGggYGRhdGUgYG1pbnV0ZSBgc2Vjb25kIGBndWlkIn07cmV0dXJue2FsaWFzZXM6WyJrIiwia2RiIl0sazp0LGw6L1xiKGA/KVtBLVphLXowLTlfXStcYi8sYzpbZS5DTENNLGUuUVNNLGUuQ05NXX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInIiLGZ1bmN0aW9uKGUpe3ZhciB0PSIoW2EtekEtWl18XFwuW2EtekEtWi5dKVthLXpBLVowLTkuX10qIjtyZXR1cm57YzpbZS5IQ00se2I6dCxsOnQsazp7a2V5d29yZDoiZnVuY3Rpb24gaWYgaW4gYnJlYWsgbmV4dCByZXBlYXQgZWxzZSBmb3IgcmV0dXJuIHN3aXRjaCB3aGlsZSB0cnkgdHJ5Q2F0Y2h8MTAgc3RvcCB3YXJuaW5nIHJlcXVpcmUgbGlicmFyeSBhdHRhY2ggZGV0YWNoIHNvdXJjZSBzZXRNZXRob2Qgc2V0R2VuZXJpYyBzZXRHcm91cEdlbmVyaWMgc2V0Q2xhc3MgLi4ufDEwIixsaXRlcmFsOiJOVUxMIE5BIFRSVUUgRkFMU0UgVCBGIEluZiBOYU4gTkFfaW50ZWdlcl98MTAgTkFfcmVhbF98MTAgTkFfY2hhcmFjdGVyX3wxMCBOQV9jb21wbGV4X3wxMCJ9LHI6MH0se2NOOiJudW1iZXIiLGI6IjBbeFhdWzAtOWEtZkEtRl0rW0xpXT9cXGIiLHI6MH0se2NOOiJudW1iZXIiLGI6IlxcZCsoPzpbZUVdWytcXC1dP1xcZCopP0xcXGIiLHI6MH0se2NOOiJudW1iZXIiLGI6IlxcZCtcXC4oPyFcXGQpKD86aVxcYik/IixyOjB9LHtjTjoibnVtYmVyIixiOiJcXGQrKD86XFwuXFxkKik/KD86W2VFXVsrXFwtXT9cXGQqKT9pP1xcYiIscjowfSx7Y046Im51bWJlciIsYjoiXFwuXFxkKyg/OltlRV1bK1xcLV0/XFxkKik/aT9cXGIiLHI6MH0se2I6ImAiLGU6ImAiLHI6MH0se2NOOiJzdHJpbmciLGM6W2UuQkVdLHY6W3tiOiciJyxlOiciJ30se2I6IiciLGU6IicifV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInJpYiIsZnVuY3Rpb24oZSl7cmV0dXJue2s6IkFyY2hpdmVSZWNvcmQgQXJlYUxpZ2h0U291cmNlIEF0bW9zcGhlcmUgQXR0cmlidXRlIEF0dHJpYnV0ZUJlZ2luIEF0dHJpYnV0ZUVuZCBCYXNpcyBCZWdpbiBCbG9iYnkgQm91bmQgQ2xpcHBpbmcgQ2xpcHBpbmdQbGFuZSBDb2xvciBDb2xvclNhbXBsZXMgQ29uY2F0VHJhbnNmb3JtIENvbmUgQ29vcmRpbmF0ZVN5c3RlbSBDb29yZFN5c1RyYW5zZm9ybSBDcm9wV2luZG93IEN1cnZlcyBDeWxpbmRlciBEZXB0aE9mRmllbGQgRGV0YWlsIERldGFpbFJhbmdlIERpc2sgRGlzcGxhY2VtZW50IERpc3BsYXkgRW5kIEVycm9ySGFuZGxlciBFeHBvc3VyZSBFeHRlcmlvciBGb3JtYXQgRnJhbWVBc3BlY3RSYXRpbyBGcmFtZUJlZ2luIEZyYW1lRW5kIEdlbmVyYWxQb2x5Z29uIEdlb21ldHJpY0FwcHJveGltYXRpb24gR2VvbWV0cnkgSGlkZXIgSHlwZXJib2xvaWQgSWRlbnRpdHkgSWxsdW1pbmF0ZSBJbWFnZXIgSW50ZXJpb3IgTGlnaHRTb3VyY2UgTWFrZUN1YmVGYWNlRW52aXJvbm1lbnQgTWFrZUxhdExvbmdFbnZpcm9ubWVudCBNYWtlU2hhZG93IE1ha2VUZXh0dXJlIE1hdHRlIE1vdGlvbkJlZ2luIE1vdGlvbkVuZCBOdVBhdGNoIE9iamVjdEJlZ2luIE9iamVjdEVuZCBPYmplY3RJbnN0YW5jZSBPcGFjaXR5IE9wdGlvbiBPcmllbnRhdGlvbiBQYXJhYm9sb2lkIFBhdGNoIFBhdGNoTWVzaCBQZXJzcGVjdGl2ZSBQaXhlbEZpbHRlciBQaXhlbFNhbXBsZXMgUGl4ZWxWYXJpYW5jZSBQb2ludHMgUG9pbnRzR2VuZXJhbFBvbHlnb25zIFBvaW50c1BvbHlnb25zIFBvbHlnb24gUHJvY2VkdXJhbCBQcm9qZWN0aW9uIFF1YW50aXplIFJlYWRBcmNoaXZlIFJlbGF0aXZlRGV0YWlsIFJldmVyc2VPcmllbnRhdGlvbiBSb3RhdGUgU2NhbGUgU2NyZWVuV2luZG93IFNoYWRpbmdJbnRlcnBvbGF0aW9uIFNoYWRpbmdSYXRlIFNodXR0ZXIgU2lkZXMgU2tldyBTb2xpZEJlZ2luIFNvbGlkRW5kIFNwaGVyZSBTdWJkaXZpc2lvbk1lc2ggU3VyZmFjZSBUZXh0dXJlQ29vcmRpbmF0ZXMgVG9ydXMgVHJhbnNmb3JtIFRyYW5zZm9ybUJlZ2luIFRyYW5zZm9ybUVuZCBUcmFuc2Zvcm1Qb2ludHMgVHJhbnNsYXRlIFRyaW1DdXJ2ZSBXb3JsZEJlZ2luIFdvcmxkRW5kIixpOiI8LyIsYzpbZS5IQ00sZS5DTk0sZS5BU00sZS5RU01dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgicm9ib2NvbmYiLGZ1bmN0aW9uKGUpe3ZhciB0PSJbYS16QS1aLV9dW15cbntcclxuXStcXHsiO3JldHVybnthbGlhc2VzOlsiZ3JhcGgiLCJpbnN0YW5jZXMiXSxjSTohMCxrOiJpbXBvcnQiLGM6W3tjTjoiZmFjZXQiLGI6Il5mYWNldCAiK3QsZToifSIsazoiZmFjZXQgaW5zdGFsbGVyIGV4cG9ydHMgY2hpbGRyZW4gZXh0ZW5kcyIsYzpbZS5IQ01dfSx7Y046Imluc3RhbmNlLW9mIixiOiJeaW5zdGFuY2Ugb2YgIit0LGU6In0iLGs6Im5hbWUgY291bnQgY2hhbm5lbHMgaW5zdGFuY2UtZGF0YSBpbnN0YW5jZS1zdGF0ZSBpbnN0YW5jZSBvZiIsYzpbe2NOOiJrZXl3b3JkIixiOiJbYS16QS1aLV9dKyggfAkpKjoifSxlLkhDTV19LHtjTjoiY29tcG9uZW50IixiOiJeIit0LGU6In0iLGw6IlxcKD9bYS16QS1aXStcXCk/IixrOiJpbnN0YWxsZXIgZXhwb3J0cyBjaGlsZHJlbiBleHRlbmRzIGltcG9ydHMgZmFjZXRzIGFsaWFzIChvcHRpb25hbCkiLGM6W3tjTjoic3RyaW5nIixiOiJcXC5bYS16QS1aLV9dKyIsZToiXFxzfCx8OyIsZUU6ITB9LGUuSENNXX0sZS5IQ01dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgicnNsIixmdW5jdGlvbihlKXtyZXR1cm57azp7a2V5d29yZDoiZmxvYXQgY29sb3IgcG9pbnQgbm9ybWFsIHZlY3RvciBtYXRyaXggd2hpbGUgZm9yIGlmIGRvIHJldHVybiBlbHNlIGJyZWFrIGV4dGVybiBjb250aW51ZSIsYnVpbHRfaW46ImFicyBhY29zIGFtYmllbnQgYXJlYSBhc2luIGF0YW4gYXRtb3NwaGVyZSBhdHRyaWJ1dGUgY2FsY3VsYXRlbm9ybWFsIGNlaWwgY2VsbG5vaXNlIGNsYW1wIGNvbXAgY29uY2F0IGNvcyBkZWdyZWVzIGRlcHRoIERlcml2IGRpZmZ1c2UgZGlzdGFuY2UgRHUgRHYgZW52aXJvbm1lbnQgZXhwIGZhY2Vmb3J3YXJkIGZpbHRlcnN0ZXAgZmxvb3IgZm9ybWF0IGZyZXNuZWwgaW5jaWRlbnQgbGVuZ3RoIGxpZ2h0c291cmNlIGxvZyBtYXRjaCBtYXggbWluIG1vZCBub2lzZSBub3JtYWxpemUgbnRyYW5zZm9ybSBvcHBvc2l0ZSBvcHRpb24gcGhvbmcgcG5vaXNlIHBvdyBwcmludGYgcHRsaW5lZCByYWRpYW5zIHJhbmRvbSByZWZsZWN0IHJlZnJhY3QgcmVuZGVyaW5mbyByb3VuZCBzZXRjb21wIHNldHhjb21wIHNldHljb21wIHNldHpjb21wIHNoYWRvdyBzaWduIHNpbiBzbW9vdGhzdGVwIHNwZWN1bGFyIHNwZWN1bGFyYnJkZiBzcGxpbmUgc3FydCBzdGVwIHRhbiB0ZXh0dXJlIHRleHR1cmVpbmZvIHRyYWNlIHRyYW5zZm9ybSB2dHJhbnNmb3JtIHhjb21wIHljb21wIHpjb21wIn0saToiPC8iLGM6W2UuQ0xDTSxlLkNCQ00sZS5RU00sZS5BU00sZS5DTk0se2NOOiJwcmVwcm9jZXNzb3IiLGI6IiMiLGU6IiQifSx7Y046InNoYWRlciIsYks6InN1cmZhY2UgZGlzcGxhY2VtZW50IGxpZ2h0IHZvbHVtZSBpbWFnZXIiLGU6IlxcKCJ9LHtjTjoic2hhZGluZyIsYks6ImlsbHVtaW5hdGUgaWxsdW1pbmFuY2UgZ2F0aGVyIixlOiJcXCgifV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJydWxlc2xhbmd1YWdlIixmdW5jdGlvbihlKXtyZXR1cm57azp7a2V5d29yZDoiQklMTF9QRVJJT0QgQklMTF9TVEFSVCBCSUxMX1NUT1AgUlNfRUZGRUNUSVZFX1NUQVJUIFJTX0VGRkVDVElWRV9TVE9QIFJTX0pVUklTX0NPREUgUlNfT1BDT19DT0RFIElOVERBRERBVFRSSUJVVEV8NSBJTlREQUREVk1TR3w1IElOVERCTE9DS09QfDUgSU5UREJMT0NLT1BOQXw1IElOVERDTE9TRXw1IElOVERDT1VOVHw1IElOVERDT1VOVFNUQVRVU0NPREV8NSBJTlREQ1JFQVRFTUFTS3w1IElOVERDUkVBVEVEQVlNQVNLfDUgSU5URENSRUFURUZBQ1RPUk1BU0t8NSBJTlREQ1JFQVRFSEFORExFfDUgSU5URENSRUFURU9WRVJSSURFREFZTUFTS3w1IElOVERDUkVBVEVPVkVSUklERU1BU0t8NSBJTlREQ1JFQVRFU1RBVFVTQ09ERU1BU0t8NSBJTlREQ1JFQVRFVE9VUEVSSU9EfDUgSU5URERFTEVURXw1IElOVERESVBURVNUfDUgSU5UREVYUE9SVHw1IElOVERHRVRFUlJPUkNPREV8NSBJTlRER0VURVJST1JNRVNTQUdFfDUgSU5URElTRVFVQUx8NSBJTlRESk9JTnw1IElOVERMT0FEfDUgSU5URExPQURBQ1RVQUxDVVR8NSBJTlRETE9BRERBVEVTfDUgSU5URExPQURISVNUfDUgSU5URExPQURMSVNUfDUgSU5URExPQURMSVNUREFURVN8NSBJTlRETE9BRExJU1RFTkVSR1l8NSBJTlRETE9BRExJU1RISVNUfDUgSU5URExPQURSRUxBVEVEQ0hBTk5FTHw1IElOVERMT0FEU1B8NSBJTlRETE9BRFNUQUdJTkd8NSBJTlRETE9BRFVPTXw1IElOVERMT0FEVU9NREFURVN8NSBJTlRETE9BRFVPTUhJU1R8NSBJTlRETE9BRFZFUlNJT058NSBJTlRET1BFTnw1IElOVERSRUFERklSU1R8NSBJTlREUkVBRE5FWFR8NSBJTlREUkVDQ09VTlR8NSBJTlREUkVMRUFTRXw1IElOVERSRVBMQUNFfDUgSU5URFJPTExBVkd8NSBJTlREUk9MTFBFQUt8NSBJTlREU0NBTEFST1B8NSBJTlREU0NBTEV8NSBJTlREU0VUQVRUUklCVVRFfDUgSU5URFNFVERTVFBBUlRJQ0lQQU5UfDUgSU5URFNFVFNUUklOR3w1IElOVERTRVRWQUxVRXw1IElOVERTRVRWQUxVRVNUQVRVU3w1IElOVERTSElGVFNUQVJUVElNRXw1IElOVERTTU9PVEh8NSBJTlREU09SVHw1IElOVERTUElLRVRFU1R8NSBJTlREU1VCU0VUfDUgSU5URFRPVXw1IElOVERUT1VSRUxFQVNFfDUgSU5URFRPVVZBTFVFfDUgSU5URFVQREFURVNUQVRTfDUgSU5URFZBTFVFfDUgU1RERVYgSU5URERFTEVURUVYfDUgSU5URExPQURFWEFDVFVBTHw1IElOVERMT0FERVhDVVR8NSBJTlRETE9BREVYREFURVN8NSBJTlRETE9BREVYfDUgSU5URExPQURFWFJFTEFURURDSEFOTkVMfDUgSU5URFNBVkVFWHw1IE1WTE9BRHw1IE1WTE9BREFDQ1R8NSBNVkxPQURBQ0NUREFURVN8NSBNVkxPQURBQ0NUSElTVHw1IE1WTE9BRERBVEVTfDUgTVZMT0FESElTVHw1IE1WTE9BRExJU1R8NSBNVkxPQURMSVNUREFURVN8NSBNVkxPQURMSVNUSElTVHw1IElGIEZPUiBORVhUIERPTkUgU0VMRUNUIEVORCBDQUxMIEFCT1JUIENMRUFSIENIQU5ORUwgRkFDVE9SIExJU1QgTlVNQkVSIE9WRVJSSURFIFNFVCBXRUVLIERJU1RSSUJVVElPTk5PREUgRUxTRSBXSEVOIFRIRU4gT1RIRVJXSVNFIElFTlVNIENTViBJTkNMVURFIExFQVZFIFJJREVSIFNBVkUgREVMRVRFIE5PVkFMVUUgU0VDVElPTiBXQVJOIFNBVkVfVVBEQVRFIERFVEVSTUlOQU5UIExBQkVMIFJFUE9SVCBSRVZFTlVFIEVBQ0ggSU4gRlJPTSBUT1RBTCBDSEFSR0UgQkxPQ0sgQU5EIE9SIENTVl9GSUxFIFJBVEVfQ09ERSBBVVhJTElBUllfREVNQU5EIFVJREFDQ09VTlQgUlMgQklMTF9QRVJJT0RfU0VMRUNUIEhPVVJTX1BFUl9NT05USCBJTlREX0VSUk9SX1NUT1AgU0VBU09OX1NDSEVEVUxFX05BTUUgQUNDT1VOVEZBQ1RPUiBBUlJBWVVQUEVSQk9VTkQgQ0FMTFNUT1JFRFBST0MgR0VUQURPQ09OTkVDVElPTiBHRVRDT05ORUNUIEdFVERBVEFTT1VSQ0UgR0VUUVVBTElGSUVSIEdFVFVTRVJJRCBIQVNWQUxVRSBMSVNUQ09VTlQgTElTVE9QIExJU1RVUERBVEUgTElTVFZBTFVFIFBST1JBVEVGQUNUT1IgUlNQUk9SQVRFIFNFVEJJTlBBVEggU0VUREJNT05JVE9SIFdRX09QRU4gQklMTElOR0hPVVJTIERBVEUgREFURUZST01GTE9BVCBEQVRFVElNRUZST01TVFJJTkcgREFURVRJTUVUT1NUUklORyBEQVRFVE9GTE9BVCBEQVkgREFZRElGRiBEQVlOQU1FIERCREFURVRJTUUgSE9VUiBNSU5VVEUgTU9OVEggTU9OVEhESUZGIE1PTlRISE9VUlMgTU9OVEhOQU1FIFJPVU5EREFURSBTQU1FV0VFS0RBWUxBU1RZRUFSIFNFQ09ORCBXRUVLREFZIFdFRUtESUZGIFlFQVIgWUVBUkRBWSBZRUFSU1RSIENPTVBTVU0gSElTVENPVU5UIEhJU1RNQVggSElTVE1JTiBISVNUTUlOTlogSElTVFZBTFVFIE1BWE5SQU5HRSBNQVhSQU5HRSBNSU5SQU5HRSBDT01QSUtWQSBDT01QS1ZBIENPTVBLVkFSRlJPTUtRS1cgQ09NUExGIElEQVRUUiBGTEFHIExGMktXIExGMktXSCBNQVhLVyBQT1dFUkZBQ1RPUiBSRUFESU5HMlVTQUdFIEFWR1NFQVNPTiBNQVhTRUFTT04gTU9OVEhMWU1FUkdFIFNFQVNPTlZBTFVFIFNVTVNFQVNPTiBBQ0NUUkVBRERBVEVTIEFDQ1RUQUJMRUxPQUQgQ09ORklHQUREIENPTkZJR0dFVCBDUkVBVEVPQkpFQ1QgQ1JFQVRFUkVQT1JUIEVNQUlMQ0xJRU5UIEVYUEJMS01ETVVTQUdFIEVYUE1ETVVTQUdFIEVYUE9SVF9VU0FHRSBGQUNUT1JJTkVGRkVDVCBHRVRVU0VSU1BFQ0lGSUVEU1RPUCBJTkVGRkVDVCBJU0hPTElEQVkgUlVOUkFURSBTQVZFX1BST0ZJTEUgU0VUUkVQT1JUVElUTEUgVVNFUkVYSVQgV0FURk9SUlVOUkFURSBUTyBUQUJMRSBBQ09TIEFTSU4gQVRBTiBBVEFOMiBCSVRBTkQgQ0VJTCBDT1MgQ09TRUNBTlQgQ09TSCBDT1RBTkdFTlQgRElWUVVPVCBESVZSRU0gRVhQIEZBQlMgRkxPT1IgRk1PRCBGUkVQTSBGUkVYUE4gTE9HIExPRzEwIE1BWCBNQVhOIE1JTiBNSU5OWiBNT0RGIFBPVyBST1VORCBST1VORDJWQUxVRSBST1VORElOVCBTRUNBTlQgU0lOIFNJTkggU1FST09UIFRBTiBUQU5IIEZMT0FUMlNUUklORyBGTE9BVDJTVFJJTkdOQyBJTlNUUiBMRUZUIExFTiBMVFJJTSBNSUQgUklHSFQgUlRSSU0gU1RSSU5HIFNUUklOR05DIFRPTE9XRVIgVE9VUFBFUiBUUklNIE5VTURBWVMgUkVBRF9EQVRFIFNUQUdJTkciLGJ1aWx0X2luOiJJREVOVElGSUVSIE9QVElPTlMgWE1MX0VMRU1FTlQgWE1MX09QIFhNTF9FTEVNRU5UX09GIERPTURPQ0NSRUFURSBET01ET0NMT0FERklMRSBET01ET0NMT0FEWE1MIERPTURPQ1NBVkVGSUxFIERPTURPQ0dFVFJPT1QgRE9NRE9DQUREUEkgRE9NTk9ERUdFVE5BTUUgRE9NTk9ERUdFVFRZUEUgRE9NTk9ERUdFVFZBTFVFIERPTU5PREVHRVRDSElMRENUIERPTU5PREVHRVRGSVJTVENISUxEIERPTU5PREVHRVRTSUJMSU5HIERPTU5PREVDUkVBVEVDSElMREVMRU1FTlQgRE9NTk9ERVNFVEFUVFJJQlVURSBET01OT0RFR0VUQ0hJTERFTEVNRU5UQ1QgRE9NTk9ERUdFVEZJUlNUQ0hJTERFTEVNRU5UIERPTU5PREVHRVRTSUJMSU5HRUxFTUVOVCBET01OT0RFR0VUQVRUUklCVVRFQ1QgRE9NTk9ERUdFVEFUVFJJQlVURUkgRE9NTk9ERUdFVEFUVFJJQlVURUJZTkFNRSBET01OT0RFR0VUQllOQU1FIn0sYzpbZS5DTENNLGUuQ0JDTSxlLkFTTSxlLlFTTSxlLkNOTSx7Y046ImFycmF5IixiOiIjW2EtekEtWiAuXSsifV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJydXN0IixmdW5jdGlvbihlKXt2YXIgdD1lLmluaGVyaXQoZS5DQkNNKTtyZXR1cm4gdC5jLnB1c2goInNlbGYiKSx7YWxpYXNlczpbInJzIl0sazp7a2V5d29yZDoiYWxpZ25vZiBhcyBiZSBib3ggYnJlYWsgY29uc3QgY29udGludWUgY3JhdGUgZG8gZWxzZSBlbnVtIGV4dGVybiBmYWxzZSBmbiBmb3IgaWYgaW1wbCBpbiBsZXQgbG9vcCBtYXRjaCBtb2QgbXV0IG9mZnNldG9mIG9uY2UgcHJpdiBwcm9jIHB1YiBwdXJlIHJlZiByZXR1cm4gc2VsZiBzaXplb2Ygc3RhdGljIHN0cnVjdCBzdXBlciB0cmFpdCB0cnVlIHR5cGUgdHlwZW9mIHVuc2FmZSB1bnNpemVkIHVzZSB2aXJ0dWFsIHdoaWxlIHlpZWxkIGludCBpOCBpMTYgaTMyIGk2NCB1aW50IHU4IHUzMiB1NjQgZmxvYXQgZjMyIGY2NCBzdHIgY2hhciBib29sIixidWlsdF9pbjoiYXNzZXJ0ISBhc3NlcnRfZXEhIGJpdGZsYWdzISBieXRlcyEgY2ZnISBjb2whIGNvbmNhdCEgY29uY2F0X2lkZW50cyEgZGVidWdfYXNzZXJ0ISBkZWJ1Z19hc3NlcnRfZXEhIGVudiEgcGFuaWMhIGZpbGUhIGZvcm1hdCEgZm9ybWF0X2FyZ3MhIGluY2x1ZGVfYmluISBpbmNsdWRlX3N0ciEgbGluZSEgbG9jYWxfZGF0YV9rZXkhIG1vZHVsZV9wYXRoISBvcHRpb25fZW52ISBwcmludCEgcHJpbnRsbiEgc2VsZWN0ISBzdHJpbmdpZnkhIHRyeSEgdW5pbXBsZW1lbnRlZCEgdW5yZWFjaGFibGUhIHZlYyEgd3JpdGUhIHdyaXRlbG4hIn0sbDplLklSKyIhPyIsaToiPC8iLGM6W2UuQ0xDTSx0LGUuaW5oZXJpdChlLlFTTSx7aTpudWxsfSkse2NOOiJzdHJpbmciLGI6L3IoIyopIi4qPyJcMSg/ISMpL30se2NOOiJzdHJpbmciLGI6LydcXD8oeFx3ezJ9fHVcd3s0fXxVXHd7OH18LiknL30se2I6LydbYS16QS1aX11bYS16QS1aMC05X10qL30se2NOOiJudW1iZXIiLGI6L1xiKDBbeGJdW0EtWmEtejAtOV9dK3xbMC05X10rKFwuWzAtOV9dKyk/KFtlRV1bKy1dP1swLTlfXSspPykoW3VpZl0oOHwxNnwzMnw2NCk/KT8vLHI6MH0se2NOOiJmdW5jdGlvbiIsYks6ImZuIixlOiIoXFwofDwpIixlRTohMCxjOltlLlVUTV19LHtjTjoicHJlcHJvY2Vzc29yIixiOiIjXFxbIixlOiJcXF0ifSx7Yks6InR5cGUiLGU6Iig9fDwpIixjOltlLlVUTV0saToiXFxTIn0se2JLOiJ0cmFpdCBlbnVtIixlOiIoe3w8KSIsYzpbZS5VVE1dLGk6IlxcUyJ9LHtiOmUuSVIrIjo6In0se2I6Ii0+In1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgic2NhbGEiLGZ1bmN0aW9uKGUpe3ZhciB0PXtjTjoiYW5ub3RhdGlvbiIsYjoiQFtBLVphLXpdKyJ9LHI9e2NOOiJzdHJpbmciLGI6J3U/cj8iIiInLGU6JyIiIicscjoxMH0sYT17Y046InN5bWJvbCIsYjoiJ1xcd1tcXHdcXGRfXSooPyEnKSJ9LGk9e2NOOiJ0eXBlIixiOiJcXGJbQS1aXVtBLVphLXowLTlfXSoiLHI6MH0sbj17Y046InRpdGxlIixiOi9bXjAtOVxuXHQgIicoKSwuYHt9XFtcXTo7XVteXG5cdCAiJygpLC5ge31cW1xdOjtdK3xbXjAtOVxuXHQgIicoKSwuYHt9XFtcXTo7PV0vLHI6MH0sbz17Y046ImNsYXNzIixiSzoiY2xhc3Mgb2JqZWN0IHRyYWl0IHR5cGUiLGU6L1s6PXtcWyhcbjtdLyxjOlt7Y046ImtleXdvcmQiLGJLOiJleHRlbmRzIHdpdGgiLHI6MTB9LG5dfSxzPXtjTjoiZnVuY3Rpb24iLGJLOiJkZWYgdmFsIixlOi9bOj17XFsoXG47XS8sYzpbbl19O3JldHVybntrOntsaXRlcmFsOiJ0cnVlIGZhbHNlIG51bGwiLGtleXdvcmQ6InR5cGUgeWllbGQgbGF6eSBvdmVycmlkZSBkZWYgd2l0aCB2YWwgdmFyIHNlYWxlZCBhYnN0cmFjdCBwcml2YXRlIHRyYWl0IG9iamVjdCBpZiBmb3JTb21lIGZvciB3aGlsZSB0aHJvdyBmaW5hbGx5IHByb3RlY3RlZCBleHRlbmRzIGltcG9ydCBmaW5hbCByZXR1cm4gZWxzZSBicmVhayBuZXcgY2F0Y2ggc3VwZXIgY2xhc3MgY2FzZSBwYWNrYWdlIGRlZmF1bHQgdHJ5IHRoaXMgbWF0Y2ggY29udGludWUgdGhyb3dzIGltcGxpY2l0In0sYzpbZS5DTENNLGUuQ0JDTSxyLGUuUVNNLGEsaSxzLG8sZS5DTk0sdF19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJzY2hlbWUiLGZ1bmN0aW9uKGUpe3ZhciB0PSJbXlxcKFxcKVxcW1xcXVxce1xcfVwiLCdgOyN8XFxcXFxcc10rIixyPSIoXFwtfFxcKyk/XFxkKyhbLi9dXFxkKyk/IixhPXIrIlsrXFwtXSIrcisiaSIsaT17YnVpbHRfaW46ImNhc2UtbGFtYmRhIGNhbGwvY2MgY2xhc3MgZGVmaW5lLWNsYXNzIGV4aXQtaGFuZGxlciBmaWVsZCBpbXBvcnQgaW5oZXJpdCBpbml0LWZpZWxkIGludGVyZmFjZSBsZXQqLXZhbHVlcyBsZXQtdmFsdWVzIGxldC9lYyBtaXhpbiBvcHQtbGFtYmRhIG92ZXJyaWRlIHByb3RlY3QgcHJvdmlkZSBwdWJsaWMgcmVuYW1lIHJlcXVpcmUgcmVxdWlyZS1mb3Itc3ludGF4IHN5bnRheCBzeW50YXgtY2FzZSBzeW50YXgtZXJyb3IgdW5pdC9zaWcgdW5sZXNzIHdoZW4gd2l0aC1zeW50YXggYW5kIGJlZ2luIGNhbGwtd2l0aC1jdXJyZW50LWNvbnRpbnVhdGlvbiBjYWxsLXdpdGgtaW5wdXQtZmlsZSBjYWxsLXdpdGgtb3V0cHV0LWZpbGUgY2FzZSBjb25kIGRlZmluZSBkZWZpbmUtc3ludGF4IGRlbGF5IGRvIGR5bmFtaWMtd2luZCBlbHNlIGZvci1lYWNoIGlmIGxhbWJkYSBsZXQgbGV0KiBsZXQtc3ludGF4IGxldHJlYyBsZXRyZWMtc3ludGF4IG1hcCBvciBzeW50YXgtcnVsZXMgJyAqICsgLCAsQCAtIC4uLiAvIDsgPCA8PSA9ID0+ID4gPj0gYCBhYnMgYWNvcyBhbmdsZSBhcHBlbmQgYXBwbHkgYXNpbiBhc3NvYyBhc3NxIGFzc3YgYXRhbiBib29sZWFuPyBjYWFyIGNhZHIgY2FsbC13aXRoLWlucHV0LWZpbGUgY2FsbC13aXRoLW91dHB1dC1maWxlIGNhbGwtd2l0aC12YWx1ZXMgY2FyIGNkZGRhciBjZGRkZHIgY2RyIGNlaWxpbmcgY2hhci0+aW50ZWdlciBjaGFyLWFscGhhYmV0aWM/IGNoYXItY2k8PT8gY2hhci1jaTw/cGhwIGVjaG8gJzwnLic/JzsgPz5waHAgZWNobyAnPCcuJz8nOyA/PiBjaGFyLWNpPT8gY2hhci1jaT49PyBjaGFyLWNpPj8gY2hhci1kb3duY2FzZSBjaGFyLWxvd2VyLWNhc2U/IGNoYXItbnVtZXJpYz8gY2hhci1yZWFkeT8gY2hhci11cGNhc2UgY2hhci11cHBlci1jYXNlPyBjaGFyLXdoaXRlc3BhY2U/IGNoYXI8PT8gY2hhcjw/cGhwIGVjaG8gJzwnLic/JzsgPz4gY2hhcj0/IGNoYXI+PT8gY2hhcj4/IGNoYXI/IGNsb3NlLWlucHV0LXBvcnQgY2xvc2Utb3V0cHV0LXBvcnQgY29tcGxleD8gY29ucyBjb3MgY3VycmVudC1pbnB1dC1wb3J0IGN1cnJlbnQtb3V0cHV0LXBvcnQgZGVub21pbmF0b3IgZGlzcGxheSBlb2Ytb2JqZWN0PyBlcT8gZXF1YWw/IGVxdj8gZXZhbCBldmVuPyBleGFjdC0+aW5leGFjdCBleGFjdD8gZXhwIGV4cHQgZmxvb3IgZm9yY2UgZ2NkIGltYWctcGFydCBpbmV4YWN0LT5leGFjdCBpbmV4YWN0PyBpbnB1dC1wb3J0PyBpbnRlZ2VyLT5jaGFyIGludGVnZXI/IGludGVyYWN0aW9uLWVudmlyb25tZW50IGxjbSBsZW5ndGggbGlzdCBsaXN0LT5zdHJpbmcgbGlzdC0+dmVjdG9yIGxpc3QtcmVmIGxpc3QtdGFpbCBsaXN0PyBsb2FkIGxvZyBtYWduaXR1ZGUgbWFrZS1wb2xhciBtYWtlLXJlY3Rhbmd1bGFyIG1ha2Utc3RyaW5nIG1ha2UtdmVjdG9yIG1heCBtZW1iZXIgbWVtcSBtZW12IG1pbiBtb2R1bG8gbmVnYXRpdmU/IG5ld2xpbmUgbm90IG51bGwtZW52aXJvbm1lbnQgbnVsbD8gbnVtYmVyLT5zdHJpbmcgbnVtYmVyPyBudW1lcmF0b3Igb2RkPyBvcGVuLWlucHV0LWZpbGUgb3Blbi1vdXRwdXQtZmlsZSBvdXRwdXQtcG9ydD8gcGFpcj8gcGVlay1jaGFyIHBvcnQ/IHBvc2l0aXZlPyBwcm9jZWR1cmU/IHF1YXNpcXVvdGUgcXVvdGUgcXVvdGllbnQgcmF0aW9uYWw/IHJhdGlvbmFsaXplIHJlYWQgcmVhZC1jaGFyIHJlYWwtcGFydCByZWFsPyByZW1haW5kZXIgcmV2ZXJzZSByb3VuZCBzY2hlbWUtcmVwb3J0LWVudmlyb25tZW50IHNldCEgc2V0LWNhciEgc2V0LWNkciEgc2luIHNxcnQgc3RyaW5nIHN0cmluZy0+bGlzdCBzdHJpbmctPm51bWJlciBzdHJpbmctPnN5bWJvbCBzdHJpbmctYXBwZW5kIHN0cmluZy1jaTw9PyBzdHJpbmctY2k8P3BocCBlY2hvICc8Jy4nPyc7ID8+IHN0cmluZy1jaT0/IHN0cmluZy1jaT49PyBzdHJpbmctY2k+PyBzdHJpbmctY29weSBzdHJpbmctZmlsbCEgc3RyaW5nLWxlbmd0aCBzdHJpbmctcmVmIHN0cmluZy1zZXQhIHN0cmluZzw9PyBzdHJpbmc8P3BocCBlY2hvICc8Jy4nPyc7ID8+IHN0cmluZz0/IHN0cmluZz49PyBzdHJpbmc+PyBzdHJpbmc/IHN1YnN0cmluZyBzeW1ib2wtPnN0cmluZyBzeW1ib2w/IHRhbiB0cmFuc2NyaXB0LW9mZiB0cmFuc2NyaXB0LW9uIHRydW5jYXRlIHZhbHVlcyB2ZWN0b3IgdmVjdG9yLT5saXN0IHZlY3Rvci1maWxsISB2ZWN0b3ItbGVuZ3RoIHZlY3Rvci1yZWYgdmVjdG9yLXNldCEgd2l0aC1pbnB1dC1mcm9tLWZpbGUgd2l0aC1vdXRwdXQtdG8tZmlsZSB3cml0ZSB3cml0ZS1jaGFyIHplcm8/In0sbj17Y046InNoZWJhbmciLGI6Il4jISIsZToiJCJ9LG89e2NOOiJsaXRlcmFsIixiOiIoI3R8I2Z8I1xcXFwiK3QrInwjXFxcXC4pIn0scz17Y046Im51bWJlciIsdjpbe2I6cixyOjB9LHtiOmEscjowfSx7YjoiI2JbMC0xXSsoL1swLTFdKyk/In0se2I6IiNvWzAtN10rKC9bMC03XSspPyJ9LHtiOiIjeFswLTlhLWZdKygvWzAtOWEtZl0rKT8ifV19LGw9ZS5RU00sYz17Y046ImNvbW1lbnQiLHY6W3tiOiI7IixlOiIkIixyOjB9LHtiOiIjXFx8IixlOiJcXHwjIn1dfSxwPXtiOnQscjowfSxkPXtjTjoidmFyaWFibGUiLGI6IiciK3R9LHU9e2VXOiEwLHI6MH0sbT17Y046Imxpc3QiLHY6W3tiOiJcXCgiLGU6IlxcKSJ9LHtiOiJcXFsiLGU6IlxcXSJ9XSxjOlt7Y046ImtleXdvcmQiLGI6dCxsOnQsazppfSx1XX07cmV0dXJuIHUuYz1bbyxzLGwsYyxwLGQsbV0se2k6L1xTLyxjOltuLHMsbCxjLGQsbV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJzY2lsYWIiLGZ1bmN0aW9uKGUpe3ZhciB0PVtlLkNOTSx7Y046InN0cmluZyIsYjoiJ3xcIiIsZToiJ3xcIiIsYzpbZS5CRSx7YjoiJycifV19XTtyZXR1cm57YWxpYXNlczpbInNjaSJdLGs6e2tleXdvcmQ6ImFib3J0IGJyZWFrIGNhc2UgY2xlYXIgY2F0Y2ggY29udGludWUgZG8gZWxzZWlmIGVsc2UgZW5kZnVuY3Rpb24gZW5kIGZvciBmdW5jdGlvbmdsb2JhbCBpZiBwYXVzZSByZXR1cm4gcmVzdW1lIHNlbGVjdCB0cnkgdGhlbiB3aGlsZSVmICVGICV0ICVUICVwaSAlZXBzICVpbmYgJW5hbiAlZSAlaSAleiAlcyIsYnVpbHRfaW46ImFicyBhbmQgYWNvcyBhc2luIGF0YW4gY2VpbCBjZCBjaGRpciBjbGVhcmdsb2JhbCBjb3NoIGNvcyBjdW1wcm9kIGRlZmYgZGlzcCBlcnJvcmV4ZWMgZXhlY3N0ciBleGlzdHMgZXhwIGV5ZSBnZXR0ZXh0IGZsb29yIGZwcmludGYgZnJlYWQgZnNvbHZlIGltYWcgaXNkZWYgaXNlbXB0eWlzaW5maXNuYW4gaXN2ZWN0b3IgbGFzdGVycm9yIGxlbmd0aCBsb2FkIGxpbnNwYWNlIGxpc3QgbGlzdGZpbGVzIGxvZzEwIGxvZzIgbG9nbWF4IG1pbiBtc3ByaW50ZiBtY2xvc2UgbW9wZW4gb25lcyBvciBwYXRoY29udmVydCBwb2x5IHByaW50ZiBwcm9kIHB3ZCByYW5kIHJlYWxyb3VuZCBzaW5oIHNpbiBzaXplIGdzb3J0IHNwcmludGYgc3FydCBzdHJjYXQgc3RyY21wcyB0cmluZyBzdW0gc3lzdGVtIHRhbmggdGFudHlwZSB0eXBlbmFtZSB3YXJuaW5nIHplcm9zIG1hdHJpeCJ9LGk6JygifCN8L1xcKnxcXHMrL1xcdyspJyxjOlt7Y046ImZ1bmN0aW9uIixiSzoiZnVuY3Rpb24gZW5kZnVuY3Rpb24iLGU6IiQiLGs6ImZ1bmN0aW9uIGVuZGZ1bmN0aW9ufDEwIixjOltlLlVUTSx7Y046InBhcmFtcyIsYjoiXFwoIixlOiJcXCkifV19LHtjTjoidHJhbnNwb3NlZF92YXJpYWJsZSIsYjoiW2EtekEtWl9dW2EtekEtWl8wLTldKignK1tcXC4nXSp8W1xcLiddKykiLGU6IiIscjowfSx7Y046Im1hdHJpeCIsYjoiXFxbIixlOiJcXF0nKltcXC4nXSoiLHI6MCxjOnR9LHtjTjoiY29tbWVudCIsYjoiLy8iLGU6IiQifV0uY29uY2F0KHQpfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgic2NzcyIsZnVuY3Rpb24oZSl7e3ZhciB0PSJbYS16QS1aLV1bYS16QS1aMC05Xy1dKiIscj17Y046InZhcmlhYmxlIixiOiIoXFwkIit0KyIpXFxiIn0sYT17Y046ImZ1bmN0aW9uIixiOnQrIlxcKCIsckI6ITAsZUU6ITAsZToiXFwoIn0saT17Y046ImhleGNvbG9yIixiOiIjWzAtOUEtRmEtZl0rIn07KHtjTjoiYXR0cmlidXRlIixiOiJbQS1aXFxfXFwuXFwtXSsiLGU6IjoiLGVFOiEwLGk6IlteXFxzXSIsc3RhcnRzOntjTjoidmFsdWUiLGVXOiEwLGVFOiEwLGM6W2EsaSxlLkNTU05NLGUuUVNNLGUuQVNNLGUuQ0JDTSx7Y046ImltcG9ydGFudCIsYjoiIWltcG9ydGFudCJ9XX19KQp9cmV0dXJue2NJOiEwLGk6Ils9L3wnXSIsYzpbZS5DTENNLGUuQ0JDTSxhLHtjTjoiaWQiLGI6IlxcI1tBLVphLXowLTlfLV0rIixyOjB9LHtjTjoiY2xhc3MiLGI6IlxcLltBLVphLXowLTlfLV0rIixyOjB9LHtjTjoiYXR0cl9zZWxlY3RvciIsYjoiXFxbIixlOiJcXF0iLGk6IiQifSx7Y046InRhZyIsYjoiXFxiKGF8YWJicnxhY3JvbnltfGFkZHJlc3N8YXJlYXxhcnRpY2xlfGFzaWRlfGF1ZGlvfGJ8YmFzZXxiaWd8YmxvY2txdW90ZXxib2R5fGJyfGJ1dHRvbnxjYW52YXN8Y2FwdGlvbnxjaXRlfGNvZGV8Y29sfGNvbGdyb3VwfGNvbW1hbmR8ZGF0YWxpc3R8ZGR8ZGVsfGRldGFpbHN8ZGZufGRpdnxkbHxkdHxlbXxlbWJlZHxmaWVsZHNldHxmaWdjYXB0aW9ufGZpZ3VyZXxmb290ZXJ8Zm9ybXxmcmFtZXxmcmFtZXNldHwoaFsxLTZdKXxoZWFkfGhlYWRlcnxoZ3JvdXB8aHJ8aHRtbHxpfGlmcmFtZXxpbWd8aW5wdXR8aW5zfGtiZHxrZXlnZW58bGFiZWx8bGVnZW5kfGxpfGxpbmt8bWFwfG1hcmt8bWV0YXxtZXRlcnxuYXZ8bm9mcmFtZXN8bm9zY3JpcHR8b2JqZWN0fG9sfG9wdGdyb3VwfG9wdGlvbnxvdXRwdXR8cHxwYXJhbXxwcmV8cHJvZ3Jlc3N8cXxycHxydHxydWJ5fHNhbXB8c2NyaXB0fHNlY3Rpb258c2VsZWN0fHNtYWxsfHNwYW58c3RyaWtlfHN0cm9uZ3xzdHlsZXxzdWJ8c3VwfHRhYmxlfHRib2R5fHRkfHRleHRhcmVhfHRmb290fHRofHRoZWFkfHRpbWV8dGl0bGV8dHJ8dHR8dWx8dmFyfHZpZGVvKVxcYiIscjowfSx7Y046InBzZXVkbyIsYjoiOih2aXNpdGVkfHZhbGlkfHJvb3R8cmlnaHR8cmVxdWlyZWR8cmVhZC13cml0ZXxyZWFkLW9ubHl8b3V0LXJhbmdlfG9wdGlvbmFsfG9ubHktb2YtdHlwZXxvbmx5LWNoaWxkfG50aC1vZi10eXBlfG50aC1sYXN0LW9mLXR5cGV8bnRoLWxhc3QtY2hpbGR8bnRoLWNoaWxkfG5vdHxsaW5rfGxlZnR8bGFzdC1vZi10eXBlfGxhc3QtY2hpbGR8bGFuZ3xpbnZhbGlkfGluZGV0ZXJtaW5hdGV8aW4tcmFuZ2V8aG92ZXJ8Zm9jdXN8Zmlyc3Qtb2YtdHlwZXxmaXJzdC1saW5lfGZpcnN0LWxldHRlcnxmaXJzdC1jaGlsZHxmaXJzdHxlbmFibGVkfGVtcHR5fGRpc2FibGVkfGRlZmF1bHR8Y2hlY2tlZHxiZWZvcmV8YWZ0ZXJ8YWN0aXZlKSJ9LHtjTjoicHNldWRvIixiOiI6OihhZnRlcnxiZWZvcmV8Y2hvaWNlc3xmaXJzdC1sZXR0ZXJ8Zmlyc3QtbGluZXxyZXBlYXQtaW5kZXh8cmVwZWF0LWl0ZW18c2VsZWN0aW9ufHZhbHVlKSJ9LHIse2NOOiJhdHRyaWJ1dGUiLGI6IlxcYih6LWluZGV4fHdvcmQtd3JhcHx3b3JkLXNwYWNpbmd8d29yZC1icmVha3x3aWR0aHx3aWRvd3N8d2hpdGUtc3BhY2V8dmlzaWJpbGl0eXx2ZXJ0aWNhbC1hbGlnbnx1bmljb2RlLWJpZGl8dHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb258dHJhbnNpdGlvbi1wcm9wZXJ0eXx0cmFuc2l0aW9uLWR1cmF0aW9ufHRyYW5zaXRpb24tZGVsYXl8dHJhbnNpdGlvbnx0cmFuc2Zvcm0tc3R5bGV8dHJhbnNmb3JtLW9yaWdpbnx0cmFuc2Zvcm18dG9wfHRleHQtdW5kZXJsaW5lLXBvc2l0aW9ufHRleHQtdHJhbnNmb3JtfHRleHQtc2hhZG93fHRleHQtcmVuZGVyaW5nfHRleHQtb3ZlcmZsb3d8dGV4dC1pbmRlbnR8dGV4dC1kZWNvcmF0aW9uLXN0eWxlfHRleHQtZGVjb3JhdGlvbi1saW5lfHRleHQtZGVjb3JhdGlvbi1jb2xvcnx0ZXh0LWRlY29yYXRpb258dGV4dC1hbGlnbi1sYXN0fHRleHQtYWxpZ258dGFiLXNpemV8dGFibGUtbGF5b3V0fHJpZ2h0fHJlc2l6ZXxxdW90ZXN8cG9zaXRpb258cG9pbnRlci1ldmVudHN8cGVyc3BlY3RpdmUtb3JpZ2lufHBlcnNwZWN0aXZlfHBhZ2UtYnJlYWstaW5zaWRlfHBhZ2UtYnJlYWstYmVmb3JlfHBhZ2UtYnJlYWstYWZ0ZXJ8cGFkZGluZy10b3B8cGFkZGluZy1yaWdodHxwYWRkaW5nLWxlZnR8cGFkZGluZy1ib3R0b218cGFkZGluZ3xvdmVyZmxvdy15fG92ZXJmbG93LXh8b3ZlcmZsb3ctd3JhcHxvdmVyZmxvd3xvdXRsaW5lLXdpZHRofG91dGxpbmUtc3R5bGV8b3V0bGluZS1vZmZzZXR8b3V0bGluZS1jb2xvcnxvdXRsaW5lfG9ycGhhbnN8b3JkZXJ8b3BhY2l0eXxvYmplY3QtcG9zaXRpb258b2JqZWN0LWZpdHxub3JtYWx8bm9uZXxuYXYtdXB8bmF2LXJpZ2h0fG5hdi1sZWZ0fG5hdi1pbmRleHxuYXYtZG93bnxtaW4td2lkdGh8bWluLWhlaWdodHxtYXgtd2lkdGh8bWF4LWhlaWdodHxtYXNrfG1hcmtzfG1hcmdpbi10b3B8bWFyZ2luLXJpZ2h0fG1hcmdpbi1sZWZ0fG1hcmdpbi1ib3R0b218bWFyZ2lufGxpc3Qtc3R5bGUtdHlwZXxsaXN0LXN0eWxlLXBvc2l0aW9ufGxpc3Qtc3R5bGUtaW1hZ2V8bGlzdC1zdHlsZXxsaW5lLWhlaWdodHxsZXR0ZXItc3BhY2luZ3xsZWZ0fGp1c3RpZnktY29udGVudHxpbml0aWFsfGluaGVyaXR8aW1lLW1vZGV8aW1hZ2Utb3JpZW50YXRpb258aW1hZ2UtcmVzb2x1dGlvbnxpbWFnZS1yZW5kZXJpbmd8aWNvbnxoeXBoZW5zfGhlaWdodHxmb250LXdlaWdodHxmb250LXZhcmlhbnQtbGlnYXR1cmVzfGZvbnQtdmFyaWFudHxmb250LXN0eWxlfGZvbnQtc3RyZXRjaHxmb250LXNpemUtYWRqdXN0fGZvbnQtc2l6ZXxmb250LWxhbmd1YWdlLW92ZXJyaWRlfGZvbnQta2VybmluZ3xmb250LWZlYXR1cmUtc2V0dGluZ3N8Zm9udC1mYW1pbHl8Zm9udHxmbG9hdHxmbGV4LXdyYXB8ZmxleC1zaHJpbmt8ZmxleC1ncm93fGZsZXgtZmxvd3xmbGV4LWRpcmVjdGlvbnxmbGV4LWJhc2lzfGZsZXh8ZmlsdGVyfGVtcHR5LWNlbGxzfGRpc3BsYXl8ZGlyZWN0aW9ufGN1cnNvcnxjb3VudGVyLXJlc2V0fGNvdW50ZXItaW5jcmVtZW50fGNvbnRlbnR8Y29sdW1uLXdpZHRofGNvbHVtbi1zcGFufGNvbHVtbi1ydWxlLXdpZHRofGNvbHVtbi1ydWxlLXN0eWxlfGNvbHVtbi1ydWxlLWNvbG9yfGNvbHVtbi1ydWxlfGNvbHVtbi1nYXB8Y29sdW1uLWZpbGx8Y29sdW1uLWNvdW50fGNvbHVtbnN8Y29sb3J8Y2xpcC1wYXRofGNsaXB8Y2xlYXJ8Y2FwdGlvbi1zaWRlfGJyZWFrLWluc2lkZXxicmVhay1iZWZvcmV8YnJlYWstYWZ0ZXJ8Ym94LXNpemluZ3xib3gtc2hhZG93fGJveC1kZWNvcmF0aW9uLWJyZWFrfGJvdHRvbXxib3JkZXItd2lkdGh8Ym9yZGVyLXRvcC13aWR0aHxib3JkZXItdG9wLXN0eWxlfGJvcmRlci10b3AtcmlnaHQtcmFkaXVzfGJvcmRlci10b3AtbGVmdC1yYWRpdXN8Ym9yZGVyLXRvcC1jb2xvcnxib3JkZXItdG9wfGJvcmRlci1zdHlsZXxib3JkZXItc3BhY2luZ3xib3JkZXItcmlnaHQtd2lkdGh8Ym9yZGVyLXJpZ2h0LXN0eWxlfGJvcmRlci1yaWdodC1jb2xvcnxib3JkZXItcmlnaHR8Ym9yZGVyLXJhZGl1c3xib3JkZXItbGVmdC13aWR0aHxib3JkZXItbGVmdC1zdHlsZXxib3JkZXItbGVmdC1jb2xvcnxib3JkZXItbGVmdHxib3JkZXItaW1hZ2Utd2lkdGh8Ym9yZGVyLWltYWdlLXNvdXJjZXxib3JkZXItaW1hZ2Utc2xpY2V8Ym9yZGVyLWltYWdlLXJlcGVhdHxib3JkZXItaW1hZ2Utb3V0c2V0fGJvcmRlci1pbWFnZXxib3JkZXItY29sb3J8Ym9yZGVyLWNvbGxhcHNlfGJvcmRlci1ib3R0b20td2lkdGh8Ym9yZGVyLWJvdHRvbS1zdHlsZXxib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1c3xib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzfGJvcmRlci1ib3R0b20tY29sb3J8Ym9yZGVyLWJvdHRvbXxib3JkZXJ8YmFja2dyb3VuZC1zaXplfGJhY2tncm91bmQtcmVwZWF0fGJhY2tncm91bmQtcG9zaXRpb258YmFja2dyb3VuZC1vcmlnaW58YmFja2dyb3VuZC1pbWFnZXxiYWNrZ3JvdW5kLWNvbG9yfGJhY2tncm91bmQtY2xpcHxiYWNrZ3JvdW5kLWF0dGFjaG1lbnR8YmFja2dyb3VuZHxiYWNrZmFjZS12aXNpYmlsaXR5fGF1dG98YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbnxhbmltYXRpb24tcGxheS1zdGF0ZXxhbmltYXRpb24tbmFtZXxhbmltYXRpb24taXRlcmF0aW9uLWNvdW50fGFuaW1hdGlvbi1maWxsLW1vZGV8YW5pbWF0aW9uLWR1cmF0aW9ufGFuaW1hdGlvbi1kaXJlY3Rpb258YW5pbWF0aW9uLWRlbGF5fGFuaW1hdGlvbnxhbGlnbi1zZWxmfGFsaWduLWl0ZW1zfGFsaWduLWNvbnRlbnQpXFxiIixpOiJbXlxcc10ifSx7Y046InZhbHVlIixiOiJcXGIod2hpdGVzcGFjZXx3YWl0fHctcmVzaXplfHZpc2libGV8dmVydGljYWwtdGV4dHx2ZXJ0aWNhbC1pZGVvZ3JhcGhpY3x1cHBlcmNhc2V8dXBwZXItcm9tYW58dXBwZXItYWxwaGF8dW5kZXJsaW5lfHRyYW5zcGFyZW50fHRvcHx0aGlufHRoaWNrfHRleHR8dGV4dC10b3B8dGV4dC1ib3R0b218dGItcmx8dGFibGUtaGVhZGVyLWdyb3VwfHRhYmxlLWZvb3Rlci1ncm91cHxzdy1yZXNpemV8c3VwZXJ8c3RyaWN0fHN0YXRpY3xzcXVhcmV8c29saWR8c21hbGwtY2Fwc3xzZXBhcmF0ZXxzZS1yZXNpemV8c2Nyb2xsfHMtcmVzaXplfHJ0bHxyb3ctcmVzaXplfHJpZGdlfHJpZ2h0fHJlcGVhdHxyZXBlYXQteXxyZXBlYXQteHxyZWxhdGl2ZXxwcm9ncmVzc3xwb2ludGVyfG92ZXJsaW5lfG91dHNpZGV8b3V0c2V0fG9ibGlxdWV8bm93cmFwfG5vdC1hbGxvd2VkfG5vcm1hbHxub25lfG53LXJlc2l6ZXxuby1yZXBlYXR8bm8tZHJvcHxuZXdzcGFwZXJ8bmUtcmVzaXplfG4tcmVzaXplfG1vdmV8bWlkZGxlfG1lZGl1bXxsdHJ8bHItdGJ8bG93ZXJjYXNlfGxvd2VyLXJvbWFufGxvd2VyLWFscGhhfGxvb3NlfGxpc3QtaXRlbXxsaW5lfGxpbmUtdGhyb3VnaHxsaW5lLWVkZ2V8bGlnaHRlcnxsZWZ0fGtlZXAtYWxsfGp1c3RpZnl8aXRhbGljfGludGVyLXdvcmR8aW50ZXItaWRlb2dyYXBofGluc2lkZXxpbnNldHxpbmxpbmV8aW5saW5lLWJsb2NrfGluaGVyaXR8aW5hY3RpdmV8aWRlb2dyYXBoLXNwYWNlfGlkZW9ncmFwaC1wYXJlbnRoZXNpc3xpZGVvZ3JhcGgtbnVtZXJpY3xpZGVvZ3JhcGgtYWxwaGF8aG9yaXpvbnRhbHxoaWRkZW58aGVscHxoYW5kfGdyb292ZXxmaXhlZHxlbGxpcHNpc3xlLXJlc2l6ZXxkb3VibGV8ZG90dGVkfGRpc3RyaWJ1dGV8ZGlzdHJpYnV0ZS1zcGFjZXxkaXN0cmlidXRlLWxldHRlcnxkaXN0cmlidXRlLWFsbC1saW5lc3xkaXNjfGRpc2FibGVkfGRlZmF1bHR8ZGVjaW1hbHxkYXNoZWR8Y3Jvc3NoYWlyfGNvbGxhcHNlfGNvbC1yZXNpemV8Y2lyY2xlfGNoYXJ8Y2VudGVyfGNhcGl0YWxpemV8YnJlYWstd29yZHxicmVhay1hbGx8Ym90dG9tfGJvdGh8Ym9sZGVyfGJvbGR8YmxvY2t8YmlkaS1vdmVycmlkZXxiZWxvd3xiYXNlbGluZXxhdXRvfGFsd2F5c3xhbGwtc2Nyb2xsfGFic29sdXRlfHRhYmxlfHRhYmxlLWNlbGwpXFxiIn0se2NOOiJ2YWx1ZSIsYjoiOiIsZToiOyIsYzpbYSxyLGksZS5DU1NOTSxlLlFTTSxlLkFTTSx7Y046ImltcG9ydGFudCIsYjoiIWltcG9ydGFudCJ9XX0se2NOOiJhdF9ydWxlIixiOiJAIixlOiJbeztdIixrOiJtaXhpbiBpbmNsdWRlIGV4dGVuZCBmb3IgaWYgZWxzZSBlYWNoIHdoaWxlIGNoYXJzZXQgaW1wb3J0IGRlYnVnIG1lZGlhIHBhZ2UgY29udGVudCBmb250LWZhY2UgbmFtZXNwYWNlIHdhcm4iLGM6W2EscixlLlFTTSxlLkFTTSxpLGUuQ1NTTk0se2NOOiJwcmVwcm9jZXNzb3IiLGI6Ilxcc1tBLVphLXowLTlfLi1dKyIscjowfV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInNtYWxpIixmdW5jdGlvbigpe3ZhciBlPVsiYWRkIiwiYW5kIiwiY21wIiwiY21wZyIsImNtcGwiLCJjb25zdCIsImRpdiIsImRvdWJsZSIsImZsb2F0IiwiZ290byIsImlmIiwiaW50IiwibG9uZyIsIm1vdmUiLCJtdWwiLCJuZWciLCJuZXciLCJub3AiLCJub3QiLCJvciIsInJlbSIsInJldHVybiIsInNobCIsInNociIsInNwdXQiLCJzdWIiLCJ0aHJvdyIsInVzaHIiLCJ4b3IiXSx0PVsiYWdldCIsImFwdXQiLCJhcnJheSIsImNoZWNrIiwiZXhlY3V0ZSIsImZpbGwiLCJmaWxsZWQiLCJnb3RvLzE2IiwiZ290by8zMiIsImlnZXQiLCJpbnN0YW5jZSIsImludm9rZSIsImlwdXQiLCJtb25pdG9yIiwicGFja2VkIiwic2dldCIsInNwYXJzZSJdLHI9WyJ0cmFuc2llbnQiLCJjb25zdHJ1Y3RvciIsImFic3RyYWN0IiwiZmluYWwiLCJzeW50aGV0aWMiLCJwdWJsaWMiLCJwcml2YXRlIiwicHJvdGVjdGVkIiwic3RhdGljIiwiYnJpZGdlIiwic3lzdGVtIl07cmV0dXJue2FsaWFzZXM6WyJzbWFsaSJdLGM6W3tjTjoic3RyaW5nIixiOiciJyxlOiciJyxyOjB9LHtjTjoiY29tbWVudCIsYjoiIyIsZToiJCIscjowfSx7Y046ImtleXdvcmQiLGI6IlxccypcXC5lbmRcXHNbYS16QS1aMC05XSoiLHI6MX0se2NOOiJrZXl3b3JkIixiOiJeWyBdKlxcLlthLXpBLVpdKiIscjowfSx7Y046ImtleXdvcmQiLGI6IlxcczpbYS16QS1aXzAtOV0qIixyOjB9LHtjTjoia2V5d29yZCIsYjoiXFxzKCIrci5qb2luKCJ8IikrIikiLHI6MX0se2NOOiJrZXl3b3JkIixiOiJcXFsiLHI6MH0se2NOOiJpbnN0cnVjdGlvbiIsYjoiXFxzKCIrZS5qb2luKCJ8IikrIilcXHMiLHI6MX0se2NOOiJpbnN0cnVjdGlvbiIsYjoiXFxzKCIrZS5qb2luKCJ8IikrIikoKFxcLXwvKVthLXpBLVowLTldKykrXFxzIixyOjEwfSx7Y046Imluc3RydWN0aW9uIixiOiJcXHMoIit0LmpvaW4oInwiKSsiKSgoXFwtfC8pW2EtekEtWjAtOV0rKSpcXHMiLHI6MTB9LHtjTjoiY2xhc3MiLGI6IkxbXig7OlxuXSo7IixyOjB9LHtjTjoiZnVuY3Rpb24iLGI6JyggfC0+KVteKFxuIDsiXSpcXCgnLHI6MH0se2NOOiJmdW5jdGlvbiIsYjoiXFwpIixyOjB9LHtjTjoidmFyaWFibGUiLGI6Ilt2cF1bMC05XSsiLHI6MH1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgic21hbGx0YWxrIixmdW5jdGlvbihlKXt2YXIgdD0iW2Etel1bYS16QS1aMC05X10qIixyPXtjTjoiY2hhciIsYjoiXFwkLnsxfSJ9LGE9e2NOOiJzeW1ib2wiLGI6IiMiK2UuVUlSfTtyZXR1cm57YWxpYXNlczpbInN0Il0sazoic2VsZiBzdXBlciBuaWwgdHJ1ZSBmYWxzZSB0aGlzQ29udGV4dCIsYzpbe2NOOiJjb21tZW50IixiOiciJyxlOiciJ30sZS5BU00se2NOOiJjbGFzcyIsYjoiXFxiW0EtWl1bQS1aYS16MC05X10qIixyOjB9LHtjTjoibWV0aG9kIixiOnQrIjoiLHI6MH0sZS5DTk0sYSxyLHtjTjoibG9jYWx2YXJzIixiOiJcXHxbIF0qIit0KyIoWyBdKyIrdCsiKSpbIF0qXFx8IixyQjohMCxlOi9cfC8saTovXFMvLGM6W3tiOiIoXFx8WyBdKik/Iit0fV19LHtjTjoiYXJyYXkiLGI6IlxcI1xcKCIsZToiXFwpIixjOltlLkFTTSxyLGUuQ05NLGFdfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJzbWwiLGZ1bmN0aW9uKGUpe3JldHVybnthbGlhc2VzOlsibWwiXSxrOntrZXl3b3JkOiJhYnN0eXBlIGFuZCBhbmRhbHNvIGFzIGNhc2UgZGF0YXR5cGUgZG8gZWxzZSBlbmQgZXF0eXBlIGV4Y2VwdGlvbiBmbiBmdW4gZnVuY3RvciBoYW5kbGUgaWYgaW4gaW5jbHVkZSBpbmZpeCBpbmZpeHIgbGV0IGxvY2FsIG5vbmZpeCBvZiBvcCBvcGVuIG9yZWxzZSByYWlzZSByZWMgc2hhcmluZyBzaWcgc2lnbmF0dXJlIHN0cnVjdCBzdHJ1Y3R1cmUgdGhlbiB0eXBlIHZhbCB3aXRoIHdpdGh0eXBlIHdoZXJlIHdoaWxlIixidWlsdF9pbjoiYXJyYXkgYm9vbCBjaGFyIGV4biBpbnQgbGlzdCBvcHRpb24gb3JkZXIgcmVhbCByZWYgc3RyaW5nIHN1YnN0cmluZyB2ZWN0b3IgdW5pdCB3b3JkIixsaXRlcmFsOiJ0cnVlIGZhbHNlIE5PTkUgU09NRSBMRVNTIEVRVUFMIEdSRUFURVIgbmlsIn0saTovXC9cL3w+Pi8sbDoiW2Etel9dXFx3KiE/IixjOlt7Y046ImxpdGVyYWwiLGI6IlxcWyhcXHxcXHwpP1xcXXxcXChcXCkifSx7Y046ImNvbW1lbnQiLGI6IlxcKFxcKiIsZToiXFwqXFwpIixjOlsic2VsZiIsZS5QV01dfSx7Y046InN5bWJvbCIsYjoiJ1tBLVphLXpfXSg/IScpW1xcdyddKiJ9LHtjTjoidGFnIixiOiJgW0EtWl1bXFx3J10qIn0se2NOOiJ0eXBlIixiOiJcXGJbQS1aXVtcXHcnXSoiLHI6MH0se2I6IlthLXpfXVxcdyonW1xcdyddKiJ9LGUuaW5oZXJpdChlLkFTTSx7Y046ImNoYXIiLHI6MH0pLGUuaW5oZXJpdChlLlFTTSx7aTpudWxsfSkse2NOOiJudW1iZXIiLGI6IlxcYigwW3hYXVthLWZBLUYwLTlfXStbTGxuXT98MFtvT11bMC03X10rW0xsbl0/fDBbYkJdWzAxX10rW0xsbl0/fFswLTldWzAtOV9dKihbTGxuXXwoXFwuWzAtOV9dKik/KFtlRV1bLStdP1swLTlfXSspPyk/KSIscjowfSx7YjovWy09XT4vfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJzcWwiLGZ1bmN0aW9uKGUpe3ZhciB0PXtjTjoiY29tbWVudCIsYjoiLS0iLGU6IiQifTtyZXR1cm57Y0k6ITAsaTovWzw+XS8sYzpbe2NOOiJvcGVyYXRvciIsYks6ImJlZ2luIGVuZCBzdGFydCBjb21taXQgcm9sbGJhY2sgc2F2ZXBvaW50IGxvY2sgYWx0ZXIgY3JlYXRlIGRyb3AgcmVuYW1lIGNhbGwgZGVsZXRlIGRvIGhhbmRsZXIgaW5zZXJ0IGxvYWQgcmVwbGFjZSBzZWxlY3QgdHJ1bmNhdGUgdXBkYXRlIHNldCBzaG93IHByYWdtYSBncmFudCBtZXJnZSBkZXNjcmliZSB1c2UgZXhwbGFpbiBoZWxwIGRlY2xhcmUgcHJlcGFyZSBleGVjdXRlIGRlYWxsb2NhdGUgc2F2ZXBvaW50IHJlbGVhc2UgdW5sb2NrIHB1cmdlIHJlc2V0IGNoYW5nZSBzdG9wIGFuYWx5emUgY2FjaGUgZmx1c2ggb3B0aW1pemUgcmVwYWlyIGtpbGwgaW5zdGFsbCB1bmluc3RhbGwgY2hlY2tzdW0gcmVzdG9yZSBjaGVjayBiYWNrdXAiLGU6LzsvLGVXOiEwLGs6e2tleXdvcmQ6ImFicyBhYnNvbHV0ZSBhY29zIGFjdGlvbiBhZGQgYWRkZGF0ZSBhZGR0aW1lIGFlc19kZWNyeXB0IGFlc19lbmNyeXB0IGFmdGVyIGFnZ3JlZ2F0ZSBhbGwgYWxsb2NhdGUgYWx0ZXIgYW5hbHl6ZSBhbmQgYW55IGFyZSBhcyBhc2MgYXNjaWkgYXNpbiBhc3NlcnRpb24gYXQgYXRhbiBhdGFuMiBhdG4yIGF1dGhvcml6YXRpb24gYXV0aG9ycyBhdmcgYmFja3VwIGJlZm9yZSBiZWdpbiBiZW5jaG1hcmsgYmV0d2VlbiBiaW4gYmlubG9nIGJpdF9hbmQgYml0X2NvdW50IGJpdF9sZW5ndGggYml0X29yIGJpdF94b3IgYm90aCBieSBjYWNoZSBjYWxsIGNhc2NhZGUgY2FzY2FkZWQgY2FzZSBjYXN0IGNhdGFsb2cgY2VpbCBjZWlsaW5nIGNoYWluIGNoYW5nZSBjaGFuZ2VkIGNoYXJfbGVuZ3RoIGNoYXJhY3Rlcl9sZW5ndGggY2hhcmluZGV4IGNoYXJzZXQgY2hlY2sgY2hlY2tzdW0gY2hlY2tzdW1fYWdnIGNob29zZSBjbG9zZSBjb2FsZXNjZSBjb2VyY2liaWxpdHkgY29sbGF0ZSBjb2xsYXRpb24gY29sbGF0aW9ucHJvcGVydHkgY29sdW1uIGNvbHVtbnMgY29sdW1uc191cGRhdGVkIGNvbW1pdCBjb21wcmVzcyBjb25jYXQgY29uY2F0X3dzIGNvbmN1cnJlbnQgY29ubmVjdCBjb25uZWN0aW9uIGNvbm5lY3Rpb25faWQgY29uc2lzdGVudCBjb25zdHJhaW50IGNvbnN0cmFpbnRzIGNvbnRpbnVlIGNvbnRyaWJ1dG9ycyBjb252IGNvbnZlcnQgY29udmVydF90eiBjb3JyZXNwb25kaW5nIGNvcyBjb3QgY291bnQgY291bnRfYmlnIGNyYzMyIGNyZWF0ZSBjcm9zcyBjdW1lX2Rpc3QgY3VyZGF0ZSBjdXJyZW50IGN1cnJlbnRfZGF0ZSBjdXJyZW50X3RpbWUgY3VycmVudF90aW1lc3RhbXAgY3VycmVudF91c2VyIGN1cnNvciBjdXJ0aW1lIGRhdGEgZGF0YWJhc2UgZGF0YWJhc2VzIGRhdGFsZW5ndGggZGF0ZV9hZGQgZGF0ZV9mb3JtYXQgZGF0ZV9zdWIgZGF0ZWFkZCBkYXRlZGlmZiBkYXRlZnJvbXBhcnRzIGRhdGVuYW1lIGRhdGVwYXJ0IGRhdGV0aW1lMmZyb21wYXJ0cyBkYXRldGltZW9mZnNldGZyb21wYXJ0cyBkYXkgZGF5bmFtZSBkYXlvZm1vbnRoIGRheW9md2VlayBkYXlvZnllYXIgZGVhbGxvY2F0ZSBkZWNsYXJlIGRlY29kZSBkZWZhdWx0IGRlZmVycmFibGUgZGVmZXJyZWQgZGVncmVlcyBkZWxheWVkIGRlbGV0ZSBkZXNfZGVjcnlwdCBkZXNfZW5jcnlwdCBkZXNfa2V5X2ZpbGUgZGVzYyBkZXNjcmliZSBkZXNjcmlwdG9yIGRpYWdub3N0aWNzIGRpZmZlcmVuY2UgZGlzY29ubmVjdCBkaXN0aW5jdCBkaXN0aW5jdHJvdyBkaXYgZG8gZG9tYWluIGRvdWJsZSBkcm9wIGR1bXBmaWxlIGVhY2ggZWxzZSBlbHQgZW5jbG9zZWQgZW5jb2RlIGVuY3J5cHQgZW5kIGVuZC1leGVjIGVuZ2luZSBlbmdpbmVzIGVvbW9udGggZXJyb3JzIGVzY2FwZSBlc2NhcGVkIGV2ZW50IGV2ZW50ZGF0YSBldmVudHMgZXhjZXB0IGV4Y2VwdGlvbiBleGVjIGV4ZWN1dGUgZXhpc3RzIGV4cCBleHBsYWluIGV4cG9ydF9zZXQgZXh0ZW5kZWQgZXh0ZXJuYWwgZXh0cmFjdCBmYXN0IGZldGNoIGZpZWxkIGZpZWxkcyBmaW5kX2luX3NldCBmaXJzdCBmaXJzdF92YWx1ZSBmbG9vciBmbHVzaCBmb3IgZm9yY2UgZm9yZWlnbiBmb3JtYXQgZm91bmQgZm91bmRfcm93cyBmcm9tIGZyb21fYmFzZTY0IGZyb21fZGF5cyBmcm9tX3VuaXh0aW1lIGZ1bGwgZnVuY3Rpb24gZ2V0IGdldF9mb3JtYXQgZ2V0X2xvY2sgZ2V0ZGF0ZSBnZXR1dGNkYXRlIGdsb2JhbCBnbyBnb3RvIGdyYW50IGdyYW50cyBncmVhdGVzdCBncm91cCBncm91cF9jb25jYXQgZ3JvdXBpbmcgZ3JvdXBpbmdfaWQgZ3RpZF9zdWJzZXQgZ3RpZF9zdWJ0cmFjdCBoYW5kbGVyIGhhdmluZyBoZWxwIGhleCBoaWdoX3ByaW9yaXR5IGhvc3RzIGhvdXIgaWRlbnRfY3VycmVudCBpZGVudF9pbmNyIGlkZW50X3NlZWQgaWRlbnRpZmllZCBpZGVudGl0eSBpZiBpZm51bGwgaWdub3JlIGlpZiBpbGlrZSBpbW1lZGlhdGUgaW4gaW5kZXggaW5kaWNhdG9yIGluZXQ2X2F0b24gaW5ldDZfbnRvYSBpbmV0X2F0b24gaW5ldF9udG9hIGluZmlsZSBpbml0aWFsbHkgaW5uZXIgaW5ub2RiIGlucHV0IGluc2VydCBpbnN0YWxsIGluc3RyIGludGVyc2VjdCBpbnRvIGlzIGlzX2ZyZWVfbG9jayBpc19pcHY0IGlzX2lwdjRfY29tcGF0IGlzX2lwdjRfbWFwcGVkIGlzX25vdCBpc19ub3RfbnVsbCBpc191c2VkX2xvY2sgaXNkYXRlIGlzbnVsbCBpc29sYXRpb24gam9pbiBrZXkga2lsbCBsYW5ndWFnZSBsYXN0IGxhc3RfZGF5IGxhc3RfaW5zZXJ0X2lkIGxhc3RfdmFsdWUgbGNhc2UgbGVhZCBsZWFkaW5nIGxlYXN0IGxlYXZlcyBsZWZ0IGxlbiBsZW5naHQgbGV2ZWwgbGlrZSBsaW1pdCBsaW5lcyBsbiBsb2FkIGxvYWRfZmlsZSBsb2NhbCBsb2NhbHRpbWUgbG9jYWx0aW1lc3RhbXAgbG9jYXRlIGxvY2sgbG9nIGxvZzEwIGxvZzIgbG9nZmlsZSBsb2dzIGxvd19wcmlvcml0eSBsb3dlciBscGFkIGx0cmltIG1ha2Vfc2V0IG1ha2VkYXRlIG1ha2V0aW1lIG1hc3RlciBtYXN0ZXJfcG9zX3dhaXQgbWF0Y2ggbWF0Y2hlZCBtYXggbWQ1IG1lZGl1bSBtZXJnZSBtaWNyb3NlY29uZCBtaWQgbWluIG1pbnV0ZSBtb2QgbW9kZSBtb2R1bGUgbW9udGggbW9udGhuYW1lIG11dGV4IG5hbWVfY29uc3QgbmFtZXMgbmF0aW9uYWwgbmF0dXJhbCBuY2hhciBuZXh0IG5vIG5vX3dyaXRlX3RvX2JpbmxvZyBub3Qgbm93IG51bGxpZiBudmFyY2hhciBvY3Qgb2N0ZXRfbGVuZ3RoIG9mIG9sZF9wYXNzd29yZCBvbiBvbmx5IG9wZW4gb3B0aW1pemUgb3B0aW9uIG9wdGlvbmFsbHkgb3Igb3JkIG9yZGVyIG91dGVyIG91dGZpbGUgb3V0cHV0IHBhZCBwYXJzZSBwYXJ0aWFsIHBhcnRpdGlvbiBwYXNzd29yZCBwYXRpbmRleCBwZXJjZW50X3JhbmsgcGVyY2VudGlsZV9jb250IHBlcmNlbnRpbGVfZGlzYyBwZXJpb2RfYWRkIHBlcmlvZF9kaWZmIHBpIHBsdWdpbiBwb3NpdGlvbiBwb3cgcG93ZXIgcHJhZ21hIHByZWNpc2lvbiBwcmVwYXJlIHByZXNlcnZlIHByaW1hcnkgcHJpb3IgcHJpdmlsZWdlcyBwcm9jZWR1cmUgcHJvY2VkdXJlX2FuYWx5emUgcHJvY2Vzc2xpc3QgcHJvZmlsZSBwcm9maWxlcyBwdWJsaWMgcHVibGlzaGluZ3NlcnZlcm5hbWUgcHVyZ2UgcXVhcnRlciBxdWVyeSBxdWljayBxdW90ZSBxdW90ZW5hbWUgcmFkaWFucyByYW5kIHJlYWQgcmVmZXJlbmNlcyByZWdleHAgcmVsYXRpdmUgcmVsYXlsb2cgcmVsZWFzZSByZWxlYXNlX2xvY2sgcmVuYW1lIHJlcGFpciByZXBlYXQgcmVwbGFjZSByZXBsaWNhdGUgcmVzZXQgcmVzdG9yZSByZXN0cmljdCByZXR1cm4gcmV0dXJucyByZXZlcnNlIHJldm9rZSByaWdodCBybGlrZSByb2xsYmFjayByb2xsdXAgcm91bmQgcm93IHJvd19jb3VudCByb3dzIHJwYWQgcnRyaW0gc2F2ZXBvaW50IHNjaGVtYSBzY3JvbGwgc2VjX3RvX3RpbWUgc2Vjb25kIHNlY3Rpb24gc2VsZWN0IHNlcmlhbGl6YWJsZSBzZXJ2ZXIgc2Vzc2lvbiBzZXNzaW9uX3VzZXIgc2V0IHNoYSBzaGExIHNoYTIgc2hhcmUgc2hvdyBzaWduIHNpbiBzaXplIHNsYXZlIHNsZWVwIHNtYWxsZGF0ZXRpbWVmcm9tcGFydHMgc25hcHNob3Qgc29tZSBzb25hbWUgc291bmRleCBzb3VuZHNfbGlrZSBzcGFjZSBzcWwgc3FsX2JpZ19yZXN1bHQgc3FsX2J1ZmZlcl9yZXN1bHQgc3FsX2NhY2hlIHNxbF9jYWxjX2ZvdW5kX3Jvd3Mgc3FsX25vX2NhY2hlIHNxbF9zbWFsbF9yZXN1bHQgc3FsX3ZhcmlhbnRfcHJvcGVydHkgc3Fsc3RhdGUgc3FydCBzcXVhcmUgc3RhcnQgc3RhcnRpbmcgc3RhdHVzIHN0ZCBzdGRkZXYgc3RkZGV2X3BvcCBzdGRkZXZfc2FtcCBzdGRldiBzdGRldnAgc3RvcCBzdHIgc3RyX3RvX2RhdGUgc3RyYWlnaHRfam9pbiBzdHJjbXAgc3RyaW5nIHN0dWZmIHN1YmRhdGUgc3Vic3RyIHN1YnN0cmluZyBzdWJ0aW1lIHN1YnRyaW5nX2luZGV4IHN1bSBzd2l0Y2hvZmZzZXQgc3lzZGF0ZSBzeXNkYXRldGltZSBzeXNkYXRldGltZW9mZnNldCBzeXN0ZW1fdXNlciBzeXN1dGNkYXRldGltZSB0YWJsZSB0YWJsZXMgdGFibGVzcGFjZSB0YW4gdGVtcG9yYXJ5IHRlcm1pbmF0ZWQgdGVydGlhcnlfd2VpZ2h0cyB0aGVuIHRpbWUgdGltZV9mb3JtYXQgdGltZV90b19zZWMgdGltZWRpZmYgdGltZWZyb21wYXJ0cyB0aW1lc3RhbXAgdGltZXN0YW1wYWRkIHRpbWVzdGFtcGRpZmYgdGltZXpvbmVfaG91ciB0aW1lem9uZV9taW51dGUgdG8gdG9fYmFzZTY0IHRvX2RheXMgdG9fc2Vjb25kcyB0b2RhdGV0aW1lb2Zmc2V0IHRyYWlsaW5nIHRyYW5zYWN0aW9uIHRyYW5zbGF0aW9uIHRyaWdnZXIgdHJpZ2dlcl9uZXN0bGV2ZWwgdHJpZ2dlcnMgdHJpbSB0cnVuY2F0ZSB0cnlfY2FzdCB0cnlfY29udmVydCB0cnlfcGFyc2UgdWNhc2UgdW5jb21wcmVzcyB1bmNvbXByZXNzZWRfbGVuZ3RoIHVuaGV4IHVuaWNvZGUgdW5pbnN0YWxsIHVuaW9uIHVuaXF1ZSB1bml4X3RpbWVzdGFtcCB1bmtub3duIHVubG9jayB1cGRhdGUgdXBncmFkZSB1cHBlZCB1cHBlciB1c2FnZSB1c2UgdXNlciB1c2VyX3Jlc291cmNlcyB1c2luZyB1dGNfZGF0ZSB1dGNfdGltZSB1dGNfdGltZXN0YW1wIHV1aWQgdXVpZF9zaG9ydCB2YWxpZGF0ZV9wYXNzd29yZF9zdHJlbmd0aCB2YWx1ZSB2YWx1ZXMgdmFyIHZhcl9wb3AgdmFyX3NhbXAgdmFyaWFibGVzIHZhcmlhbmNlIHZhcnAgdmVyc2lvbiB2aWV3IHdhcm5pbmdzIHdlZWsgd2Vla2RheSB3ZWVrb2Z5ZWFyIHdlaWdodF9zdHJpbmcgd2hlbiB3aGVuZXZlciB3aGVyZSB3aXRoIHdvcmsgd3JpdGUgeG1sIHhvciB5ZWFyIHllYXJ3ZWVrIHpvbiIsbGl0ZXJhbDoidHJ1ZSBmYWxzZSBudWxsIixidWlsdF9pbjoiYXJyYXkgYmlnaW50IGJpbmFyeSBiaXQgYmxvYiBib29sZWFuIGNoYXIgY2hhcmFjdGVyIGRhdGUgZGVjIGRlY2ltYWwgZmxvYXQgaW50IGludGVnZXIgaW50ZXJ2YWwgbnVtYmVyIG51bWVyaWMgcmVhbCBzZXJpYWwgc21hbGxpbnQgdmFyY2hhciB2YXJ5aW5nIGludDggc2VyaWFsOCB0ZXh0In0sYzpbe2NOOiJzdHJpbmciLGI6IiciLGU6IiciLGM6W2UuQkUse2I6IicnIn1dfSx7Y046InN0cmluZyIsYjonIicsZTonIicsYzpbZS5CRSx7YjonIiInfV19LHtjTjoic3RyaW5nIixiOiJgIixlOiJgIixjOltlLkJFXX0sZS5DTk0sZS5DQkNNLHRdfSxlLkNCQ00sdF19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJzdGF0YSIsZnVuY3Rpb24oZSl7cmV0dXJue2FsaWFzZXM6WyJkbyIsImFkbyJdLGNJOiEwLGs6ImlmIGVsc2UgaW4gZm9yZWFjaCBmb3IgZm9ydiBmb3J2YSBmb3J2YWwgZm9ydmFsdSBmb3J2YWx1ZSBmb3J2YWx1ZXMgYnkgYnlzIGJ5c29ydCB4aSBxdWlldGx5IHF1aSBjYXB0dXJlIGFib3V0IGFjIGFjXzcgYWNwcnBsb3QgYWNwcnBsb3RfNyBhZGp1c3QgYWRvIGFkb3BhdGggYWRvdXBkYXRlIGFscGhhIGFtZWFucyBhbiBhbm8gYW5vdiBhbm92YSBhbm92YV9lc3RhdCBhbm92YV90ZXJtcyBhbm92YWRlZiBhb3JkZXIgYXAgYXBwIGFwcGUgYXBwZW4gYXBwZW5kIGFyY2ggYXJjaF9kciBhcmNoX2VzdGF0IGFyY2hfcCBhcmNobG0gYXJlZyBhcmVnX3AgYXJncyBhcmltYSBhcmltYV9kciBhcmltYV9lc3RhdCBhcmltYV9wIGFzIGFzbXByb2JpdCBhc21wcm9iaXRfZXN0YXQgYXNtcHJvYml0X2xmIGFzbXByb2JpdF9tZnhfX2RsZyBhc21wcm9iaXRfcCBhc3MgYXNzZSBhc3NlciBhc3NlcnQgYXZwbG90IGF2cGxvdF83IGF2cGxvdHMgYXZwbG90c183IGJjc2tldzAgYmdvZGZyZXkgYmlucmVnIGJpcDBfbGYgYmlwbG90IGJpcHBfbGYgYmlwcl9sZiBiaXByX3AgYmlwcm9iaXQgYml0ZXN0IGJpdGVzdGkgYml0b3d0IGJsb2dpdCBibWVtc2l6ZSBib290IGJvb3RzYW1wIGJvb3RzdHJhcCBib290c3RyYXBfOCBib3hjb19sIGJveGNvX3AgYm94Y294IGJveGNveF82IGJveGNveF9wIGJwcm9iaXQgYnIgYnJlYWsgYnJpZXIgYnJvIGJyb3cgYnJvd3MgYnJvd3NlIGJyciBicnJzdGF0IGJzIGJzXzcgYnNhbXBsX3cgYnNhbXBsZSBic2FtcGxlXzcgYnNxcmVnIGJzdGF0IGJzdGF0XzcgYnN0YXRfOCBic3RyYXAgYnN0cmFwXzcgY2EgY2FfZXN0YXQgY2FfcCBjYWJpcGxvdCBjYW1hdCBjYW5vbiBjYW5vbl84IGNhbm9uXzhfcCBjYW5vbl9lc3RhdCBjYW5vbl9wIGNhcCBjYXByb2plY3Rpb24gY2FwdCBjYXB0dSBjYXB0dXIgY2FwdHVyZSBjYXQgY2MgY2NoYXJ0IGNjaGFydF83IGNjaSBjZCBjZW5zb2JzX3RhYmxlIGNlbnRpbGUgY2YgY2hhciBjaGRpciBjaGVja2RsZ2ZpbGVzIGNoZWNrZXN0aW1hdGlvbnNhbXBsZSBjaGVja2hscGZpbGVzIGNoZWNrc3VtIGNoZWxwIGNpIGNpaSBjbCBjbGFzcyBjbGFzc3V0aWwgY2xlYXIgY2xpIGNsaXMgY2xpc3QgY2xvIGNsb2cgY2xvZ19sZiBjbG9nX3AgY2xvZ2kgY2xvZ2lfc3cgY2xvZ2l0IGNsb2dpdF9sZiBjbG9naXRfcCBjbG9naXRwIGNsb2dsX3N3IGNsb2dsb2cgY2xvbmV2YXIgY2xzbGlzdGFycmF5IGNsdXN0ZXIgY2x1c3Rlcl9tZWFzdXJlcyBjbHVzdGVyX3N0b3AgY2x1c3Rlcl90cmVlIGNsdXN0ZXJfdHJlZV84IGNsdXN0ZXJtYXQgY21kbG9nIGNuciBjbnJlIGNucmVnIGNucmVnX3AgY25yZWdfc3cgY25zcmVnIGNvZGVib29rIGNvbGxhcHM0IGNvbGxhcHNlIGNvbG9ybXVsdF9uYiBjb2xvcm11bHRfbncgY29tcGFyZSBjb21wcmVzcyBjb25mIGNvbmZpIGNvbmZpciBjb25maXJtIGNvbnJlbiBjb25zIGNvbnN0IGNvbnN0ciBjb25zdHJhIGNvbnN0cmFpIGNvbnN0cmFpbiBjb25zdHJhaW50IGNvbnRpbnVlIGNvbnRyYWN0IGNvcHkgY29weXJpZ2h0IGNvcHlzb3VyY2UgY29yIGNvcmMgY29yciBjb3JyMmRhdGEgY29ycl9hbnRpIGNvcnJfa21vIGNvcnJfc21jIGNvcnJlIGNvcnJlbCBjb3JyZWxhIGNvcnJlbGF0IGNvcnJlbGF0ZSBjb3JyZ3JhbSBjb3UgY291biBjb3VudCBjb3ggY294X3AgY294X3N3IGNveGJhc2UgY294aGF6IGNveHZhciBjcHJwbG90IGNwcnBsb3RfNyBjcmMgY3JldCBjcmV0dSBjcmV0dXIgY3JldHVybiBjcm9zcyBjcyBjc2NyaXB0IGNzY3JpcHRfbG9nIGNzaSBjdCBjdF9pcyBjdHNldCBjdHN0XzUgY3RzdF9zdCBjdHRvc3QgY3Vtc3AgY3Vtc3BfNyBjdW11bCBjdXN1bSBjdXN1bV83IGN1dGlsIGQgZGF0YXNpZyBkYXRhc2lnbiBkYXRhc2lnbmEgZGF0YXNpZ25hdCBkYXRhc2lnbmF0dSBkYXRhc2lnbmF0dXIgZGF0YXNpZ25hdHVyZSBkYXRldG9mIGRiIGRiZXRhIGRlIGRlYyBkZWNvIGRlY29kIGRlY29kZSBkZWZmIGRlcyBkZXNjIGRlc2NyIGRlc2NyaSBkZXNjcmliIGRlc2NyaWJlIGRlc3RyaW5nIGRmYmV0YSBkZmdscyBkZnVsbGVyIGRpIGRpX2cgZGlyIGRpcnN0YXRzIGRpcyBkaXNjYXJkIGRpc3AgZGlzcF9yZXMgZGlzcF9zIGRpc3BsIGRpc3BsYSBkaXNwbGF5IGRpc3RpbmN0IGRvIGRvZSBkb2VkIGRvZWRpIGRvZWRpdCBkb3RwbG90IGRvdHBsb3RfNyBkcHJvYml0IGRyYXdub3JtIGRyb3AgZHMgZHNfdXRpbCBkc3RkaXplIGR1cGxpY2F0ZXMgZHVyYmluYSBkd3N0YXQgZHlkeCBlIGVkIGVkaSBlZGl0IGVnZW4gZWl2cmVnIGVtZGVmIGVuIGVuYyBlbmNvIGVuY29kIGVuY29kZSBlcSBlcmFzZSBlcmVnIGVyZWdfbGYgZXJlZ19wIGVyZWdfc3cgZXJlZ2hldCBlcmVnaGV0X2dsZiBlcmVnaGV0X2dsZl9zaCBlcmVnaGV0X2dwIGVyZWdoZXRfaWxmIGVyZWdoZXRfaWxmX3NoIGVyZWdoZXRfaXAgZXJldCBlcmV0dSBlcmV0dXIgZXJldHVybiBlcnIgZXJybyBlcnJvciBlc3QgZXN0X2NmZXhpc3QgZXN0X2NmbmFtZSBlc3RfY2xpY2thYmxlIGVzdF9leHBhbmQgZXN0X2hvbGQgZXN0X3RhYmxlIGVzdF91bmhvbGQgZXN0X3VuaG9sZG9rIGVzdGF0IGVzdGF0X2RlZmF1bHQgZXN0YXRfc3VtbSBlc3RhdF92Y2Vfb25seSBlc3RpIGVzdGltYXRlcyBldG9kb3cgZXRvZiBldG9tZHkgZXggZXhpIGV4aXQgZXhwYW5kIGV4cGFuZGNsIGZhYyBmYWN0IGZhY3RvIGZhY3RvciBmYWN0b3JfZXN0YXQgZmFjdG9yX3AgZmFjdG9yX3BjYV9yb3RhdGVkIGZhY3Rvcl9yb3RhdGUgZmFjdG9ybWF0IGZjYXN0IGZjYXN0X2NvbXB1dGUgZmNhc3RfZ3JhcGggZmRhZGVzIGZkYWRlc2MgZmRhZGVzY3IgZmRhZGVzY3JpIGZkYWRlc2NyaWIgZmRhZGVzY3JpYmUgZmRhc2F2IGZkYXNhdmUgZmRhdXNlIGZoX3N0IGZpbGUgb3BlbiBmaWxlIHJlYWQgZmlsZSBjbG9zZSBmaWxlIGZpbGVmaWx0ZXIgZmlsbGluIGZpbmRfaGxwX2ZpbGUgZmluZGZpbGUgZmluZGl0IGZpbmRpdF83IGZpdCBmbCBmbGkgZmxpcyBmbGlzdCBmb3I1XzAgZm9ybSBmb3JtYSBmb3JtYXQgZnByZWRpY3QgZnJhY18xNTQgZnJhY19hZGogZnJhY19jaGsgZnJhY19jb3ggZnJhY19kZHAgZnJhY19kaXMgZnJhY19kdiBmcmFjX2luIGZyYWNfbXVuIGZyYWNfcHAgZnJhY19wcSBmcmFjX3B2IGZyYWNfd2d0IGZyYWNfeG8gZnJhY2dlbiBmcmFjcGxvdCBmcmFjcGxvdF83IGZyYWNwb2x5IGZyYWNwcmVkIGZyb25fZXggZnJvbl9obiBmcm9uX3AgZnJvbl90biBmcm9uX3RuMiBmcm9udGllciBmdG9kYXRlIGZ0b2UgZnRvbWR5IGZ0b3dkYXRlIGcgZ2FtaGV0X2dsZiBnYW1oZXRfZ3AgZ2FtaGV0X2lsZiBnYW1oZXRfaXAgZ2FtbWEgZ2FtbWFfZDIgZ2FtbWFfcCBnYW1tYV9zdyBnYW1tYWhldCBnZGlfaGV4YWdvbiBnZGlfc3Bva2VzIGdlIGdlbiBnZW5lIGdlbmVyIGdlbmVyYSBnZW5lcmF0IGdlbmVyYXRlIGdlbnJhbmsgZ2Vuc3RkIGdlbnZtZWFuIGdldHRva2VuIGdsIGdsYWRkZXIgZ2xhZGRlcl83IGdsaW1fbDAxIGdsaW1fbDAyIGdsaW1fbDAzIGdsaW1fbDA0IGdsaW1fbDA1IGdsaW1fbDA2IGdsaW1fbDA3IGdsaW1fbDA4IGdsaW1fbDA5IGdsaW1fbDEwIGdsaW1fbDExIGdsaW1fbDEyIGdsaW1fbGYgZ2xpbV9tdSBnbGltX253MSBnbGltX253MiBnbGltX253MyBnbGltX3AgZ2xpbV92MSBnbGltX3YyIGdsaW1fdjMgZ2xpbV92NCBnbGltX3Y1IGdsaW1fdjYgZ2xpbV92NyBnbG0gZ2xtXzYgZ2xtX3AgZ2xtX3N3IGdsbXByZWQgZ2xvIGdsb2IgZ2xvYmEgZ2xvYmFsIGdsb2dpdCBnbG9naXRfOCBnbG9naXRfcCBnbWVhbnMgZ25icmVfbGYgZ25icmVnIGduYnJlZ181IGduYnJlZ19wIGdvbXBfbGYgZ29tcGVfc3cgZ29tcGVyX3AgZ29tcGVydHogZ29tcGVydHpoZXQgZ29tcGhldF9nbGYgZ29tcGhldF9nbGZfc2ggZ29tcGhldF9ncCBnb21waGV0X2lsZiBnb21waGV0X2lsZl9zaCBnb21waGV0X2lwIGdwaGRvdCBncGhwZW4gZ3BocHJpbnQgZ3ByZWZzIGdwcm9iaV9wIGdwcm9iaXQgZ3Byb2JpdF84IGdyIGdyNyBncl9jb3B5IGdyX2N1cnJlbnQgZ3JfZGIgZ3JfZGVzY3JpYmUgZ3JfZGlyIGdyX2RyYXcgZ3JfZHJhd19yZXBsYXkgZ3JfZHJvcCBncl9lZGl0IGdyX2VkaXR2aWV3b3B0cyBncl9leGFtcGxlIGdyX2V4YW1wbGUyIGdyX2V4cG9ydCBncl9wcmludCBncl9xc2NoZW1lIGdyX3F1ZXJ5IGdyX3JlYWQgZ3JfcmVuYW1lIGdyX3JlcGxheSBncl9zYXZlIGdyX3NldCBncl9zZXRzY2hlbWUgZ3JfdGFibGUgZ3JfdW5kbyBncl91c2UgZ3JhcGggZ3JhcGg3IGdyZWJhciBncmVpZ2VuIGdyZWlnZW5fNyBncmVpZ2VuXzggZ3JtZWFuYnkgZ3JtZWFuYnlfNyBnc19maWxlaW5mbyBnc19maWxldHlwZSBnc19ncmFwaGluZm8gZ3Nfc3RhdCBnc29ydCBnd29vZCBoIGhhZGltdm8gaGFyZWcgaGF1c21hbiBoYXZlciBoZSBoZWNrX2QyIGhlY2ttYV9wIGhlY2ttYW4gaGVja3BfbGYgaGVja3ByX3AgaGVja3Byb2IgaGVsIGhlbHAgaGVyZWcgaGV0cHJfbGYgaGV0cHJfcCBoZXRwcm9iIGhldHRlc3QgaGV4ZHVtcCBoaWxpdGUgaGlzdCBoaXN0XzcgaGlzdG9ncmFtIGhsb2dpdCBobHUgaG1lYW5zIGhvdGVsIGhvdGVsbGluZyBocHJvYml0IGhyZWcgaHNlYXJjaCBpY2Q5IGljZDlfZmYgaWNkOXAgaWlzIGltcHV0ZSBpbXRlc3QgaW5iYXNlIGluY2x1ZGUgaW5mIGluZmkgaW5maWwgaW5maWxlIGluZml4IGlucCBpbnB1IGlucHV0IGlucyBpbnNoZWV0IGluc3AgaW5zcGUgaW5zcGVjIGluc3BlY3QgaW50ZWcgaW50ZW4gaW50cmVnIGludHJlZ183IGludHJlZ19wIGludHJnMl9sbCBpbnRyZ19sbCBpbnRyZ19sbDIgaXBvbGF0ZSBpcXJlZyBpciBpcmYgaXJmX2NyZWF0ZSBpcmZtIGlyaSBpc19zdnkgaXNfc3Z5c3VtIGlzaWQgaXN0ZGl6ZSBpdnByb2JfMV9sZiBpdnByb2JfbGYgaXZwcm9iaXQgaXZwcm9iaXRfcCBpdnJlZyBpdnJlZ19mb290bm90ZSBpdnRvYl8xX2xmIGl2dG9iX2xmIGl2dG9iaXQgaXZ0b2JpdF9wIGphY2trbmlmZSBqYWNrbmlmZSBqa25pZmUgamtuaWZlXzYgamtuaWZlXzggamtzdGF0IGpvaW5ieSBrYWxhcm1hMSBrYXAga2FwXzMga2FwbWVpZXIga2FwcGEga2Fwd2d0IGtkZW5zaXR5IGtkZW5zaXR5Xzcga2VlcCBrc20ga3NtaXJub3Yga3RhdSBrd2FsbGlzIGwgbGEgbGFiIGxhYmUgbGFiZWwgbGFiZWxib29rIGxhZGRlciBsZXZlbHMgbGV2ZWxzb2YgbGV2ZXJhZ2UgbGZpdCBsZml0X3AgbGkgbGluY29tIGxpbmUgbGlua3Rlc3QgbGlzIGxpc3QgbGxvZ2hldF9nbGYgbGxvZ2hldF9nbGZfc2ggbGxvZ2hldF9ncCBsbG9naGV0X2lsZiBsbG9naGV0X2lsZl9zaCBsbG9naGV0X2lwIGxsb2dpX3N3IGxsb2dpc19wIGxsb2dpc3QgbGxvZ2lzdGljIGxsb2dpc3RpY2hldCBsbm9ybV9sZiBsbm9ybV9zdyBsbm9ybWFfcCBsbm9ybWFsIGxub3JtYWxoZXQgbG5vcm1oZXRfZ2xmIGxub3JtaGV0X2dsZl9zaCBsbm9ybWhldF9ncCBsbm9ybWhldF9pbGYgbG5vcm1oZXRfaWxmX3NoIGxub3JtaGV0X2lwIGxuc2tldzAgbG9hZGluZ3Bsb3QgbG9jIGxvY2EgbG9jYWwgbG9nIGxvZ2kgbG9naXNfbGYgbG9naXN0aWMgbG9naXN0aWNfcCBsb2dpdCBsb2dpdF9lc3RhdCBsb2dpdF9wIGxvZ2xvZ3MgbG9ncmFuayBsb25ld2F5IGxvb2tmb3IgbG9va3VwIGxvd2VzcyBsb3dlc3NfNyBscHJlZGljdCBscmVjb21wIGxyb2MgbHJvY183IGxydGVzdCBscyBsc2VucyBsc2Vuc183IGxzZW5zX3ggbHN0YXQgbHRhYmxlIGx0YWJsZV83IGx0cmlhbmcgbHYgbHZyMnBsb3QgbHZyMnBsb3RfNyBtIG1hIG1hYyBtYWNyIG1hY3JvIG1ha2VjbnMgbWFuIG1hbm92YSBtYW5vdmFfZXN0YXQgbWFub3ZhX3AgbWFub3ZhdGVzdCBtYW50ZWwgbWFyayBtYXJraW4gbWFya291dCBtYXJrc2FtcGxlIG1hdCBtYXRfY2FwcCBtYXRfb3JkZXIgbWF0X3B1dF9yciBtYXRfcmFwcCBtYXRhIG1hdGFfY2xlYXIgbWF0YV9kZXNjcmliZSBtYXRhX2Ryb3AgbWF0YV9tYXRkZXNjcmliZSBtYXRhX21hdHNhdmUgbWF0YV9tYXR1c2UgbWF0YV9tZW1vcnkgbWF0YV9tbGliIG1hdGFfbW9zYXZlIG1hdGFfcmVuYW1lIG1hdGFfd2hpY2ggbWF0YWxhYmVsIG1hdGNwcm9jIG1hdGxpc3QgbWF0bmFtZSBtYXRyIG1hdHJpIG1hdHJpeCBtYXRyaXhfaW5wdXRfX2RsZyBtYXRzdHJpayBtY2MgbWNjaSBtZDBfIG1kMV8gbWQxZGVidWdfIG1kMl8gbWQyZGVidWdfIG1kcyBtZHNfZXN0YXQgbWRzX3AgbWRzY29uZmlnIG1kc2xvbmcgbWRzbWF0IG1kc3NoZXBhcmQgbWR5dG9lIG1keXRvZiBtZV9kZXJkIG1lYW4gbWVhbnMgbWVkaWFuIG1lbW9yeSBtZW1zaXplIG1lcXBhcnNlIG1lciBtZXJnIG1lcmdlIG1mcCBtZnggbWhlbHAgbWhvZGRzIG1pbmJvdW5kIG1peGVkX2xsIG1peGVkX2xsX3JlcGFybSBta2Fzc2VydCBta2RpciBta21hdCBta3NwbGluZSBtbCBtbF81IG1sX2FkanMgbWxfYmhoaHMgbWxfY19kIG1sX2NoZWNrIG1sX2NsZWFyIG1sX2NudCBtbF9kZWJ1ZyBtbF9kZWZkIG1sX2UwIG1sX2UwX2JmZ3MgbWxfZTBfY3ljbGUgbWxfZTBfZGZwIG1sX2UwaSBtbF9lMSBtbF9lMV9iZmdzIG1sX2UxX2JoaGggbWxfZTFfY3ljbGUgbWxfZTFfZGZwIG1sX2UyIG1sX2UyX2N5Y2xlIG1sX2ViZmcwIG1sX2ViZnIwIG1sX2ViZnIxIG1sX2ViaDBxIG1sX2ViaGgwIG1sX2ViaHIwIG1sX2VicjBpIG1sX2VjcjBpIG1sX2VkZnAwIG1sX2VkZnIwIG1sX2VkZnIxIG1sX2VkcjBpIG1sX2VkcyBtbF9lZXIwaSBtbF9lZ3IwaSBtbF9lbGYgbWxfZWxmX2JmZ3MgbWxfZWxmX2JoaGggbWxfZWxmX2N5Y2xlIG1sX2VsZl9kZnAgbWxfZWxmaSBtbF9lbGZzIG1sX2VucjBpIG1sX2VucnIwIG1sX2VyZHUwIG1sX2VyZHUwX2JmZ3MgbWxfZXJkdTBfYmhoaCBtbF9lcmR1MF9iaGhocSBtbF9lcmR1MF9jeWNsZSBtbF9lcmR1MF9kZnAgbWxfZXJkdTBfbnJiZmdzIG1sX2V4ZGUgbWxfZm9vdG5vdGUgbWxfZ2VxbnIgbWxfZ3JhZDAgbWxfZ3JhcGggbWxfaGJoaGggbWxfaGQwIG1sX2hvbGQgbWxfaW5pdCBtbF9pbnYgbWxfbG9nIG1sX21heCBtbF9tbG91dCBtbF9tbG91dF84IG1sX21vZGVsIG1sX25iMCBtbF9vcHQgbWxfcCBtbF9wbG90IG1sX3F1ZXJ5IG1sX3JkZ3JkIG1sX3JlcG9yIG1sX3NfZSBtbF9zY29yZSBtbF9zZWFyYyBtbF90ZWNobmlxdWUgbWxfdW5ob2xkIG1sZXZhbCBtbGZfIG1sbWF0YnlzdW0gbWxtYXRzdW0gbWxvZyBtbG9naSBtbG9naXQgbWxvZ2l0X2Zvb3Rub3RlIG1sb2dpdF9wIG1sb3B0cyBtbHN1bSBtbHZlY3N1bSBtbmwwXyBtb3IgbW9yZSBtb3YgbW92ZSBtcHJvYml0IG1wcm9iaXRfbGYgbXByb2JpdF9wIG1yZHUwXyBtcmR1MV8gbXZkZWNvZGUgbXZlbmNvZGUgbXZyZWcgbXZyZWdfZXN0YXQgbiBuYnJlZyBuYnJlZ19hbCBuYnJlZ19sZiBuYnJlZ19wIG5icmVnX3N3IG5lc3RyZWcgbmV0IG5ld2V5IG5ld2V5XzcgbmV3ZXlfcCBuZXdzIG5sIG5sXzcgbmxfOSBubF85X3AgbmxfcCBubF9wXzcgbmxjb20gbmxjb21fcCBubGV4cDIgbmxleHAyXzcgbmxleHAyYSBubGV4cDJhXzcgbmxleHAzIG5sZXhwM183IG5sZ29tMyBubGdvbTNfNyBubGdvbTQgbmxnb200Xzcgbmxpbml0IG5sbG9nMyBubGxvZzNfNyBubGxvZzQgbmxsb2c0XzcgbmxvZ19yZCBubG9naXQgbmxvZ2l0X3AgbmxvZ2l0Z2VuIG5sb2dpdHRyZWUgbmxwcmVkIG5vIG5vYnJlYWsgbm9pIG5vaXMgbm9pc2kgbm9pc2lsIG5vaXNpbHkgbm90ZSBub3RlcyBub3Rlc19kbGcgbnB0cmVuZCBudW1sYWJlbCBudW1saXN0IG9kYmMgb2xkX3ZlciBvbG8gb2xvZyBvbG9naSBvbG9naV9zdyBvbG9naXQgb2xvZ2l0X3Agb2xvZ2l0cCBvbiBvbmUgb25ldyBvbmV3YSBvbmV3YXkgb3BfY29sbm0gb3BfY29tcCBvcF9kaWZmIG9wX2ludiBvcF9zdHIgb3ByIG9wcm8gb3Byb2Igb3Byb2Jfc3cgb3Byb2JpIG9wcm9iaV9wIG9wcm9iaXQgb3Byb2JpdHAgb3B0c19leGNsdXNpdmUgb3JkZXIgb3J0aG9nIG9ydGhwb2x5IG91IG91dCBvdXRmIG91dGZpIG91dGZpbCBvdXRmaWxlIG91dHMgb3V0c2ggb3V0c2hlIG91dHNoZWUgb3V0c2hlZXQgb3Z0ZXN0IHBhYyBwYWNfNyBwYWxldHRlIHBhcnNlIHBhcnNlX2Rpc3NpbSBwYXVzZSBwY2EgcGNhXzggcGNhX2Rpc3BsYXkgcGNhX2VzdGF0IHBjYV9wIHBjYV9yb3RhdGUgcGNhbWF0IHBjaGFydCBwY2hhcnRfNyBwY2hpIHBjaGlfNyBwY29yciBwY3RpbGUgcGVudGl1bSBwZXJncmFtIHBlcmdyYW1fNyBwZXJtdXRlIHBlcm11dGVfOCBwZXJzb25hbCBwZXRvX3N0IHBrY29sbGFwc2UgcGtjcm9zcyBwa2VxdWl2IHBrZXhhbWluZSBwa2V4YW1pbmVfNyBwa3NoYXBlIHBrc3VtbSBwa3N1bW1fNyBwbCBwbG8gcGxvdCBwbHVnaW4gcG5vcm0gcG5vcm1fNyBwb2lzZ29mIHBvaXNzX2xmIHBvaXNzX3N3IHBvaXNzb19wIHBvaXNzb24gcG9pc3Nvbl9lc3RhdCBwb3N0IHBvc3RjbG9zZSBwb3N0ZmlsZSBwb3N0dXRpbCBwcGVycm9uIHByIHByYWlzIHByYWlzX2UgcHJhaXNfZTIgcHJhaXNfcCBwcmVkaWN0IHByZWRpY3RubCBwcmVzZXJ2ZSBwcmludCBwcm8gcHJvYiBwcm9iaSBwcm9iaXQgcHJvYml0X2VzdGF0IHByb2JpdF9wIHByb2NfdGltZSBwcm9jb3ZlcmxheSBwcm9jcnVzdGVzIHByb2NydXN0ZXNfZXN0YXQgcHJvY3J1c3Rlc19wIHByb2ZpbGVyIHByb2cgcHJvZ3IgcHJvZ3JhIHByb2dyYW0gcHJvcCBwcm9wb3J0aW9uIHBydGVzdCBwcnRlc3RpIHB3Y29yciBwd2QgcVxccyBxYnkgcWJ5cyBxY2hpIHFjaGlfNyBxbGFkZGVyIHFsYWRkZXJfNyBxbm9ybSBxbm9ybV83IHFxcGxvdCBxcXBsb3RfNyBxcmVnIHFyZWdfYyBxcmVnX3AgcXJlZ19zdyBxdSBxdWFkY2hrIHF1YW50aWxlIHF1YW50aWxlXzcgcXVlIHF1ZXIgcXVlcnkgcmFuZ2UgcmFua3N1bSByYXRpbyByY2hhcnQgcmNoYXJ0XzcgcmNvZiByZWNhc3QgcmVjbGluayByZWNvZGUgcmVnIHJlZzMgcmVnM19wIHJlZ2R3IHJlZ3IgcmVncmUgcmVncmVfcDIgcmVncmVzIHJlZ3Jlc19wIHJlZ3Jlc3MgcmVncmVzc19lc3RhdCByZWdyaXZfcCByZW1hcCByZW4gcmVuYSByZW5hbSByZW5hbWUgcmVucGZpeCByZXBlYXQgcmVwbGFjZSByZXBvcnQgcmVzaGFwZSByZXN0b3JlIHJldCByZXR1IHJldHVyIHJldHVybiBybSBybWRpciByb2J2YXIgcm9jY29tcCByb2Njb21wXzcgcm9jY29tcF84IHJvY2ZfbGYgcm9jZml0IHJvY2ZpdF84IHJvY2dvbGQgcm9jcGxvdCByb2NwbG90Xzcgcm9jdGFiIHJvY3RhYl83IHJvbGxpbmcgcm9sb2dpdCByb2xvZ2l0X3Agcm90IHJvdGEgcm90YXQgcm90YXRlIHJvdGF0ZW1hdCBycmVnIHJyZWdfcCBydSBydW4gcnVudGVzdCBydmZwbG90IHJ2ZnBsb3RfNyBydnBwbG90IHJ2cHBsb3RfNyBzYSBzYWZlc3VtIHNhbXBsZSBzYW1wc2kgc2F2IHNhdmUgc2F2ZWRyZXN1bHRzIHNhdmVvbGQgc2Mgc2NhIHNjYWwgc2NhbGEgc2NhbGFyIHNjYXR0ZXIgc2NtX21pbmUgc2NvIHNjb2JfbGYgc2NvYl9wIHNjb2JpX3N3IHNjb2JpdCBzY29yIHNjb3JlIHNjb3JlcGxvdCBzY29yZXBsb3RfaGVscCBzY3JlZSBzY3JlZXBsb3Qgc2NyZWVwbG90X2hlbHAgc2R0ZXN0IHNkdGVzdGkgc2Ugc2VhcmNoIHNlcGFyYXRlIHNlcGVyYXRlIHNlcnJiYXIgc2VycmJhcl83IHNlcnNldCBzZXQgc2V0X2RlZmF1bHRzIHNmcmFuY2lhIHNoIHNoZSBzaGVsIHNoZWxsIHNoZXdoYXJ0IHNoZXdoYXJ0Xzcgc2lnbmVzdGltYXRpb25zYW1wbGUgc2lnbnJhbmsgc2lnbnRlc3Qgc2ltdWwgc2ltdWxfNyBzaW11bGF0ZSBzaW11bGF0ZV84IHNrdGVzdCBzbGVlcCBzbG9naXQgc2xvZ2l0X2QyIHNsb2dpdF9wIHNtb290aCBzbmFwc3BhbiBzbyBzb3Igc29ydCBzcGVhcm1hbiBzcGlrZXBsb3Qgc3Bpa2VwbG90Xzcgc3Bpa2VwbHQgc3BsaW5lX3ggc3BsaXQgc3FyZWcgc3FyZWdfcCBzcmV0IHNyZXR1IHNyZXR1ciBzcmV0dXJuIHNzYyBzdCBzdF9jdCBzdF9oYyBzdF9oY2Qgc3RfaGNkX3NoIHN0X2lzIHN0X2lzc3lzIHN0X25vdGUgc3RfcHJvbW8gc3Rfc2V0IHN0X3Nob3cgc3Rfc21wbCBzdF9zdWJpZCBzdGFjayBzdGF0c2J5IHN0YXRzYnlfOCBzdGJhc2Ugc3RjaSBzdGNpXzcgc3Rjb3ggc3Rjb3hfZXN0YXQgc3Rjb3hfZnIgc3Rjb3hfZnJfbGwgc3Rjb3hfcCBzdGNveF9zdyBzdGNveGttIHN0Y294a21fNyBzdGNzdGF0IHN0Y3VydiBzdGN1cnZlIHN0Y3VydmVfNyBzdGRlcyBzdGVtIHN0ZXB3aXNlIHN0ZXJlZyBzdGZpbGwgc3RnZW4gc3RpciBzdGpvaW4gc3RtYyBzdG1oIHN0cGhwbG90IHN0cGhwbG90Xzcgc3RwaHRlc3Qgc3RwaHRlc3RfNyBzdHB0aW1lIHN0cmF0ZSBzdHJhdGVfNyBzdHJlZyBzdHJlZ19zdyBzdHJlc2V0IHN0cyBzdHNfNyBzdHNldCBzdHNwbGl0IHN0c3VtIHN0dG9jYyBzdHRvY3Qgc3R2YXJ5IHN0d2VpYiBzdSBzdWVzdCBzdWVzdF84IHN1bSBzdW1tIHN1bW1hIHN1bW1hciBzdW1tYXJpIHN1bW1hcml6IHN1bW1hcml6ZSBzdW5mbG93ZXIgc3VyZWcgc3VydmN1cnYgc3VydnN1bSBzdmFyIHN2YXJfcCBzdm1hdCBzdnkgc3Z5X2Rpc3Agc3Z5X2RyZWcgc3Z5X2VzdCBzdnlfZXN0Xzcgc3Z5X2VzdGF0IHN2eV9nZXQgc3Z5X2duYnJlZ19wIHN2eV9oZWFkIHN2eV9oZWFkZXIgc3Z5X2hlY2ttYW5fcCBzdnlfaGVja3Byb2JfcCBzdnlfaW50cmVnX3Agc3Z5X2l2cmVnX3Agc3Z5X2xvZ2lzdGljX3Agc3Z5X2xvZ2l0X3Agc3Z5X21sb2dpdF9wIHN2eV9uYnJlZ19wIHN2eV9vbG9naXRfcCBzdnlfb3Byb2JpdF9wIHN2eV9wb2lzc29uX3Agc3Z5X3Byb2JpdF9wIHN2eV9yZWdyZXNzX3Agc3Z5X3N1YiBzdnlfc3ViXzcgc3Z5X3ggc3Z5X3hfNyBzdnlfeF9wIHN2eWRlcyBzdnlkZXNfOCBzdnlnZW4gc3Z5Z25icmVnIHN2eWhlY2ttYW4gc3Z5aGVja3Byb2Igc3Z5aW50cmVnIHN2eWludHJlZ183IHN2eWludHJnIHN2eWl2cmVnIHN2eWxjIHN2eWxvZ19wIHN2eWxvZ2l0IHN2eW1hcmtvdXQgc3Z5bWFya291dF84IHN2eW1lYW4gc3Z5bWxvZyBzdnltbG9naXQgc3Z5bmJyZWcgc3Z5b2xvZyBzdnlvbG9naXQgc3Z5b3Byb2Igc3Z5b3Byb2JpdCBzdnlvcHRzIHN2eXBvaXMgc3Z5cG9pc183IHN2eXBvaXNzb24gc3Z5cHJvYml0IHN2eXByb2J0IHN2eXByb3Agc3Z5cHJvcF83IHN2eXJhdGlvIHN2eXJlZyBzdnlyZWdfcCBzdnlyZWdyZXNzIHN2eXNldCBzdnlzZXRfNyBzdnlzZXRfOCBzdnl0YWIgc3Z5dGFiXzcgc3Z5dGVzdCBzdnl0b3RhbCBzdyBzd184IHN3Y25yZWcgc3djb3ggc3dlcmVnIHN3aWxrIHN3bG9naXMgc3dsb2dpdCBzd29sb2dpdCBzd29wcmJ0IHN3cG9pcyBzd3Byb2JpdCBzd3FyZWcgc3d0b2JpdCBzd3dlaWIgc3ltbWV0cnkgc3ltbWkgc3ltcGxvdCBzeW1wbG90Xzcgc3ludGF4IHN5c2Rlc2NyaWJlIHN5c2RpciBzeXN1c2Ugc3pyb2V0ZXIgdGEgdGFiIHRhYjEgdGFiMiB0YWJfb3IgdGFiZCB0YWJkaSB0YWJkaXMgdGFiZGlzcCB0YWJpIHRhYmxlIHRhYm9kZHMgdGFib2Rkc183IHRhYnN0YXQgdGFidSB0YWJ1bCB0YWJ1bGEgdGFidWxhdCB0YWJ1bGF0ZSB0ZSB0ZW1wZmlsZSB0ZW1wbmFtZSB0ZW1wdmFyIHRlcyB0ZXN0IHRlc3RubCB0ZXN0cGFybSB0ZXN0c3RkIHRldHJhY2hvcmljIHRpbWVfaXQgdGltZXIgdGlzIHRvYiB0b2JpIHRvYml0IHRvYml0X3AgdG9iaXRfc3cgdG9rZW4gdG9rZW5pIHRva2VuaXogdG9rZW5pemUgdG9zdHJpbmcgdG90YWwgdHJhbnNsYXRlIHRyYW5zbGF0b3IgdHJhbnNtYXAgdHJlYXRfbGwgdHJlYXRyX3AgdHJlYXRyZWcgdHJpbSB0cm5iX2NvbnMgdHJuYl9tZWFuIHRycG9pc3NfZDIgdHJ1bmNfbGwgdHJ1bmNyX3AgdHJ1bmNyZWcgdHNhcHBlbmQgdHNldCB0c2ZpbGwgdHNsaW5lIHRzbGluZV9leCB0c3JlcG9ydCB0c3JldmFyIHRzcmxpbmUgdHNzZXQgdHNzbW9vdGggdHN1bmFiIHR0ZXN0IHR0ZXN0aSB0dXRfY2hrIHR1dF93YWl0IHR1dG9yaWFsIHR3IHR3YXJlX3N0IHR3byB0d293YXkgdHdvd2F5X19mcGZpdF9zZXJzZXQgdHdvd2F5X19mdW5jdGlvbl9nZW4gdHdvd2F5X19oaXN0b2dyYW1fZ2VuIHR3b3dheV9faXBvaW50X3NlcnNldCB0d293YXlfX2lwb2ludHNfc2Vyc2V0IHR3b3dheV9fa2RlbnNpdHlfZ2VuIHR3b3dheV9fbGZpdF9zZXJzZXQgdHdvd2F5X19ub3JtZ2VuX2dlbiB0d293YXlfX3BjaV9zZXJzZXQgdHdvd2F5X19xZml0X3NlcnNldCB0d293YXlfX3NjYXR0ZXJpX3NlcnNldCB0d293YXlfX3N1bmZsb3dlcl9nZW4gdHdvd2F5X2tzbV9zZXJzZXQgdHkgdHlwIHR5cGUgdHlwZW9mIHUgdW5hYiB1bmFiYnJldiB1bmFiY21kIHVwZGF0ZSB1cyB1c2UgdXNlbGFiZWwgdmFyIHZhcl9ta2NvbXBhbmlvbiB2YXJfcCB2YXJiYXNpYyB2YXJmY2FzdCB2YXJncmFuZ2VyIHZhcmlyZiB2YXJpcmZfYWRkIHZhcmlyZl9jZ3JhcGggdmFyaXJmX2NyZWF0ZSB2YXJpcmZfY3RhYmxlIHZhcmlyZl9kZXNjcmliZSB2YXJpcmZfZGlyIHZhcmlyZl9kcm9wIHZhcmlyZl9lcmFzZSB2YXJpcmZfZ3JhcGggdmFyaXJmX29ncmFwaCB2YXJpcmZfcmVuYW1lIHZhcmlyZl9zZXQgdmFyaXJmX3RhYmxlIHZhcmxpc3QgdmFybG1hciB2YXJub3JtIHZhcnNvYyB2YXJzdGFibGUgdmFyc3RhYmxlX3cgdmFyc3RhYmxlX3cyIHZhcndsZSB2Y2UgdmVjIHZlY19mZXZkIHZlY19ta3BoaSB2ZWNfcCB2ZWNfcF93IHZlY2lyZl9jcmVhdGUgdmVjbG1hciB2ZWNsbWFyX3cgdmVjbm9ybSB2ZWNub3JtX3cgdmVjcmFuayB2ZWNzdGFibGUgdmVyaW5zdCB2ZXJzIHZlcnNpIHZlcnNpbyB2ZXJzaW9uIHZpZXcgdmlld3NvdXJjZSB2aWYgdndscyB3ZGF0ZXRvZiB3ZWJkZXNjcmliZSB3ZWJzZWVrIHdlYnVzZSB3ZWliMV9sZiB3ZWliMl9sZiB3ZWliX2xmIHdlaWJfbGYwIHdlaWJoZXRfZ2xmIHdlaWJoZXRfZ2xmX3NoIHdlaWJoZXRfZ2xmYSB3ZWliaGV0X2dsZmFfc2ggd2VpYmhldF9ncCB3ZWliaGV0X2lsZiB3ZWliaGV0X2lsZl9zaCB3ZWliaGV0X2lsZmEgd2VpYmhldF9pbGZhX3NoIHdlaWJoZXRfaXAgd2VpYnVfc3cgd2VpYnVsX3Agd2VpYnVsbCB3ZWlidWxsX2Mgd2VpYnVsbF9zIHdlaWJ1bGxoZXQgd2ggd2hlbHAgd2hpIHdoaWNoIHdoaWwgd2hpbGUgd2lsY19zdCB3aWxjb3hvbiB3aW4gd2luZCB3aW5kbyB3aW5kb3cgd2luZXhlYyB3bnRlc3RiIHdudGVzdGJfNyB3bnRlc3RxIHhjaGFydCB4Y2hhcnRfNyB4Y29yciB4Y29ycl83IHhpIHhpXzYgeG1sc2F2IHhtbHNhdmUgeG1sdXNlIHhwb3NlIHhzaCB4c2hlIHhzaGVsIHhzaGVsbCB4dF9paXMgeHRfdGlzIHh0YWJfcCB4dGFib25kIHh0YmluX3AgeHRjbG9nIHh0Y2xvZ2xvZyB4dGNsb2dsb2dfOCB4dGNsb2dsb2dfZDIgeHRjbG9nbG9nX3BhX3AgeHRjbG9nbG9nX3JlX3AgeHRjbnRfcCB4dGNvcnIgeHRkYXRhIHh0ZGVzIHh0ZnJvbnRfcCB4dGZyb250aWVyIHh0Z2VlIHh0Z2VlX2VsaW5rIHh0Z2VlX2VzdGF0IHh0Z2VlX21ha2VpdmFyIHh0Z2VlX3AgeHRnZWVfcGxpbmsgeHRnbHMgeHRnbHNfcCB4dGhhdXMgeHRoYXVzbWFuIHh0aHRfcCB4dGh0YXlsb3IgeHRpbGUgeHRpbnRfcCB4dGludHJlZyB4dGludHJlZ184IHh0aW50cmVnX2QyIHh0aW50cmVnX3AgeHRpdnBfMSB4dGl2cF8yIHh0aXZyZWcgeHRsaW5lIHh0bGluZV9leCB4dGxvZ2l0IHh0bG9naXRfOCB4dGxvZ2l0X2QyIHh0bG9naXRfZmVfcCB4dGxvZ2l0X3BhX3AgeHRsb2dpdF9yZV9wIHh0bWl4ZWQgeHRtaXhlZF9lc3RhdCB4dG1peGVkX3AgeHRuYl9mZSB4dG5iX2xmIHh0bmJyZWcgeHRuYnJlZ19wYV9wIHh0bmJyZWdfcmVmZV9wIHh0cGNzZSB4dHBjc2VfcCB4dHBvaXMgeHRwb2lzc29uIHh0cG9pc3Nvbl9kMiB4dHBvaXNzb25fcGFfcCB4dHBvaXNzb25fcmVmZV9wIHh0cHJlZCB4dHByb2JpdCB4dHByb2JpdF84IHh0cHJvYml0X2QyIHh0cHJvYml0X3JlX3AgeHRwc19mZSB4dHBzX2xmIHh0cHNfcmVuIHh0cHNfcmVuXzggeHRyYXJfcCB4dHJjIHh0cmNfcCB4dHJjaGggeHRyZWZlX3AgeHRyZWcgeHRyZWdfYmUgeHRyZWdfZmUgeHRyZWdfbWwgeHRyZWdfcGFfcCB4dHJlZ19yZSB4dHJlZ2FyIHh0cmVyZV9wIHh0c2V0IHh0c2ZfbGwgeHRzZl9sbHRpIHh0c3VtIHh0dGFiIHh0dGVzdDAgeHR0b2JpdCB4dHRvYml0XzggeHR0b2JpdF9wIHh0dHJhbnMgeXggeXh2aWV3X19iYXJsaWtlX2RyYXcgeXh2aWV3X2FyZWFfZHJhdyB5eHZpZXdfYmFyX2RyYXcgeXh2aWV3X2RvdF9kcmF3IHl4dmlld19kcm9wbGluZV9kcmF3IHl4dmlld19mdW5jdGlvbl9kcmF3IHl4dmlld19pYXJyb3dfZHJhdyB5eHZpZXdfaWxhYmVsc19kcmF3IHl4dmlld19ub3JtYWxfZHJhdyB5eHZpZXdfcGNhcnJvd19kcmF3IHl4dmlld19wY2JhcnJvd19kcmF3IHl4dmlld19wY2NhcHN5bV9kcmF3IHl4dmlld19wY3NjYXR0ZXJfZHJhdyB5eHZpZXdfcGNzcGlrZV9kcmF3IHl4dmlld19yYXJlYV9kcmF3IHl4dmlld19yYmFyX2RyYXcgeXh2aWV3X3JiYXJtX2RyYXcgeXh2aWV3X3JjYXBfZHJhdyB5eHZpZXdfcmNhcHN5bV9kcmF3IHl4dmlld19yY29ubmVjdGVkX2RyYXcgeXh2aWV3X3JsaW5lX2RyYXcgeXh2aWV3X3JzY2F0dGVyX2RyYXcgeXh2aWV3X3JzcGlrZV9kcmF3IHl4dmlld19zcGlrZV9kcmF3IHl4dmlld19zdW5mbG93ZXJfZHJhdyB6YXBfcyB6aW5iIHppbmJfbGxmIHppbmJfcGxmIHppcCB6aXBfbGxmIHppcF9wIHppcF9wbGYgenRfY3RfNSB6dF9oY181IHp0X2hjZF81IHp0X2lzXzUgenRfaXNzXzUgenRfc2hvXzUgenRfc21wXzUgenRiYXNlXzUgenRjb3hfNSB6dGRlc181IHp0ZXJlZ181IHp0ZmlsbF81IHp0Z2VuXzUgenRpcl81IHp0am9pbl81IHp0bmIgenRuYl9wIHp0cCB6dHBfcCB6dHNfNSB6dHNldF81IHp0c3BsaV81IHp0c3VtXzUgenR0b2N0XzUgenR2YXJ5XzUgenR3ZWliXzUiLGM6W3tjTjoibGFiZWwiLHY6W3tiOiJcXCRcXHs/W2EtekEtWl9dK1xcfT8ifSx7YjoiYFthLXpBLVpfXSsnIn1dfSx7Y046InN0cmluZyIsdjpbe2I6J2AiLioiXCcnfSx7YjonIi4qIid9XX0se2NOOiJsaXRlcmFsIix2Olt7YjoiXFxiKGFic3xhY29zfGFzaW58YXRhbnxhdGFuMnxhdGFuaHxjZWlsfGNsb2dsb2d8Y29tYnxjb3N8ZGlnYW1tYXxleHB8Zmxvb3J8aW52Y2xvZ2xvZ3xpbnZsb2dpdHxsbnxsbmZhY3R8bG5mYWN0b3JpYWx8bG5nYW1tYXxsb2d8bG9nMTB8bWF4fG1pbnxtb2R8cmVsZGlmfHJvdW5kfHNpZ258c2lufHNxcnR8c3VtfHRhbnx0YW5ofHRyaWdhbW1hfHRydW5jfGJldGFkZW58Qmlub21pYWx8Ymlub3JtfGJpbm9ybWFsfGNoaTJ8Y2hpMnRhaWx8ZGdhbW1hcGRhfGRnYW1tYXBkYWRhfGRnYW1tYXBkYWR4fGRnYW1tYXBkeHxkZ2FtbWFwZHhkeHxGfEZkZW58RnRhaWx8Z2FtbWFkZW58Z2FtbWFwfGliZXRhfGludmJpbm9taWFsfGludmNoaTJ8aW52Y2hpMnRhaWx8aW52RnxpbnZGdGFpbHxpbnZnYW1tYXB8aW52aWJldGF8aW52bmNoaTJ8aW52bkZ0YWlsfGludm5pYmV0YXxpbnZub3JtfGludm5vcm1hbHxpbnZ0dGFpbHxuYmV0YWRlbnxuY2hpMnxuRmRlbnxuRnRhaWx8bmliZXRhfG5vcm18bm9ybWFsfG5vcm1hbGRlbnxub3JtZHxucG5jaGkyfHRkZW58dHRhaWx8dW5pZm9ybXxhYmJyZXZ8Y2hhcnxpbmRleHxpbmRleG5vdHxsZW5ndGh8bG93ZXJ8bHRyaW18bWF0Y2h8cGx1cmFsfHByb3BlcnxyZWFsfHJlZ2V4bXxyZWdleHJ8cmVnZXhzfHJldmVyc2V8cnRyaW18c3RyaW5nfHN0cmxlbnxzdHJsb3dlcnxzdHJsdHJpbXxzdHJtYXRjaHxzdHJvZnJlYWx8c3RycG9zfHN0cnByb3BlcnxzdHJyZXZlcnNlfHN0cnJ0cmltfHN0cnRyaW18c3RydXBwZXJ8c3ViaW5zdHJ8c3ViaW53b3JkfHN1YnN0cnx0cmltfHVwcGVyfHdvcmR8d29yZGNvdW50fF9jYWxsZXJ8YXV0b2NvZGV8Ynl0ZW9yZGVyfGNob3B8Y2xpcHxjb25kfGV8ZXBzZG91YmxlfGVwc2Zsb2F0fGdyb3VwfGlubGlzdHxpbnJhbmdlfGlyZWNvZGV8bWF0cml4fG1heGJ5dGV8bWF4ZG91YmxlfG1heGZsb2F0fG1heGludHxtYXhsb25nfG1pfG1pbmJ5dGV8bWluZG91YmxlfG1pbmZsb2F0fG1pbmludHxtaW5sb25nfG1pc3Npbmd8cnxyZWNvZGV8cmVwbGF5fHJldHVybnxzfHNjYWxhcnxkfGRhdGV8ZGF5fGRvd3xkb3l8aGFsZnllYXJ8bWR5fG1vbnRofHF1YXJ0ZXJ8d2Vla3x5ZWFyfGR8ZGFpbHl8ZG9mZHxkb2ZofGRvZm18ZG9mcXxkb2Z3fGRvZnl8aHxoYWxmeWVhcmx5fGhvZmR8bXxtb2ZkfG1vbnRobHl8cXxxb2ZkfHF1YXJ0ZXJseXx0aW58dHdpdGhpbnx3fHdlZWtseXx3b2ZkfHl8eWVhcmx5fHlofHltfHlvZmR8eXF8eXd8Y2hvbGVza3l8Y29sbnVtYnxjb2xzb2Z8Y29ycnxkZXR8ZGlhZ3xkaWFnMGNudHxlbHxnZXR8aGFkYW1hcmR8SXxpbnZ8aW52c3ltfGlzc3ltfGlzc3ltbWV0cmljfEp8bWF0bWlzc2luZ3xtYXR1bmlmb3JtfG1yZWxkaWZ8bnVsbG1hdHxyb3dudW1ifHJvd3NvZnxzd2VlcHxzeW1pbnZ8dHJhY2V8dmVjfHZlY2RpYWcpKD89XFwofCQpIn1dfSx7Y046ImNvbW1lbnQiLHY6W3tiOiJeXFwqLiokIn0sZS5DTENNLGUuQ0JDTV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInN0ZXAyMSIsZnVuY3Rpb24oZSl7dmFyIHQ9IltBLVpfXVtBLVowLTlfLl0qIixyPSJFTkQtSVNPLTEwMzAzLTIxOyIsYT17bGl0ZXJhbDoiIixidWlsdF9pbjoiIixrZXl3b3JkOiJIRUFERVIgRU5EU0VDIERBVEEifSxpPXtjTjoicHJlcHJvY2Vzc29yIixiOiJJU08tMTAzMDMtMjE7IixyOjEwfSxuPVtlLkNMQ00se2NOOiJjb21tZW50IixiOiIvXFwqXFwqISIsZToiXFwqLyIsYzpbZS5QV01dfSxlLkNCQ00sZS5DTk0sZS5pbmhlcml0KGUuQVNNLHtpOm51bGx9KSxlLmluaGVyaXQoZS5RU00se2k6bnVsbH0pLHtjTjoic3RyaW5nIixiOiInIixlOiInIn0se2NOOiJsYWJlbCIsdjpbe2I6IiMiLGU6IlxcZCsiLGk6IlxcVyJ9XX1dO3JldHVybnthbGlhc2VzOlsicDIxIiwic3RlcCIsInN0cCJdLGNJOiEwLGw6dCxrOmEsYzpbe2NOOiJwcmVwcm9jZXNzb3IiLGI6cixyOjEwfSxpXS5jb25jYXQobil9fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJzdHlsdXMiLGZ1bmN0aW9uKGUpe3ZhciB0PXtjTjoidmFyaWFibGUiLGI6IlxcJCIrZS5JUn0scj17Y046ImhleGNvbG9yIixiOiIjKFthLWZBLUYwLTldezZ9fFthLWZBLUYwLTldezN9KSIscjoxMH0sYT1bImNoYXJzZXQiLCJjc3MiLCJkZWJ1ZyIsImV4dGVuZCIsImZvbnQtZmFjZSIsImZvciIsImltcG9ydCIsImluY2x1ZGUiLCJtZWRpYSIsIm1peGluIiwicGFnZSIsIndhcm4iLCJ3aGlsZSJdLGk9WyJhZnRlciIsImJlZm9yZSIsImZpcnN0LWxldHRlciIsImZpcnN0LWxpbmUiLCJhY3RpdmUiLCJmaXJzdC1jaGlsZCIsImZvY3VzIiwiaG92ZXIiLCJsYW5nIiwibGluayIsInZpc2l0ZWQiXSxuPVsiYSIsImFiYnIiLCJhZGRyZXNzIiwiYXJ0aWNsZSIsImFzaWRlIiwiYXVkaW8iLCJiIiwiYmxvY2txdW90ZSIsImJvZHkiLCJidXR0b24iLCJjYW52YXMiLCJjYXB0aW9uIiwiY2l0ZSIsImNvZGUiLCJkZCIsImRlbCIsImRldGFpbHMiLCJkZm4iLCJkaXYiLCJkbCIsImR0IiwiZW0iLCJmaWVsZHNldCIsImZpZ2NhcHRpb24iLCJmaWd1cmUiLCJmb290ZXIiLCJmb3JtIiwiaDEiLCJoMiIsImgzIiwiaDQiLCJoNSIsImg2IiwiaGVhZGVyIiwiaGdyb3VwIiwiaHRtbCIsImkiLCJpZnJhbWUiLCJpbWciLCJpbnB1dCIsImlucyIsImtiZCIsImxhYmVsIiwibGVnZW5kIiwibGkiLCJtYXJrIiwibWVudSIsIm5hdiIsIm9iamVjdCIsIm9sIiwicCIsInEiLCJxdW90ZSIsInNhbXAiLCJzZWN0aW9uIiwic3BhbiIsInN0cm9uZyIsInN1bW1hcnkiLCJzdXAiLCJ0YWJsZSIsInRib2R5IiwidGQiLCJ0ZXh0YXJlYSIsInRmb290IiwidGgiLCJ0aGVhZCIsInRpbWUiLCJ0ciIsInVsIiwidmFyIiwidmlkZW8iXSxvPSJbXFwuXFxzXFxuXFxbXFw6LF0iLHM9WyJhbGlnbi1jb250ZW50IiwiYWxpZ24taXRlbXMiLCJhbGlnbi1zZWxmIiwiYW5pbWF0aW9uIiwiYW5pbWF0aW9uLWRlbGF5IiwiYW5pbWF0aW9uLWRpcmVjdGlvbiIsImFuaW1hdGlvbi1kdXJhdGlvbiIsImFuaW1hdGlvbi1maWxsLW1vZGUiLCJhbmltYXRpb24taXRlcmF0aW9uLWNvdW50IiwiYW5pbWF0aW9uLW5hbWUiLCJhbmltYXRpb24tcGxheS1zdGF0ZSIsImFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb24iLCJhdXRvIiwiYmFja2ZhY2UtdmlzaWJpbGl0eSIsImJhY2tncm91bmQiLCJiYWNrZ3JvdW5kLWF0dGFjaG1lbnQiLCJiYWNrZ3JvdW5kLWNsaXAiLCJiYWNrZ3JvdW5kLWNvbG9yIiwiYmFja2dyb3VuZC1pbWFnZSIsImJhY2tncm91bmQtb3JpZ2luIiwiYmFja2dyb3VuZC1wb3NpdGlvbiIsImJhY2tncm91bmQtcmVwZWF0IiwiYmFja2dyb3VuZC1zaXplIiwiYm9yZGVyIiwiYm9yZGVyLWJvdHRvbSIsImJvcmRlci1ib3R0b20tY29sb3IiLCJib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzIiwiYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXMiLCJib3JkZXItYm90dG9tLXN0eWxlIiwiYm9yZGVyLWJvdHRvbS13aWR0aCIsImJvcmRlci1jb2xsYXBzZSIsImJvcmRlci1jb2xvciIsImJvcmRlci1pbWFnZSIsImJvcmRlci1pbWFnZS1vdXRzZXQiLCJib3JkZXItaW1hZ2UtcmVwZWF0IiwiYm9yZGVyLWltYWdlLXNsaWNlIiwiYm9yZGVyLWltYWdlLXNvdXJjZSIsImJvcmRlci1pbWFnZS13aWR0aCIsImJvcmRlci1sZWZ0IiwiYm9yZGVyLWxlZnQtY29sb3IiLCJib3JkZXItbGVmdC1zdHlsZSIsImJvcmRlci1sZWZ0LXdpZHRoIiwiYm9yZGVyLXJhZGl1cyIsImJvcmRlci1yaWdodCIsImJvcmRlci1yaWdodC1jb2xvciIsImJvcmRlci1yaWdodC1zdHlsZSIsImJvcmRlci1yaWdodC13aWR0aCIsImJvcmRlci1zcGFjaW5nIiwiYm9yZGVyLXN0eWxlIiwiYm9yZGVyLXRvcCIsImJvcmRlci10b3AtY29sb3IiLCJib3JkZXItdG9wLWxlZnQtcmFkaXVzIiwiYm9yZGVyLXRvcC1yaWdodC1yYWRpdXMiLCJib3JkZXItdG9wLXN0eWxlIiwiYm9yZGVyLXRvcC13aWR0aCIsImJvcmRlci13aWR0aCIsImJvdHRvbSIsImJveC1kZWNvcmF0aW9uLWJyZWFrIiwiYm94LXNoYWRvdyIsImJveC1zaXppbmciLCJicmVhay1hZnRlciIsImJyZWFrLWJlZm9yZSIsImJyZWFrLWluc2lkZSIsImNhcHRpb24tc2lkZSIsImNsZWFyIiwiY2xpcCIsImNsaXAtcGF0aCIsImNvbG9yIiwiY29sdW1uLWNvdW50IiwiY29sdW1uLWZpbGwiLCJjb2x1bW4tZ2FwIiwiY29sdW1uLXJ1bGUiLCJjb2x1bW4tcnVsZS1jb2xvciIsImNvbHVtbi1ydWxlLXN0eWxlIiwiY29sdW1uLXJ1bGUtd2lkdGgiLCJjb2x1bW4tc3BhbiIsImNvbHVtbi13aWR0aCIsImNvbHVtbnMiLCJjb250ZW50IiwiY291bnRlci1pbmNyZW1lbnQiLCJjb3VudGVyLXJlc2V0IiwiY3Vyc29yIiwiZGlyZWN0aW9uIiwiZGlzcGxheSIsImVtcHR5LWNlbGxzIiwiZmlsdGVyIiwiZmxleCIsImZsZXgtYmFzaXMiLCJmbGV4LWRpcmVjdGlvbiIsImZsZXgtZmxvdyIsImZsZXgtZ3JvdyIsImZsZXgtc2hyaW5rIiwiZmxleC13cmFwIiwiZmxvYXQiLCJmb250IiwiZm9udC1mYW1pbHkiLCJmb250LWZlYXR1cmUtc2V0dGluZ3MiLCJmb250LWtlcm5pbmciLCJmb250LWxhbmd1YWdlLW92ZXJyaWRlIiwiZm9udC1zaXplIiwiZm9udC1zaXplLWFkanVzdCIsImZvbnQtc3RyZXRjaCIsImZvbnQtc3R5bGUiLCJmb250LXZhcmlhbnQiLCJmb250LXZhcmlhbnQtbGlnYXR1cmVzIiwiZm9udC13ZWlnaHQiLCJoZWlnaHQiLCJoeXBoZW5zIiwiaWNvbiIsImltYWdlLW9yaWVudGF0aW9uIiwiaW1hZ2UtcmVuZGVyaW5nIiwiaW1hZ2UtcmVzb2x1dGlvbiIsImltZS1tb2RlIiwiaW5oZXJpdCIsImluaXRpYWwiLCJqdXN0aWZ5LWNvbnRlbnQiLCJsZWZ0IiwibGV0dGVyLXNwYWNpbmciLCJsaW5lLWhlaWdodCIsImxpc3Qtc3R5bGUiLCJsaXN0LXN0eWxlLWltYWdlIiwibGlzdC1zdHlsZS1wb3NpdGlvbiIsImxpc3Qtc3R5bGUtdHlwZSIsIm1hcmdpbiIsIm1hcmdpbi1ib3R0b20iLCJtYXJnaW4tbGVmdCIsIm1hcmdpbi1yaWdodCIsIm1hcmdpbi10b3AiLCJtYXJrcyIsIm1hc2siLCJtYXgtaGVpZ2h0IiwibWF4LXdpZHRoIiwibWluLWhlaWdodCIsIm1pbi13aWR0aCIsIm5hdi1kb3duIiwibmF2LWluZGV4IiwibmF2LWxlZnQiLCJuYXYtcmlnaHQiLCJuYXYtdXAiLCJub25lIiwibm9ybWFsIiwib2JqZWN0LWZpdCIsIm9iamVjdC1wb3NpdGlvbiIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJvdXRsaW5lIiwib3V0bGluZS1jb2xvciIsIm91dGxpbmUtb2Zmc2V0Iiwib3V0bGluZS1zdHlsZSIsIm91dGxpbmUtd2lkdGgiLCJvdmVyZmxvdyIsIm92ZXJmbG93LXdyYXAiLCJvdmVyZmxvdy14Iiwib3ZlcmZsb3cteSIsInBhZGRpbmciLCJwYWRkaW5nLWJvdHRvbSIsInBhZGRpbmctbGVmdCIsInBhZGRpbmctcmlnaHQiLCJwYWRkaW5nLXRvcCIsInBhZ2UtYnJlYWstYWZ0ZXIiLCJwYWdlLWJyZWFrLWJlZm9yZSIsInBhZ2UtYnJlYWstaW5zaWRlIiwicGVyc3BlY3RpdmUiLCJwZXJzcGVjdGl2ZS1vcmlnaW4iLCJwb2ludGVyLWV2ZW50cyIsInBvc2l0aW9uIiwicXVvdGVzIiwicmVzaXplIiwicmlnaHQiLCJ0YWItc2l6ZSIsInRhYmxlLWxheW91dCIsInRleHQtYWxpZ24iLCJ0ZXh0LWFsaWduLWxhc3QiLCJ0ZXh0LWRlY29yYXRpb24iLCJ0ZXh0LWRlY29yYXRpb24tY29sb3IiLCJ0ZXh0LWRlY29yYXRpb24tbGluZSIsInRleHQtZGVjb3JhdGlvbi1zdHlsZSIsInRleHQtaW5kZW50IiwidGV4dC1vdmVyZmxvdyIsInRleHQtcmVuZGVyaW5nIiwidGV4dC1zaGFkb3ciLCJ0ZXh0LXRyYW5zZm9ybSIsInRleHQtdW5kZXJsaW5lLXBvc2l0aW9uIiwidG9wIiwidHJhbnNmb3JtIiwidHJhbnNmb3JtLW9yaWdpbiIsInRyYW5zZm9ybS1zdHlsZSIsInRyYW5zaXRpb24iLCJ0cmFuc2l0aW9uLWRlbGF5IiwidHJhbnNpdGlvbi1kdXJhdGlvbiIsInRyYW5zaXRpb24tcHJvcGVydHkiLCJ0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbiIsInVuaWNvZGUtYmlkaSIsInZlcnRpY2FsLWFsaWduIiwidmlzaWJpbGl0eSIsIndoaXRlLXNwYWNlIiwid2lkb3dzIiwid2lkdGgiLCJ3b3JkLWJyZWFrIiwid29yZC1zcGFjaW5nIiwid29yZC13cmFwIiwiei1pbmRleCJdLGw9WyJcXHsiLCJcXH0iLCJcXD8iLCIoXFxiUmV0dXJuXFxiKSIsIihcXGJFbmRcXGIpIiwiKFxcYmVuZFxcYikiLCI7IiwiI1xccyIsIlxcKlxccyIsIj09PVxccyIsIlxcfCJdOwogICAgcmV0dXJue2FsaWFzZXM6WyJzdHlsIl0sY0k6ITEsaToiKCIrbC5qb2luKCJ8IikrIikiLGs6ImlmIGVsc2UgZm9yIGluIixjOltlLlFTTSxlLkFTTSxlLkNMQ00sZS5DQkNNLHIse2I6IlxcLlthLXpBLVpdW2EtekEtWjAtOV8tXSoiK28sckI6ITAsYzpbe2NOOiJjbGFzcyIsYjoiXFwuW2EtekEtWl1bYS16QS1aMC05Xy1dKiJ9XX0se2I6IlxcI1thLXpBLVpdW2EtekEtWjAtOV8tXSoiK28sckI6ITAsYzpbe2NOOiJpZCIsYjoiXFwjW2EtekEtWl1bYS16QS1aMC05Xy1dKiJ9XX0se2I6IlxcYigiK24uam9pbigifCIpKyIpIitvLHJCOiEwLGM6W3tjTjoidGFnIixiOiJcXGJbYS16QS1aXVthLXpBLVowLTlfLV0qIn1dfSx7Y046InBzZXVkbyIsYjoiJj86PzpcXGIoIitpLmpvaW4oInwiKSsiKSIrb30se2NOOiJhdF9ydWxlIixiOiJAKCIrYS5qb2luKCJ8IikrIilcXGIifSx0LGUuQ1NTTk0sZS5OTSx7Y046ImZ1bmN0aW9uIixiOiJcXGJbYS16QS1aXVthLXpBLVowLTlfLV0qXFwoLipcXCkiLGk6IltcXG5dIixyQjohMCxjOlt7Y046InRpdGxlIixiOiJcXGJbYS16QS1aXVthLXpBLVowLTlfLV0qIn0se2NOOiJwYXJhbXMiLGI6L1woLyxlOi9cKS8sYzpbcix0LGUuQVNNLGUuQ1NTTk0sZS5OTSxlLlFTTV19XX0se2NOOiJhdHRyaWJ1dGUiLGI6IlxcYigiK3MucmV2ZXJzZSgpLmpvaW4oInwiKSsiKVxcYiJ9XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInN3aWZ0IixmdW5jdGlvbihlKXt2YXIgdD17a2V5d29yZDoiY2xhc3MgZGVpbml0IGVudW0gZXh0ZW5zaW9uIGZ1bmMgaW1wb3J0IGluaXQgbGV0IHByb3RvY29sIHN0YXRpYyBzdHJ1Y3Qgc3Vic2NyaXB0IHR5cGVhbGlhcyB2YXIgYnJlYWsgY2FzZSBjb250aW51ZSBkZWZhdWx0IGRvIGVsc2UgZmFsbHRocm91Z2ggaWYgaW4gZm9yIHJldHVybiBzd2l0Y2ggd2hlcmUgd2hpbGUgYXMgZHluYW1pY1R5cGUgaXMgbmV3IHN1cGVyIHNlbGYgU2VsZiBUeXBlIF9fQ09MVU1OX18gX19GSUxFX18gX19GVU5DVElPTl9fIF9fTElORV9fIGFzc29jaWF0aXZpdHkgZGlkU2V0IGdldCBpbmZpeCBpbm91dCBsZWZ0IG11dGF0aW5nIG5vbmUgbm9ubXV0YXRpbmcgb3BlcmF0b3Igb3ZlcnJpZGUgcG9zdGZpeCBwcmVjZWRlbmNlIHByZWZpeCByaWdodCBzZXQgdW5vd25lZCB1bm93bmVkIHNhZmUgdW5zYWZlIHdlYWsgd2lsbFNldCIsbGl0ZXJhbDoidHJ1ZSBmYWxzZSBuaWwiLGJ1aWx0X2luOiJhYnMgYWR2YW5jZSBhbGlnbm9mIGFsaWdub2ZWYWx1ZSBhc3NlcnQgYnJpZGdlRnJvbU9iamVjdGl2ZUMgYnJpZGdlRnJvbU9iamVjdGl2ZUNVbmNvbmRpdGlvbmFsIGJyaWRnZVRvT2JqZWN0aXZlQyBicmlkZ2VUb09iamVjdGl2ZUNVbmNvbmRpdGlvbmFsIGMgY29udGFpbnMgY291bnQgY291bnRFbGVtZW50cyBjb3VudExlYWRpbmdaZXJvcyBkZWJ1Z1ByaW50IGRlYnVnUHJpbnRsbiBkaXN0YW5jZSBkcm9wRmlyc3QgZHJvcExhc3QgZHVtcCBlbmNvZGVCaXRzQXNXb3JkcyBlbnVtZXJhdGUgZXF1YWwgZmFsc2UgZmlsdGVyIGZpbmQgZ2V0QnJpZGdlZE9iamVjdGl2ZUNUeXBlIGdldFZhTGlzdCBpbmRpY2VzIGluc2VydGlvblNvcnQgaXNCcmlkZ2VkVG9PYmplY3RpdmVDIGlzQnJpZGdlZFZlcmJhdGltVG9PYmplY3RpdmVDIGlzVW5pcXVlbHlSZWZlcmVuY2VkIGpvaW4gbGV4aWNvZ3JhcGhpY2FsQ29tcGFyZSBtYXAgbWF4IG1heEVsZW1lbnQgbWluIG1pbkVsZW1lbnQgbmlsIG51bWVyaWNDYXN0IHBhcnRpdGlvbiBwb3NpeCBwcmludCBwcmludGxuIHF1aWNrU29ydCByZWR1Y2UgcmVmbGVjdCByZWludGVycHJldENhc3QgcmV2ZXJzZSByb3VuZFVwVG9BbGlnbm1lbnQgc2l6ZW9mIHNpemVvZlZhbHVlIHNvcnQgc3BsaXQgc3RhcnRzV2l0aCBzdHJpZGVvZiBzdHJpZGVvZlZhbHVlIHN3YXAgc3dpZnQgdG9TdHJpbmcgdHJhbnNjb2RlIHRydWUgdW5kZXJlc3RpbWF0ZUNvdW50IHVuc2FmZVJlZmxlY3Qgd2l0aEV4dGVuZGVkTGlmZXRpbWUgd2l0aE9iamVjdEF0UGx1c1plcm8gd2l0aFVuc2FmZVBvaW50ZXIgd2l0aFVuc2FmZVBvaW50ZXJUb09iamVjdCB3aXRoVW5zYWZlUG9pbnRlcnMgd2l0aFZhTGlzdCJ9LHI9e2NOOiJ0eXBlIixiOiJcXGJbQS1aXVtcXHcnXSoiLHI6MH0sYT17Y046ImNvbW1lbnQiLGI6Ii9cXCoiLGU6IlxcKi8iLGM6W2UuUFdNLCJzZWxmIl19LGk9e2NOOiJzdWJzdCIsYjovXFxcKC8sZToiXFwpIixrOnQsYzpbXX0sbj17Y046Im51bWJlciIsYjoiXFxiKFtcXGRfXSsoXFwuW1xcZGVFX10rKT98MHhbYS1mQS1GMC05X10rKFxcLlthLWZBLUYwLTlwX10rKT98MGJbMDFfXSt8MG9bMC03X10rKVxcYiIscjowfSxvPWUuaW5oZXJpdChlLlFTTSx7YzpbaSxlLkJFXX0pO3JldHVybiBpLmM9W25dLHtrOnQsYzpbbyxlLkNMQ00sYSxyLG4se2NOOiJmdW5jIixiSzoiZnVuYyIsZToieyIsZUU6ITAsYzpbZS5pbmhlcml0KGUuVE0se2I6L1tBLVphLXokX11bMC05QS1aYS16JF9dKi8saTovXCgvfSkse2NOOiJnZW5lcmljcyIsYjovXDwvLGU6L1w+LyxpOi9cPi99LHtjTjoicGFyYW1zIixiOi9cKC8sZTovXCkvLGs6dCxjOlsic2VsZiIsbixvLGUuQ0JDTSx7YjoiOiJ9XSxpOi9bIiddL31dLGk6L1xbfCUvfSx7Y046ImNsYXNzIixrOiJzdHJ1Y3QgcHJvdG9jb2wgY2xhc3MgZXh0ZW5zaW9uIGVudW0iLGI6IihzdHJ1Y3R8cHJvdG9jb2x8Y2xhc3MoPyEgKGZ1bmN8dmFyKSl8ZXh0ZW5zaW9ufGVudW0pIixlOiJcXHsiLGVFOiEwLGM6W2UuaW5oZXJpdChlLlRNLHtiOi9bQS1aYS16JF9dWzAtOUEtWmEteiRfXSovfSldfSx7Y046InByZXByb2Nlc3NvciIsYjoiKEBhc3NpZ25tZW50fEBjbGFzc19wcm90b2NvbHxAZXhwb3J0ZWR8QGZpbmFsfEBsYXp5fEBub3JldHVybnxATlNDb3B5aW5nfEBOU01hbmFnZWR8QG9iamN8QG9wdGlvbmFsfEByZXF1aXJlZHxAYXV0b19jbG9zdXJlfEBub3JldHVybnxASUJBY3Rpb258QElCRGVzaWduYWJsZXxASUJJbnNwZWN0YWJsZXxASUJPdXRsZXR8QGluZml4fEBwcmVmaXh8QHBvc3RmaXgpIn1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgidGNsIixmdW5jdGlvbihlKXtyZXR1cm57YWxpYXNlczpbInRrIl0sazoiYWZ0ZXIgYXBwZW5kIGFwcGx5IGFycmF5IGF1dG9fZXhlY29rIGF1dG9faW1wb3J0IGF1dG9fbG9hZCBhdXRvX21raW5kZXggYXV0b19ta2luZGV4X29sZCBhdXRvX3F1YWxpZnkgYXV0b19yZXNldCBiZ2Vycm9yIGJpbmFyeSBicmVhayBjYXRjaCBjZCBjaGFuIGNsb2NrIGNsb3NlIGNvbmNhdCBjb250aW51ZSBkZGUgZGljdCBlbmNvZGluZyBlb2YgZXJyb3IgZXZhbCBleGVjIGV4aXQgZXhwciBmYmxvY2tlZCBmY29uZmlndXJlIGZjb3B5IGZpbGUgZmlsZWV2ZW50IGZpbGVuYW1lIGZsdXNoIGZvciBmb3JlYWNoIGZvcm1hdCBnZXRzIGdsb2IgZ2xvYmFsIGhpc3RvcnkgaHR0cCBpZiBpbmNyIGluZm8gaW50ZXJwIGpvaW4gbGFwcGVuZHwxMCBsYXNzaWdufDEwIGxpbmRleHwxMCBsaW5zZXJ0fDEwIGxpc3QgbGxlbmd0aHwxMCBsb2FkIGxyYW5nZXwxMCBscmVwZWF0fDEwIGxyZXBsYWNlfDEwIGxyZXZlcnNlfDEwIGxzZWFyY2h8MTAgbHNldHwxMCBsc29ydHwxMCBtYXRoZnVuYyBtYXRob3AgbWVtb3J5IG1zZ2NhdCBuYW1lc3BhY2Ugb3BlbiBwYWNrYWdlIHBhcnJheSBwaWQgcGtnOjpjcmVhdGUgcGtnX21rSW5kZXggcGxhdGZvcm0gcGxhdGZvcm06OnNoZWxsIHByb2MgcHV0cyBwd2QgcmVhZCByZWZjaGFuIHJlZ2V4cCByZWdpc3RyeSByZWdzdWJ8MTAgcmVuYW1lIHJldHVybiBzYWZlIHNjYW4gc2VlayBzZXQgc29ja2V0IHNvdXJjZSBzcGxpdCBzdHJpbmcgc3Vic3Qgc3dpdGNoIHRjbF9lbmRPZldvcmQgdGNsX2ZpbmRMaWJyYXJ5IHRjbF9zdGFydE9mTmV4dFdvcmQgdGNsX3N0YXJ0T2ZQcmV2aW91c1dvcmQgdGNsX3dvcmRCcmVha0FmdGVyIHRjbF93b3JkQnJlYWtCZWZvcmUgdGNsdGVzdCB0Y2x2YXJzIHRlbGwgdGltZSB0bSB0cmFjZSB1bmtub3duIHVubG9hZCB1bnNldCB1cGRhdGUgdXBsZXZlbCB1cHZhciB2YXJpYWJsZSB2d2FpdCB3aGlsZSIsYzpbe2NOOiJjb21tZW50Iix2Olt7YjoiO1sgXFx0XSojIixlOiIkIn0se2I6Il5bIFxcdF0qIyIsZToiJCJ9XX0se2JLOiJwcm9jIixlOiJbXFx7XSIsZUU6ITAsYzpbe2NOOiJzeW1ib2wiLGI6IlsgXFx0XFxuXFxyXSsoOjopP1thLXpBLVpfXSgoOjopP1thLXpBLVowLTlfXSkqIixlOiJbIFxcdFxcblxccl0iLGVXOiEwLGVFOiEwfV19LHtjTjoidmFyaWFibGUiLGVFOiEwLHY6W3tiOiJcXCQoXFx7KT8oOjopP1thLXpBLVpfXSgoOjopP1thLXpBLVowLTlfXSkqXFwoKFthLXpBLVowLTlfXSkqXFwpIixlOiJbXmEtekEtWjAtOV9cXH1cXCRdIn0se2I6IlxcJChcXHspPyg6Oik/W2EtekEtWl9dKCg6Oik/W2EtekEtWjAtOV9dKSoiLGU6IihcXCkpP1teYS16QS1aMC05X1xcfVxcJF0ifV19LHtjTjoic3RyaW5nIixjOltlLkJFXSx2OltlLmluaGVyaXQoZS5BU00se2k6bnVsbH0pLGUuaW5oZXJpdChlLlFTTSx7aTpudWxsfSldfSx7Y046Im51bWJlciIsdjpbZS5CTk0sZS5DTk1dfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJ0ZXgiLGZ1bmN0aW9uKCl7dmFyIGU9e2NOOiJjb21tYW5kIixiOiJcXFxcW2EtekEtWtCwLdGP0JAt0Y9dK1tcXCpdPyJ9LHQ9e2NOOiJjb21tYW5kIixiOiJcXFxcW15hLXpBLVrQsC3Rj9CQLdGPMC05XSJ9LHI9e2NOOiJzcGVjaWFsIixiOiJbe31cXFtcXF1cXCYjfl0iLHI6MH07cmV0dXJue2M6W3tiOiJcXFxcW2EtekEtWtCwLdGP0JAt0Y9dK1tcXCpdPyAqPSAqLT9cXGQqXFwuP1xcZCsocHR8cGN8bW18Y218aW58ZGR8Y2N8ZXh8ZW0pPyIsckI6ITAsYzpbZSx0LHtjTjoibnVtYmVyIixiOiIgKj0iLGU6Ii0/XFxkKlxcLj9cXGQrKHB0fHBjfG1tfGNtfGlufGRkfGNjfGV4fGVtKT8iLGVCOiEwfV0scjoxMH0sZSx0LHIse2NOOiJmb3JtdWxhIixiOiJcXCRcXCQiLGU6IlxcJFxcJCIsYzpbZSx0LHJdLHI6MH0se2NOOiJmb3JtdWxhIixiOiJcXCQiLGU6IlxcJCIsYzpbZSx0LHJdLHI6MH0se2NOOiJjb21tZW50IixiOiIlIixlOiIkIixyOjB9XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInRocmlmdCIsZnVuY3Rpb24oZSl7dmFyIHQ9ImJvb2wgYnl0ZSBpMTYgaTMyIGk2NCBkb3VibGUgc3RyaW5nIGJpbmFyeSI7cmV0dXJue2s6e2tleXdvcmQ6Im5hbWVzcGFjZSBjb25zdCB0eXBlZGVmIHN0cnVjdCBlbnVtIHNlcnZpY2UgZXhjZXB0aW9uIHZvaWQgb25ld2F5IHNldCBsaXN0IG1hcCByZXF1aXJlZCBvcHRpb25hbCIsYnVpbHRfaW46dCxsaXRlcmFsOiJ0cnVlIGZhbHNlIn0sYzpbZS5RU00sZS5OTSxlLkNMQ00sZS5DQkNNLHtjTjoiY2xhc3MiLGJLOiJzdHJ1Y3QgZW51bSBzZXJ2aWNlIGV4Y2VwdGlvbiIsZTovXHsvLGk6L1xuLyxjOltlLmluaGVyaXQoZS5UTSx7c3RhcnRzOntlVzohMCxlRTohMH19KV19LHtjTjoic3RsX2NvbnRhaW5lciIsYjoiXFxiKHNldHxsaXN0fG1hcClcXHMqPCIsZToiPiIsazp0LGM6WyJzZWxmIl19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInR3aWciLGZ1bmN0aW9uKCl7dmFyIGU9e2NOOiJwYXJhbXMiLGI6IlxcKCIsZToiXFwpIn0sdD0iYXR0cmlidXRlIGJsb2NrIGNvbnN0YW50IGN5Y2xlIGRhdGUgZHVtcCBpbmNsdWRlIG1heCBtaW4gcGFyZW50IHJhbmRvbSByYW5nZSBzb3VyY2UgdGVtcGxhdGVfZnJvbV9zdHJpbmciLHI9e2NOOiJmdW5jdGlvbiIsYks6dCxyOjAsYzpbZV19LGE9e2NOOiJmaWx0ZXIiLGI6L1x8W0EtWmEtel0rXDo/LyxrOiJhYnMgYmF0Y2ggY2FwaXRhbGl6ZSBjb252ZXJ0X2VuY29kaW5nIGRhdGUgZGF0ZV9tb2RpZnkgZGVmYXVsdCBlc2NhcGUgZmlyc3QgZm9ybWF0IGpvaW4ganNvbl9lbmNvZGUga2V5cyBsYXN0IGxlbmd0aCBsb3dlciBtZXJnZSBubDJiciBudW1iZXJfZm9ybWF0IHJhdyByZXBsYWNlIHJldmVyc2Ugcm91bmQgc2xpY2Ugc29ydCBzcGxpdCBzdHJpcHRhZ3MgdGl0bGUgdHJpbSB1cHBlciB1cmxfZW5jb2RlIixjOltyXX0saT0iYXV0b2VzY2FwZSBibG9jayBkbyBlbWJlZCBleHRlbmRzIGZpbHRlciBmbHVzaCBmb3IgaWYgaW1wb3J0IGluY2x1ZGUgbWFjcm8gc2FuZGJveCBzZXQgc3BhY2VsZXNzIHVzZSB2ZXJiYXRpbSI7cmV0dXJuIGk9aSsiICIraS5zcGxpdCgiICIpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4iZW5kIitlfSkuam9pbigiICIpLHthbGlhc2VzOlsiY3JhZnRjbXMiXSxjSTohMCxzTDoieG1sIixzdWJMYW5ndWFnZU1vZGU6ImNvbnRpbnVvdXMiLGM6W3tjTjoiY29tbWVudCIsYjovXHsjLyxlOi8jfS99LHtjTjoidGVtcGxhdGVfdGFnIixiOi9ceyUvLGU6LyV9LyxrOmksYzpbYSxyXX0se2NOOiJ2YXJpYWJsZSIsYjovXHtcey8sZTovfX0vLGM6W2Escl19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInR5cGVzY3JpcHQiLGZ1bmN0aW9uKGUpe3JldHVybnthbGlhc2VzOlsidHMiXSxrOntrZXl3b3JkOiJpbiBpZiBmb3Igd2hpbGUgZmluYWxseSB2YXIgbmV3IGZ1bmN0aW9ufDAgZG8gcmV0dXJuIHZvaWQgZWxzZSBicmVhayBjYXRjaCBpbnN0YW5jZW9mIHdpdGggdGhyb3cgY2FzZSBkZWZhdWx0IHRyeSB0aGlzIHN3aXRjaCBjb250aW51ZSB0eXBlb2YgZGVsZXRlIGxldCB5aWVsZCBjb25zdCBjbGFzcyBwdWJsaWMgcHJpdmF0ZSBnZXQgc2V0IHN1cGVyIGludGVyZmFjZSBleHRlbmRzc3RhdGljIGNvbnN0cnVjdG9yIGltcGxlbWVudHMgZW51bSBleHBvcnQgaW1wb3J0IGRlY2xhcmUiLGxpdGVyYWw6InRydWUgZmFsc2UgbnVsbCB1bmRlZmluZWQgTmFOIEluZmluaXR5IixidWlsdF9pbjoiZXZhbCBpc0Zpbml0ZSBpc05hTiBwYXJzZUZsb2F0IHBhcnNlSW50IGRlY29kZVVSSSBkZWNvZGVVUklDb21wb25lbnQgZW5jb2RlVVJJIGVuY29kZVVSSUNvbXBvbmVudCBlc2NhcGUgdW5lc2NhcGUgT2JqZWN0IEZ1bmN0aW9uIEJvb2xlYW4gRXJyb3IgRXZhbEVycm9yIEludGVybmFsRXJyb3IgUmFuZ2VFcnJvciBSZWZlcmVuY2VFcnJvciBTdG9wSXRlcmF0aW9uIFN5bnRheEVycm9yIFR5cGVFcnJvciBVUklFcnJvciBOdW1iZXIgTWF0aCBEYXRlIFN0cmluZyBSZWdFeHAgQXJyYXkgRmxvYXQzMkFycmF5IEZsb2F0NjRBcnJheSBJbnQxNkFycmF5IEludDMyQXJyYXkgSW50OEFycmF5IFVpbnQxNkFycmF5IFVpbnQzMkFycmF5IFVpbnQ4QXJyYXkgVWludDhDbGFtcGVkQXJyYXkgQXJyYXlCdWZmZXIgRGF0YVZpZXcgSlNPTiBJbnRsIGFyZ3VtZW50cyByZXF1aXJlIG1vZHVsZSBjb25zb2xlIHdpbmRvdyBkb2N1bWVudCBhbnkgbnVtYmVyIGJvb2xlYW4gc3RyaW5nIHZvaWQifSxjOlt7Y046InBpIixiOi9eXHMqKCd8Iil1c2Ugc3RyaWN0KCd8IikvLHI6MH0sZS5BU00sZS5RU00sZS5DTENNLGUuQ0JDTSxlLkNOTSx7YjoiKCIrZS5SU1IrInxcXGIoY2FzZXxyZXR1cm58dGhyb3cpXFxiKVxccyoiLGs6InJldHVybiB0aHJvdyBjYXNlIixjOltlLkNMQ00sZS5DQkNNLGUuUk0se2I6LzwvLGU6Lz47LyxyOjAsc0w6InhtbCJ9XSxyOjB9LHtjTjoiZnVuY3Rpb24iLGJLOiJmdW5jdGlvbiIsZTovXHsvLGVFOiEwLGM6W2UuaW5oZXJpdChlLlRNLHtiOi9bQS1aYS16JF9dWzAtOUEtWmEteiRfXSovfSkse2NOOiJwYXJhbXMiLGI6L1woLyxlOi9cKS8sYzpbZS5DTENNLGUuQ0JDTV0saTovWyInXChdL31dLGk6L1xbfCUvLHI6MH0se2NOOiJjb25zdHJ1Y3RvciIsYks6ImNvbnN0cnVjdG9yIixlOi9cey8sZUU6ITAscjoxMH0se2NOOiJtb2R1bGUiLGJLOiJtb2R1bGUiLGU6L1x7LyxlRTohMH0se2NOOiJpbnRlcmZhY2UiLGJLOiJpbnRlcmZhY2UiLGU6L1x7LyxlRTohMH0se2I6L1wkWyguXS99LHtiOiJcXC4iK2UuSVIscjowfV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJ2YWxhIixmdW5jdGlvbihlKXtyZXR1cm57azp7a2V5d29yZDoiY2hhciB1Y2hhciB1bmljaGFyIGludCB1aW50IGxvbmcgdWxvbmcgc2hvcnQgdXNob3J0IGludDggaW50MTYgaW50MzIgaW50NjQgdWludDggdWludDE2IHVpbnQzMiB1aW50NjQgZmxvYXQgZG91YmxlIGJvb2wgc3RydWN0IGVudW0gc3RyaW5nIHZvaWQgd2VhayB1bm93bmVkIG93bmVkIGFzeW5jIHNpZ25hbCBzdGF0aWMgYWJzdHJhY3QgaW50ZXJmYWNlIG92ZXJyaWRlIHdoaWxlIGRvIGZvciBmb3JlYWNoIGVsc2Ugc3dpdGNoIGNhc2UgYnJlYWsgZGVmYXVsdCByZXR1cm4gdHJ5IGNhdGNoIHB1YmxpYyBwcml2YXRlIHByb3RlY3RlZCBpbnRlcm5hbCB1c2luZyBuZXcgdGhpcyBnZXQgc2V0IGNvbnN0IHN0ZG91dCBzdGRpbiBzdGRlcnIgdmFyIixidWlsdF9pbjoiREJ1cyBHTGliIENDb2RlIEdlZSBPYmplY3QiLGxpdGVyYWw6ImZhbHNlIHRydWUgbnVsbCJ9LGM6W3tjTjoiY2xhc3MiLGJLOiJjbGFzcyBpbnRlcmZhY2UgZGVsZWdhdGUgbmFtZXNwYWNlIixlOiJ7IixlRTohMCxpOiJbXiw6XFxuXFxzXFwuXSIsYzpbZS5VVE1dfSxlLkNMQ00sZS5DQkNNLHtjTjoic3RyaW5nIixiOiciIiInLGU6JyIiIicscjo1fSxlLkFTTSxlLlFTTSxlLkNOTSx7Y046InByZXByb2Nlc3NvciIsYjoiXiMiLGU6IiQiLHI6Mn0se2NOOiJjb25zdGFudCIsYjoiIFtBLVpfXSsgIixyOjB9XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInZibmV0IixmdW5jdGlvbihlKXtyZXR1cm57YWxpYXNlczpbInZiIl0sY0k6ITAsazp7a2V5d29yZDoiYWRkaGFuZGxlciBhZGRyZXNzb2YgYWxpYXMgYW5kIGFuZGFsc28gYWdncmVnYXRlIGFuc2kgYXMgYXNzZW1ibHkgYXV0byBiaW5hcnkgYnkgYnlyZWYgYnl2YWwgY2FsbCBjYXNlIGNhdGNoIGNsYXNzIGNvbXBhcmUgY29uc3QgY29udGludWUgY3VzdG9tIGRlY2xhcmUgZGVmYXVsdCBkZWxlZ2F0ZSBkaW0gZGlzdGluY3QgZG8gZWFjaCBlcXVhbHMgZWxzZSBlbHNlaWYgZW5kIGVudW0gZXJhc2UgZXJyb3IgZXZlbnQgZXhpdCBleHBsaWNpdCBmaW5hbGx5IGZvciBmcmllbmQgZnJvbSBmdW5jdGlvbiBnZXQgZ2xvYmFsIGdvdG8gZ3JvdXAgaGFuZGxlcyBpZiBpbXBsZW1lbnRzIGltcG9ydHMgaW4gaW5oZXJpdHMgaW50ZXJmYWNlIGludG8gaXMgaXNmYWxzZSBpc25vdCBpc3RydWUgam9pbiBrZXkgbGV0IGxpYiBsaWtlIGxvb3AgbWUgbWlkIG1vZCBtb2R1bGUgbXVzdGluaGVyaXQgbXVzdG92ZXJyaWRlIG15YmFzZSBteWNsYXNzIG5hbWVzcGFjZSBuYXJyb3dpbmcgbmV3IG5leHQgbm90IG5vdGluaGVyaXRhYmxlIG5vdG92ZXJyaWRhYmxlIG9mIG9mZiBvbiBvcGVyYXRvciBvcHRpb24gb3B0aW9uYWwgb3Igb3JkZXIgb3JlbHNlIG92ZXJsb2FkcyBvdmVycmlkYWJsZSBvdmVycmlkZXMgcGFyYW1hcnJheSBwYXJ0aWFsIHByZXNlcnZlIHByaXZhdGUgcHJvcGVydHkgcHJvdGVjdGVkIHB1YmxpYyByYWlzZWV2ZW50IHJlYWRvbmx5IHJlZGltIHJlbSByZW1vdmVoYW5kbGVyIHJlc3VtZSByZXR1cm4gc2VsZWN0IHNldCBzaGFkb3dzIHNoYXJlZCBza2lwIHN0YXRpYyBzdGVwIHN0b3Agc3RydWN0dXJlIHN0cmljdCBzdWIgc3luY2xvY2sgdGFrZSB0ZXh0IHRoZW4gdGhyb3cgdG8gdHJ5IHVuaWNvZGUgdW50aWwgdXNpbmcgd2hlbiB3aGVyZSB3aGlsZSB3aWRlbmluZyB3aXRoIHdpdGhldmVudHMgd3JpdGVvbmx5IHhvciIsYnVpbHRfaW46ImJvb2xlYW4gYnl0ZSBjYm9vbCBjYnl0ZSBjY2hhciBjZGF0ZSBjZGVjIGNkYmwgY2hhciBjaW50IGNsbmcgY29iaiBjc2J5dGUgY3Nob3J0IGNzbmcgY3N0ciBjdHlwZSBkYXRlIGRlY2ltYWwgZGlyZWN0Y2FzdCBkb3VibGUgZ2V0dHlwZSBnZXR4bWxuYW1lc3BhY2UgaWlmIGludGVnZXIgbG9uZyBvYmplY3Qgc2J5dGUgc2hvcnQgc2luZ2xlIHN0cmluZyB0cnljYXN0IHR5cGVvZiB1aW50ZWdlciB1bG9uZyB1c2hvcnQiLGxpdGVyYWw6InRydWUgZmFsc2Ugbm90aGluZyJ9LGk6Ii8vfHt8fXxlbmRpZnxnb3N1Ynx2YXJpYW50fHdlbmQiLGM6W2UuaW5oZXJpdChlLlFTTSx7Yzpbe2I6JyIiJ31dfSkse2NOOiJjb21tZW50IixiOiInIixlOiIkIixyQjohMCxjOlt7Y046InhtbERvY1RhZyIsYjoiJycnfDwhLS18LS0+In0se2NOOiJ4bWxEb2NUYWciLGI6IjwvPyIsZToiPiJ9XX0sZS5DTk0se2NOOiJwcmVwcm9jZXNzb3IiLGI6IiMiLGU6IiQiLGs6ImlmIGVsc2UgZWxzZWlmIGVuZCByZWdpb24gZXh0ZXJuYWxzb3VyY2UifV19fSksaGxqcy5yZWdpc3Rlckxhbmd1YWdlKCJ2YnNjcmlwdCIsZnVuY3Rpb24oZSl7cmV0dXJue2FsaWFzZXM6WyJ2YnMiXSxjSTohMCxrOntrZXl3b3JkOiJjYWxsIGNsYXNzIGNvbnN0IGRpbSBkbyBsb29wIGVyYXNlIGV4ZWN1dGUgZXhlY3V0ZWdsb2JhbCBleGl0IGZvciBlYWNoIG5leHQgZnVuY3Rpb24gaWYgdGhlbiBlbHNlIG9uIGVycm9yIG9wdGlvbiBleHBsaWNpdCBuZXcgcHJpdmF0ZSBwcm9wZXJ0eSBsZXQgZ2V0IHB1YmxpYyByYW5kb21pemUgcmVkaW0gcmVtIHNlbGVjdCBjYXNlIHNldCBzdG9wIHN1YiB3aGlsZSB3ZW5kIHdpdGggZW5kIHRvIGVsc2VpZiBpcyBvciB4b3IgYW5kIG5vdCBjbGFzc19pbml0aWFsaXplIGNsYXNzX3Rlcm1pbmF0ZSBkZWZhdWx0IHByZXNlcnZlIGluIG1lIGJ5dmFsIGJ5cmVmIHN0ZXAgcmVzdW1lIGdvdG8iLGJ1aWx0X2luOiJsY2FzZSBtb250aCB2YXJ0eXBlIGluc3RycmV2IHVib3VuZCBzZXRsb2NhbGUgZ2V0b2JqZWN0IHJnYiBnZXRyZWYgc3RyaW5nIHdlZWtkYXluYW1lIHJuZCBkYXRlYWRkIG1vbnRobmFtZSBub3cgZGF5IG1pbnV0ZSBpc2FycmF5IGNib29sIHJvdW5kIGZvcm1hdGN1cnJlbmN5IGNvbnZlcnNpb25zIGNzbmcgdGltZXZhbHVlIHNlY29uZCB5ZWFyIHNwYWNlIGFicyBjbG5nIHRpbWVzZXJpYWwgZml4cyBsZW4gYXNjIGlzZW1wdHkgbWF0aHMgZGF0ZXNlcmlhbCBhdG4gdGltZXIgaXNvYmplY3QgZmlsdGVyIHdlZWtkYXkgZGF0ZXZhbHVlIGNjdXIgaXNkYXRlIGluc3RyIGRhdGVkaWZmIGZvcm1hdGRhdGV0aW1lIHJlcGxhY2UgaXNudWxsIHJpZ2h0IHNnbiBhcnJheSBzbnVtZXJpYyBsb2cgY2RibCBoZXggY2hyIGxib3VuZCBtc2dib3ggdWNhc2UgZ2V0bG9jYWxlIGNvcyBjZGF0ZSBjYnl0ZSBydHJpbSBqb2luIGhvdXIgb2N0IHR5cGVuYW1lIHRyaW0gc3RyY29tcCBpbnQgY3JlYXRlb2JqZWN0IGxvYWRwaWN0dXJlIHRhbiBmb3JtYXRudW1iZXIgbWlkIHNjcmlwdGVuZ2luZWJ1aWxkdmVyc2lvbiBzY3JpcHRlbmdpbmUgc3BsaXQgc2NyaXB0ZW5naW5lbWlub3J2ZXJzaW9uIGNpbnQgc2luIGRhdGVwYXJ0IGx0cmltIHNxciBzY3JpcHRlbmdpbmVtYWpvcnZlcnNpb24gdGltZSBkZXJpdmVkIGV2YWwgZGF0ZSBmb3JtYXRwZXJjZW50IGV4cCBpbnB1dGJveCBsZWZ0IGFzY3cgY2hydyByZWdleHAgc2VydmVyIHJlc3BvbnNlIHJlcXVlc3QgY3N0ciBlcnIiLGxpdGVyYWw6InRydWUgZmFsc2UgbnVsbCBub3RoaW5nIGVtcHR5In0saToiLy8iLGM6W2UuaW5oZXJpdChlLlFTTSx7Yzpbe2I6JyIiJ31dfSkse2NOOiJjb21tZW50IixiOi8nLyxlOi8kLyxyOjB9LGUuQ05NXX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInZic2NyaXB0LWh0bWwiLGZ1bmN0aW9uKCl7cmV0dXJue3NMOiJ4bWwiLHN1Ykxhbmd1YWdlTW9kZToiY29udGludW91cyIsYzpbe2I6IjwlIixlOiIlPiIsc0w6InZic2NyaXB0In1dfX0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgidmVyaWxvZyIsZnVuY3Rpb24oZSl7cmV0dXJue2FsaWFzZXM6WyJ2Il0sY0k6ITAsazp7a2V5d29yZDoiYWx3YXlzIGFuZCBhc3NpZ24gYmVnaW4gYnVmIGJ1ZmlmMCBidWZpZjEgY2FzZSBjYXNleCBjYXNleiBjbW9zIGRlYXNzaWduIGRlZmF1bHQgZGVmcGFyYW0gZGlzYWJsZSBlZGdlIGVsc2UgZW5kIGVuZGNhc2UgZW5kZnVuY3Rpb24gZW5kbW9kdWxlIGVuZHByaW1pdGl2ZSBlbmRzcGVjaWZ5IGVuZHRhYmxlIGVuZHRhc2sgZXZlbnQgZm9yIGZvcmNlIGZvcmV2ZXIgZm9yayBmdW5jdGlvbiBpZiBpZm5vbmUgaW5pdGlhbCBpbm91dCBpbnB1dCBqb2luIG1hY3JvbW9kdWxlIG1vZHVsZSBuYW5kIG5lZ2VkZ2Ugbm1vcyBub3Igbm90IG5vdGlmMCBub3RpZjEgb3Igb3V0cHV0IHBhcmFtZXRlciBwbW9zIHBvc2VkZ2UgcHJpbWl0aXZlIHB1bGxkb3duIHB1bGx1cCByY21vcyByZWxlYXNlIHJlcGVhdCBybm1vcyBycG1vcyBydHJhbiBydHJhbmlmMCBydHJhbmlmMSBzcGVjaWZ5IHNwZWNwYXJhbSB0YWJsZSB0YXNrIHRpbWVzY2FsZSB0cmFuIHRyYW5pZjAgdHJhbmlmMSB3YWl0IHdoaWxlIHhub3IgeG9yIix0eXBlbmFtZToiaGlnaHowIGhpZ2h6MSBpbnRlZ2VyIGxhcmdlIG1lZGl1bSBwdWxsMCBwdWxsMSByZWFsIHJlYWx0aW1lIHJlZyBzY2FsYXJlZCBzaWduZWQgc21hbGwgc3Ryb25nMCBzdHJvbmcxIHN1cHBseTAgc3VwcGx5MCBzdXBwbHkxIHN1cHBseTEgdGltZSB0cmkgdHJpMCB0cmkxIHRyaWFuZCB0cmlvciB0cmlyZWcgdmVjdG9yZWQgd2FuZCB3ZWFrMCB3ZWFrMSB3aXJlIHdvciJ9LGM6W2UuQ0JDTSxlLkNMQ00sZS5RU00se2NOOiJudW1iZXIiLGI6IlxcYihcXGQrJyhifGh8b3xkfEJ8SHxPfEQpKT9bMC05eHpYWl0rIixjOltlLkJFXSxyOjB9LHtjTjoidHlwZW5hbWUiLGI6IlxcLlxcdysiLHI6MH0se2NOOiJ2YWx1ZSIsYjoiI1xcKCg/IXBhcmFtZXRlcikuK1xcKSJ9LHtjTjoia2V5d29yZCIsYjoiXFwrfC18XFwqfC98JXw8fD58PXwjfGB8XFwhfCZ8XFx8fEB8OnxcXF58fnxcXHt8XFx9IixyOjB9XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInZoZGwiLGZ1bmN0aW9uKGUpe3JldHVybntjSTohMCxrOntrZXl3b3JkOiJhYnMgYWNjZXNzIGFmdGVyIGFsaWFzIGFsbCBhbmQgYXJjaGl0ZWN0dXJlIGFycmF5IGFzc2VydCBhdHRyaWJ1dGUgYmVnaW4gYmxvY2sgYm9keSBidWZmZXIgYnVzIGNhc2UgY29tcG9uZW50IGNvbmZpZ3VyYXRpb24gY29uc3RhbnQgY29udGV4dCBjb3ZlciBkaXNjb25uZWN0IGRvd250byBkZWZhdWx0IGVsc2UgZWxzaWYgZW5kIGVudGl0eSBleGl0IGZhaXJuZXNzIGZpbGUgZm9yIGZvcmNlIGZ1bmN0aW9uIGdlbmVyYXRlIGdlbmVyaWMgZ3JvdXAgZ3VhcmRlZCBpZiBpbXB1cmUgaW4gaW5lcnRpYWwgaW5vdXQgaXMgbGFiZWwgbGlicmFyeSBsaW5rYWdlIGxpdGVyYWwgbG9vcCBtYXAgbW9kIG5hbmQgbmV3IG5leHQgbm9yIG5vdCBudWxsIG9mIG9uIG9wZW4gb3Igb3RoZXJzIG91dCBwYWNrYWdlIHBvcnQgcG9zdHBvbmVkIHByb2NlZHVyZSBwcm9jZXNzIHByb3BlcnR5IHByb3RlY3RlZCBwdXJlIHJhbmdlIHJlY29yZCByZWdpc3RlciByZWplY3QgcmVsZWFzZSByZW0gcmVwb3J0IHJlc3RyaWN0IHJlc3RyaWN0X2d1YXJhbnRlZSByZXR1cm4gcm9sIHJvciBzZWxlY3Qgc2VxdWVuY2Ugc2V2ZXJpdHkgc2hhcmVkIHNpZ25hbCBzbGEgc2xsIHNyYSBzcmwgc3Ryb25nIHN1YnR5cGUgdGhlbiB0byB0cmFuc3BvcnQgdHlwZSB1bmFmZmVjdGVkIHVuaXRzIHVudGlsIHVzZSB2YXJpYWJsZSB2bW9kZSB2cHJvcCB2dW5pdCB3YWl0IHdoZW4gd2hpbGUgd2l0aCB4bm9yIHhvciIsdHlwZW5hbWU6ImJvb2xlYW4gYml0IGNoYXJhY3RlciBzZXZlcml0eV9sZXZlbCBpbnRlZ2VyIHRpbWUgZGVsYXlfbGVuZ3RoIG5hdHVyYWwgcG9zaXRpdmUgc3RyaW5nIGJpdF92ZWN0b3IgZmlsZV9vcGVuX2tpbmQgZmlsZV9vcGVuX3N0YXR1cyBzdGRfdWxvZ2ljIHN0ZF91bG9naWNfdmVjdG9yIHN0ZF9sb2dpYyBzdGRfbG9naWNfdmVjdG9yIHVuc2lnbmVkIHNpZ25lZCBib29sZWFuX3ZlY3RvciBpbnRlZ2VyX3ZlY3RvciByZWFsX3ZlY3RvciB0aW1lX3ZlY3RvciJ9LGk6InsiLGM6W2UuQ0JDTSx7Y046ImNvbW1lbnQiLGI6Ii0tIixlOiIkIn0sZS5RU00sZS5DTk0se2NOOiJsaXRlcmFsIixiOiInKFV8WHwwfDF8WnxXfEx8SHwtKSciLGM6W2UuQkVdfSx7Y046ImF0dHJpYnV0ZSIsYjoiJ1tBLVphLXpdKF8/W0EtWmEtejAtOV0pKiIsYzpbZS5CRV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoInZpbSIsZnVuY3Rpb24oZSl7cmV0dXJue2w6L1shI0Bcd10rLyxrOntrZXl3b3JkOiJOfDAgUHwwIFh8MCBhfDAgYWIgYWJjIGFibyBhbCBhbSBhbnwwIGFyIGFyZ2EgYXJnZCBhcmdlIGFyZ2RvIGFyZ2cgYXJnbCBhcmd1IGFzIGF1IGF1ZyBhdW4gYnwwIGJOIGJhIGJhZCBiZCBiZSBiZWwgYmYgYmwgYm0gYm4gYm8gYnAgYnIgYnJlYSBicmVha2EgYnJlYWtkIGJyZWFrbCBicm8gYnVmZG8gYnVmZmVycyBidW4gYncgY3wwIGNOIGNOZiBjYSBjYWJjIGNhZGRiIGNhZCBjYWRkZiBjYWwgY2F0IGNiIGNjIGNjbCBjZCBjZSBjZXggY2YgY2ZpciBjZ2V0YiBjZ2V0ZSBjZyBjaGFuZ2VzIGNoZCBjaGUgY2hlY2t0IGNsIGNsYSBjbG8gY20gY21hcGMgY21lIGNuIGNuZXcgY25mIGNubyBjbm9yZWEgY25vcmVtZSBjbyBjb2wgY29sbyBjb20gY29tYyBjb21wIGNvbiBjb25mIGNvcGUgY3AgY3BmIGNxIGNyIGNzIGNzdCBjdSBjdW5hIGN1bm1lIGN3IGR8MCBkZWxtIGRlYiBkZWJ1Z2cgZGVsYyBkZWxmIGRpZiBkaWZmZyBkaWZmbyBkaWZmcCBkaWZmcHUgZGlmZnMgZGlmZnRoaXMgZGlnIGRpIGRsIGRlbGwgZGogZGxpIGRvIGRvYXV0b2EgZHAgZHIgZHMgZHNwIGV8MCBlYSBlYyBlY2hvZSBlY2hvaCBlY2hvbSBlY2hvbiBlbCBlbHNlaSBlbSBlbiBlbmRmbyBlbmRmIGVuZHQgZW5kdyBlbmUgZXggZXhlIGV4aSBleHUgZnwwIGZpbGVzIGZpbGV0IGZpbiBmaW5hIGZpbmkgZmlyIGZpeCBmbyBmb2xkYyBmb2xkZCBmb2xkZG9jIGZvbGRvIGZvciBmdSBnfDAgZ28gZ3IgZ3JlcGEgZ3UgZ3YgaGEgaHwwIGhlbHBmIGhlbHBnIGhlbHB0IGhpIGhpZCBoaXMgaXwwIGlhIGlhYmMgaWYgaWogaWwgaW0gaW1hcGMgaW1lIGlubyBpbm9yZWEgaW5vcmVtZSBpbnQgaXMgaXNwIGl1IGl1bmEgaXVubWUganwwIGp1IGt8MCBrZWVwYSBrZWUga2VlcGogbE4gbE5mIGx8MCBsYWQgbGFkZGIgbGFkZGYgbGEgbGFuIGxhdCBsYiBsYyBsY2ggbGNsIGxjcyBsZSBsZWZ0YSBsZXQgbGV4IGxmIGxmaXIgbGdldGIgbGdldGUgbGcgbGdyIGxncmVwYSBsaCBsbCBsbGEgbGxpIGxtYWsgbG0gbG1hcGMgbG5lIGxuZXcgbG5mIGxuIGxvYWRrIGxvIGxvYyBsb2NrdiBsb2wgbG9wZSBscCBscGYgbHIgbHMgbHQgbHUgbHVhIGx1YWQgbHVhZiBsdiBsdmltZ3JlcGEgbHcgbXwwIG1hIG1hayBtYXAgbWFwYyBtYXJrcyBtYXQgbWUgbWVudXQgbWVzIG1rIG1rcyBta3NwIG1rdiBta3ZpZSBtb2QgbXogbXpmIG5iYyBuYiBuYnMgbnwwIG5ldyBubSBubWFwYyBubWUgbm4gbm5vcmVtZSBub2Egbm8gbm9oIG5vcmVhIG5vcmVtZSBub3JtIG51IG51biBudW5tZSBvbCBvfDAgb20gb21hcGMgb21lIG9uIG9ubyBvbm9yZW1lIG9wdCBvdSBvdW5tZSBvdyBwfDAgcHJvZmQgcHJvZiBwcm8gcHJvbXB0ciBwYyBwZWQgcGUgcGVybGQgcG8gcG9wdSBwcCBwcmUgcHJldiBwcyBwdCBwdE4gcHRmIHB0aiBwdGwgcHRuIHB0cCBwdHIgcHRzIHB1IHB3IHB5MyBweXRob24zIHB5M2QgcHkzZiBweSBweWQgcHlmIHF8MCBxdWl0YSBxYSByfDAgcmVjIHJlZCByZWRpIHJlZHIgcmVkcmF3cyByZWcgcmVzIHJldCByZXR1IHJldyByaSByaWdodGIgcnViIHJ1YnlkIHJ1YnlmIHJ1bmQgcnUgcnYgc3wwIHNOIHNhbiBzYSBzYWwgc2F2IHNiIHNiTiBzYmEgc2JmIHNibCBzYm0gc2JuIHNicCBzYnIgc2NyaXAgc2NyaXB0ZSBzY3Mgc2Ugc2V0ZiBzZXRnIHNldGwgc2Ygc2ZpciBzaCBzaW0gc2lnIHNpbCBzbCBzbGEgc20gc21hcCBzbWFwYyBzbWUgc24gc25pIHNubyBzbm9yIHNub3JlbWUgc29yIHNvIHNwZWxsZCBzcGUgc3BlbGxpIHNwZWxsciBzcGVsbHUgc3BlbGx3IHNwIHNwciBzcmUgc3Qgc3RhIHN0YXJ0ZyBzdGFydHIgc3RhciBzdG9waSBzdGogc3RzIHN1biBzdW5tIHN1bm1lIHN1cyBzdiBzdyBzeSBzeW50aSBzeW5jIHR8MCB0TiB0YWJOIHRhYmMgdGFiZG8gdGFiZSB0YWJmIHRhYmZpciB0YWJsIHRhYm0gdGFibmV3IHRhYm4gdGFibyB0YWJwIHRhYnIgdGFicyB0YWIgdGEgdGFncyB0YyB0Y2xkIHRjbGYgdGUgdGYgdGggdGogdGwgdG0gdG4gdG8gdHAgdHIgdHJ5IHRzIHR1IHV8MCB1bmRvaiB1bmRvbCB1bmEgdW5oIHVubCB1bmxvIHVubSB1bm1lIHVucyB1cCB2fDAgdmUgdmVyYiB2ZXJ0IHZpbSB2aW1ncmVwYSB2aSB2aXUgdmllIHZtIHZtYXBjIHZtZSB2bmUgdm4gdm5vcmVtZSB2cyB2dSB2dW5tZSB3aW5kbyB3fDAgd04gd2Egd2ggd2kgd2luYyB3aW5wIHduIHdwIHdxIHdxYSB3cyB3dSB3diB4fDAgeGEgeG1hcGMgeG0geG1lIHhuIHhub3JlbWUgeHUgeHVubWUgeXwwIHp8MCB+IE5leHQgUHJpbnQgYXBwZW5kIGFiYnJldmlhdGUgYWJjbGVhciBhYm92ZWxlZnQgYWxsIGFtZW51IGFub3JlbWVudSBhcmdzIGFyZ2FkZCBhcmdkZWxldGUgYXJnZWRpdCBhcmdnbG9iYWwgYXJnbG9jYWwgYXJndW1lbnQgYXNjaWkgYXV0b2NtZCBhdWdyb3VwIGF1bm1lbnUgYnVmZmVyIGJOZXh0IGJhbGwgYmFkZCBiZGVsZXRlIGJlaGF2ZSBiZWxvd3JpZ2h0IGJmaXJzdCBibGFzdCBibW9kaWZpZWQgYm5leHQgYm90cmlnaHQgYnByZXZpb3VzIGJyZXdpbmQgYnJlYWsgYnJlYWthZGQgYnJlYWtkZWwgYnJlYWtsaXN0IGJyb3dzZSBidW5sb2FkIGJ3aXBlb3V0IGNoYW5nZSBjTmV4dCBjTmZpbGUgY2FiYnJldiBjYWJjbGVhciBjYWRkYnVmZmVyIGNhZGRleHByIGNhZGRmaWxlIGNhbGwgY2F0Y2ggY2J1ZmZlciBjY2xvc2UgY2VudGVyIGNleHByIGNmaWxlIGNmaXJzdCBjZ2V0YnVmZmVyIGNnZXRleHByIGNnZXRmaWxlIGNoZGlyIGNoZWNrcGF0aCBjaGVja3RpbWUgY2xpc3QgY2xhc3QgY2xvc2UgY21hcCBjbWFwY2xlYXIgY21lbnUgY25leHQgY25ld2VyIGNuZmlsZSBjbm9yZW1hcCBjbm9yZWFiYnJldiBjbm9yZW1lbnUgY29weSBjb2xkZXIgY29sb3JzY2hlbWUgY29tbWFuZCBjb21jbGVhciBjb21waWxlciBjb250aW51ZSBjb25maXJtIGNvcGVuIGNwcmV2aW91cyBjcGZpbGUgY3F1aXQgY3Jld2luZCBjc2NvcGUgY3N0YWcgY3VubWFwIGN1bmFiYnJldiBjdW5tZW51IGN3aW5kb3cgZGVsZXRlIGRlbG1hcmtzIGRlYnVnIGRlYnVnZ3JlZWR5IGRlbGNvbW1hbmQgZGVsZnVuY3Rpb24gZGlmZnVwZGF0ZSBkaWZmZ2V0IGRpZmZvZmYgZGlmZnBhdGNoIGRpZmZwdXQgZGlmZnNwbGl0IGRpZ3JhcGhzIGRpc3BsYXkgZGVsZXRlbCBkanVtcCBkbGlzdCBkb2F1dG9jbWQgZG9hdXRvYWxsIGRlbGV0ZXAgZHJvcCBkc2VhcmNoIGRzcGxpdCBlZGl0IGVhcmxpZXIgZWNobyBlY2hvZXJyIGVjaG9obCBlY2hvbXNnIGVsc2UgZWxzZWlmIGVtZW51IGVuZGlmIGVuZGZvciBlbmRmdW5jdGlvbiBlbmR0cnkgZW5kd2hpbGUgZW5ldyBleGVjdXRlIGV4aXQgZXh1c2FnZSBmaWxlIGZpbGV0eXBlIGZpbmQgZmluYWxseSBmaW5pc2ggZmlyc3QgZml4ZGVsIGZvbGQgZm9sZGNsb3NlIGZvbGRkb29wZW4gZm9sZGRvY2xvc2VkIGZvbGRvcGVuIGZ1bmN0aW9uIGdsb2JhbCBnb3RvIGdyZXAgZ3JlcGFkZCBndWkgZ3ZpbSBoYXJkY29weSBoZWxwIGhlbHBmaW5kIGhlbHBncmVwIGhlbHB0YWdzIGhpZ2hsaWdodCBoaWRlIGhpc3RvcnkgaW5zZXJ0IGlhYmJyZXYgaWFiY2xlYXIgaWp1bXAgaWxpc3QgaW1hcCBpbWFwY2xlYXIgaW1lbnUgaW5vcmVtYXAgaW5vcmVhYmJyZXYgaW5vcmVtZW51IGludHJvIGlzZWFyY2ggaXNwbGl0IGl1bm1hcCBpdW5hYmJyZXYgaXVubWVudSBqb2luIGp1bXBzIGtlZXBhbHQga2VlcG1hcmtzIGtlZXBqdW1wcyBsTmV4dCBsTmZpbGUgbGlzdCBsYWRkZXhwciBsYWRkYnVmZmVyIGxhZGRmaWxlIGxhc3QgbGFuZ3VhZ2UgbGF0ZXIgbGJ1ZmZlciBsY2QgbGNoZGlyIGxjbG9zZSBsY3Njb3BlIGxlZnQgbGVmdGFib3ZlIGxleHByIGxmaWxlIGxmaXJzdCBsZ2V0YnVmZmVyIGxnZXRleHByIGxnZXRmaWxlIGxncmVwIGxncmVwYWRkIGxoZWxwZ3JlcCBsbGFzdCBsbGlzdCBsbWFrZSBsbWFwIGxtYXBjbGVhciBsbmV4dCBsbmV3ZXIgbG5maWxlIGxub3JlbWFwIGxvYWRrZXltYXAgbG9hZHZpZXcgbG9ja21hcmtzIGxvY2t2YXIgbG9sZGVyIGxvcGVuIGxwcmV2aW91cyBscGZpbGUgbHJld2luZCBsdGFnIGx1bm1hcCBsdWFkbyBsdWFmaWxlIGx2aW1ncmVwIGx2aW1ncmVwYWRkIGx3aW5kb3cgbW92ZSBtYXJrIG1ha2UgbWFwY2xlYXIgbWF0Y2ggbWVudSBtZW51dHJhbnNsYXRlIG1lc3NhZ2VzIG1rZXhyYyBta3Nlc3Npb24gbWtzcGVsbCBta3ZpbXJjIG1rdmlldyBtb2RlIG16c2NoZW1lIG16ZmlsZSBuYmNsb3NlIG5ia2V5IG5ic2FydCBuZXh0IG5tYXAgbm1hcGNsZWFyIG5tZW51IG5ub3JlbWFwIG5ub3JlbWVudSBub2F1dG9jbWQgbm9yZW1hcCBub2hsc2VhcmNoIG5vcmVhYmJyZXYgbm9yZW1lbnUgbm9ybWFsIG51bWJlciBudW5tYXAgbnVubWVudSBvbGRmaWxlcyBvcGVuIG9tYXAgb21hcGNsZWFyIG9tZW51IG9ubHkgb25vcmVtYXAgb25vcmVtZW51IG9wdGlvbnMgb3VubWFwIG91bm1lbnUgb3duc3ludGF4IHByaW50IHByb2ZkZWwgcHJvZmlsZSBwcm9tcHRmaW5kIHByb21wdHJlcGwgcGNsb3NlIHBlZGl0IHBlcmwgcGVybGRvIHBvcCBwb3B1cCBwcG9wIHByZXNlcnZlIHByZXZpb3VzIHBzZWFyY2ggcHRhZyBwdE5leHQgcHRmaXJzdCBwdGp1bXAgcHRsYXN0IHB0bmV4dCBwdHByZXZpb3VzIHB0cmV3aW5kIHB0c2VsZWN0IHB1dCBwd2QgcHkzZG8gcHkzZmlsZSBweXRob24gcHlkbyBweWZpbGUgcXVpdCBxdWl0YWxsIHFhbGwgcmVhZCByZWNvdmVyIHJlZG8gcmVkaXIgcmVkcmF3IHJlZHJhd3N0YXR1cyByZWdpc3RlcnMgcmVzaXplIHJldGFiIHJldHVybiByZXdpbmQgcmlnaHQgcmlnaHRiZWxvdyBydWJ5IHJ1YnlkbyBydWJ5ZmlsZSBydW5kbyBydW50aW1lIHJ2aW1pbmZvIHN1YnN0aXR1dGUgc05leHQgc2FuZGJveCBzYXJndW1lbnQgc2FsbCBzYXZlYXMgc2J1ZmZlciBzYk5leHQgc2JhbGwgc2JmaXJzdCBzYmxhc3Qgc2Jtb2RpZmllZCBzYm5leHQgc2JwcmV2aW91cyBzYnJld2luZCBzY3JpcHRuYW1lcyBzY3JpcHRlbmNvZGluZyBzY3Njb3BlIHNldCBzZXRmaWxldHlwZSBzZXRnbG9iYWwgc2V0bG9jYWwgc2ZpbmQgc2ZpcnN0IHNoZWxsIHNpbWFsdCBzaWduIHNpbGVudCBzbGVlcCBzbGFzdCBzbWFnaWMgc21hcGNsZWFyIHNtZW51IHNuZXh0IHNuaWZmIHNub21hZ2ljIHNub3JlbWFwIHNub3JlbWVudSBzb3J0IHNvdXJjZSBzcGVsbGR1bXAgc3BlbGxnb29kIHNwZWxsaW5mbyBzcGVsbHJlcGFsbCBzcGVsbHVuZG8gc3BlbGx3cm9uZyBzcGxpdCBzcHJldmlvdXMgc3Jld2luZCBzdG9wIHN0YWcgc3RhcnRncmVwbGFjZSBzdGFydHJlcGxhY2Ugc3RhcnRpbnNlcnQgc3RvcGluc2VydCBzdGp1bXAgc3RzZWxlY3Qgc3VuaGlkZSBzdW5tYXAgc3VubWVudSBzdXNwZW5kIHN2aWV3IHN3YXBuYW1lIHN5bnRheCBzeW50aW1lIHN5bmNiaW5kIHROZXh0IHRhYk5leHQgdGFiY2xvc2UgdGFiZWRpdCB0YWJmaW5kIHRhYmZpcnN0IHRhYmxhc3QgdGFibW92ZSB0YWJuZXh0IHRhYm9ubHkgdGFicHJldmlvdXMgdGFicmV3aW5kIHRhZyB0Y2wgdGNsZG8gdGNsZmlsZSB0ZWFyb2ZmIHRmaXJzdCB0aHJvdyB0anVtcCB0bGFzdCB0bWVudSB0bmV4dCB0b3BsZWZ0IHRwcmV2aW91cyB0cmV3aW5kIHRzZWxlY3QgdHVubWVudSB1bmRvIHVuZG9qb2luIHVuZG9saXN0IHVuYWJicmV2aWF0ZSB1bmhpZGUgdW5sZXQgdW5sb2NrdmFyIHVubWFwIHVubWVudSB1bnNpbGVudCB1cGRhdGUgdmdsb2JhbCB2ZXJzaW9uIHZlcmJvc2UgdmVydGljYWwgdmltZ3JlcCB2aW1ncmVwYWRkIHZpc3VhbCB2aXVzYWdlIHZpZXcgdm1hcCB2bWFwY2xlYXIgdm1lbnUgdm5ldyB2bm9yZW1hcCB2bm9yZW1lbnUgdnNwbGl0IHZ1bm1hcCB2dW5tZW51IHdyaXRlIHdOZXh0IHdhbGwgd2hpbGUgd2luc2l6ZSB3aW5jbWQgd2lucG9zIHduZXh0IHdwcmV2aW91cyB3cWFsbCB3c3ZlcmIgd3VuZG8gd3ZpbWluZm8geGl0IHhhbGwgeG1hcGNsZWFyIHhtYXAgeG1lbnUgeG5vcmVtYXAgeG5vcmVtZW51IHh1bm1hcCB4dW5tZW51IHlhbmsiLGJ1aWx0X2luOiJhYnMgYWNvcyBhZGQgYW5kIGFwcGVuZCBhcmdjIGFyZ2lkeCBhcmd2IGFzaW4gYXRhbiBhdGFuMiBicm93c2UgYnJvd3NlZGlyIGJ1ZmV4aXN0cyBidWZsaXN0ZWQgYnVmbG9hZGVkIGJ1Zm5hbWUgYnVmbnIgYnVmd2lubnIgYnl0ZTJsaW5lIGJ5dGVpZHggY2FsbCBjZWlsIGNoYW5nZW5yIGNoYXIybnIgY2luZGVudCBjbGVhcm1hdGNoZXMgY29sIGNvbXBsZXRlIGNvbXBsZXRlX2FkZCBjb21wbGV0ZV9jaGVjayBjb25maXJtIGNvcHkgY29zIGNvc2ggY291bnQgY3Njb3BlX2Nvbm5lY3Rpb24gY3Vyc29yIGRlZXBjb3B5IGRlbGV0ZSBkaWRfZmlsZXR5cGUgZGlmZl9maWxsZXIgZGlmZl9obElEIGVtcHR5IGVzY2FwZSBldmFsIGV2ZW50aGFuZGxlciBleGVjdXRhYmxlIGV4aXN0cyBleHAgZXhwYW5kIGV4dGVuZCBmZWVka2V5cyBmaWxlcmVhZGFibGUgZmlsZXdyaXRhYmxlIGZpbHRlciBmaW5kZGlyIGZpbmRmaWxlIGZsb2F0Mm5yIGZsb29yIGZtb2QgZm5hbWVlc2NhcGUgZm5hbWVtb2RpZnkgZm9sZGNsb3NlZCBmb2xkY2xvc2VkZW5kIGZvbGRsZXZlbCBmb2xkdGV4dCBmb2xkdGV4dHJlc3VsdCBmb3JlZ3JvdW5kIGZ1bmN0aW9uIGdhcmJhZ2Vjb2xsZWN0IGdldCBnZXRidWZsaW5lIGdldGJ1ZnZhciBnZXRjaGFyIGdldGNoYXJtb2QgZ2V0Y21kbGluZSBnZXRjbWRwb3MgZ2V0Y21kdHlwZSBnZXRjd2QgZ2V0Zm9udG5hbWUgZ2V0ZnBlcm0gZ2V0ZnNpemUgZ2V0ZnRpbWUgZ2V0ZnR5cGUgZ2V0bGluZSBnZXRsb2NsaXN0IGdldG1hdGNoZXMgZ2V0cGlkIGdldHBvcyBnZXRxZmxpc3QgZ2V0cmVnIGdldHJlZ3R5cGUgZ2V0dGFidmFyIGdldHRhYndpbnZhciBnZXR3aW5wb3N4IGdldHdpbnBvc3kgZ2V0d2ludmFyIGdsb2IgZ2xvYnBhdGggaGFzIGhhc19rZXkgaGFzbG9jYWxkaXIgaGFzbWFwdG8gaGlzdGFkZCBoaXN0ZGVsIGhpc3RnZXQgaGlzdG5yIGhsZXhpc3RzIGhsSUQgaG9zdG5hbWUgaWNvbnYgaW5kZW50IGluZGV4IGlucHV0IGlucHV0ZGlhbG9nIGlucHV0bGlzdCBpbnB1dHJlc3RvcmUgaW5wdXRzYXZlIGlucHV0c2VjcmV0IGluc2VydCBpbnZlcnQgaXNkaXJlY3RvcnkgaXNsb2NrZWQgaXRlbXMgam9pbiBrZXlzIGxlbiBsaWJjYWxsIGxpYmNhbGxuciBsaW5lIGxpbmUyYnl0ZSBsaXNwaW5kZW50IGxvY2FsdGltZSBsb2cgbG9nMTAgbHVhZXZhbCBtYXAgbWFwYXJnIG1hcGNoZWNrIG1hdGNoIG1hdGNoYWRkIG1hdGNoYXJnIG1hdGNoZGVsZXRlIG1hdGNoZW5kIG1hdGNobGlzdCBtYXRjaHN0ciBtYXggbWluIG1rZGlyIG1vZGUgbXpldmFsIG5leHRub25ibGFuayBucjJjaGFyIG9yIHBhdGhzaG9ydGVuIHBvdyBwcmV2bm9uYmxhbmsgcHJpbnRmIHB1bXZpc2libGUgcHkzZXZhbCBweWV2YWwgcmFuZ2UgcmVhZGZpbGUgcmVsdGltZSByZWx0aW1lc3RyIHJlbW90ZV9leHByIHJlbW90ZV9mb3JlZ3JvdW5kIHJlbW90ZV9wZWVrIHJlbW90ZV9yZWFkIHJlbW90ZV9zZW5kIHJlbW92ZSByZW5hbWUgcmVwZWF0IHJlc29sdmUgcmV2ZXJzZSByb3VuZCBzY3JlZW5hdHRyIHNjcmVlbmNoYXIgc2NyZWVuY29sIHNjcmVlbnJvdyBzZWFyY2ggc2VhcmNoZGVjbCBzZWFyY2hwYWlyIHNlYXJjaHBhaXJwb3Mgc2VhcmNocG9zIHNlcnZlcjJjbGllbnQgc2VydmVybGlzdCBzZXRidWZ2YXIgc2V0Y21kcG9zIHNldGxpbmUgc2V0bG9jbGlzdCBzZXRtYXRjaGVzIHNldHBvcyBzZXRxZmxpc3Qgc2V0cmVnIHNldHRhYnZhciBzZXR0YWJ3aW52YXIgc2V0d2ludmFyIHNoYTI1NiBzaGVsbGVzY2FwZSBzaGlmdHdpZHRoIHNpbXBsaWZ5IHNpbiBzaW5oIHNvcnQgc291bmRmb2xkIHNwZWxsYmFkd29yZCBzcGVsbHN1Z2dlc3Qgc3BsaXQgc3FydCBzdHIyZmxvYXQgc3RyMm5yIHN0cmNoYXJzIHN0cmRpc3BsYXl3aWR0aCBzdHJmdGltZSBzdHJpZHggc3RyaW5nIHN0cmxlbiBzdHJwYXJ0IHN0cnJpZHggc3RydHJhbnMgc3Ryd2lkdGggc3VibWF0Y2ggc3Vic3RpdHV0ZSBzeW5jb25jZWFsZWQgc3luSUQgc3luSURhdHRyIHN5bklEdHJhbnMgc3luc3RhY2sgc3lzdGVtIHRhYnBhZ2VidWZsaXN0IHRhYnBhZ2VuciB0YWJwYWdld2lubnIgdGFnZmlsZXMgdGFnbGlzdCB0YW4gdGFuaCB0ZW1wbmFtZSB0b2xvd2VyIHRvdXBwZXIgdHIgdHJ1bmMgdHlwZSB1bmRvZmlsZSB1bmRvdHJlZSB2YWx1ZXMgdmlydGNvbCB2aXN1YWxtb2RlIHdpbGRtZW51bW9kZSB3aW5idWZuciB3aW5jb2wgd2luaGVpZ2h0IHdpbmxpbmUgd2lubnIgd2lucmVzdGNtZCB3aW5yZXN0dmlldyB3aW5zYXZldmlldyB3aW53aWR0aCB3cml0ZWZpbGUgeG9yIn0saTovW3s6XS8sYzpbZS5OTSxlLkFTTSx7Y046InN0cmluZyIsYjovIigoXFwiKXxbXiJcbl0pKigifFxuKS99LHtjTjoidmFyaWFibGUiLGI6L1tid3RnbHNhdl06W1x3XGRfXSovfSx7Y046ImZ1bmN0aW9uIixiSzoiZnVuY3Rpb24gZnVuY3Rpb24hIixlOiIkIixyOjAsYzpbZS5UTSx7Y046InBhcmFtcyIsYjoiXFwoIixlOiJcXCkifV19XX19KSxobGpzLnJlZ2lzdGVyTGFuZ3VhZ2UoIng4NmFzbSIsZnVuY3Rpb24oZSl7cmV0dXJue2NJOiEwLGw6IlxcLj8iK2UuSVIsazp7a2V5d29yZDoibG9jayByZXAgcmVwZSByZXB6IHJlcG5lIHJlcG56IHhhcXVpcmUgeHJlbGVhc2UgYm5kIG5vYm5kIGFhYSBhYWQgYWFtIGFhcyBhZGMgYWRkIGFuZCBhcnBsIGJiMF9yZXNldCBiYjFfcmVzZXQgYm91bmQgYnNmIGJzciBic3dhcCBidCBidGMgYnRyIGJ0cyBjYWxsIGNidyBjZHEgY2RxZSBjbGMgY2xkIGNsaSBjbHRzIGNtYyBjbXAgY21wc2IgY21wc2QgY21wc3EgY21wc3cgY21weGNoZyBjbXB4Y2hnNDg2IGNtcHhjaGc4YiBjbXB4Y2hnMTZiIGNwdWlkIGNwdV9yZWFkIGNwdV93cml0ZSBjcW8gY3dkIGN3ZGUgZGFhIGRhcyBkZWMgZGl2IGRtaW50IGVtbXMgZW50ZXIgZXF1IGYyeG0xIGZhYnMgZmFkZCBmYWRkcCBmYmxkIGZic3RwIGZjaHMgZmNsZXggZmNtb3ZiIGZjbW92YmUgZmNtb3ZlIGZjbW92bmIgZmNtb3ZuYmUgZmNtb3ZuZSBmY21vdm51IGZjbW92dSBmY29tIGZjb21pIGZjb21pcCBmY29tcCBmY29tcHAgZmNvcyBmZGVjc3RwIGZkaXNpIGZkaXYgZmRpdnAgZmRpdnIgZmRpdnJwIGZlbW1zIGZlbmkgZmZyZWUgZmZyZWVwIGZpYWRkIGZpY29tIGZpY29tcCBmaWRpdiBmaWRpdnIgZmlsZCBmaW11bCBmaW5jc3RwIGZpbml0IGZpc3QgZmlzdHAgZmlzdHRwIGZpc3ViIGZpc3ViciBmbGQgZmxkMSBmbGRjdyBmbGRlbnYgZmxkbDJlIGZsZGwydCBmbGRsZzIgZmxkbG4yIGZsZHBpIGZsZHogZm11bCBmbXVscCBmbmNsZXggZm5kaXNpIGZuZW5pIGZuaW5pdCBmbm9wIGZuc2F2ZSBmbnN0Y3cgZm5zdGVudiBmbnN0c3cgZnBhdGFuIGZwcmVtIGZwcmVtMSBmcHRhbiBmcm5kaW50IGZyc3RvciBmc2F2ZSBmc2NhbGUgZnNldHBtIGZzaW4gZnNpbmNvcyBmc3FydCBmc3QgZnN0Y3cgZnN0ZW52IGZzdHAgZnN0c3cgZnN1YiBmc3VicCBmc3ViciBmc3VicnAgZnRzdCBmdWNvbSBmdWNvbWkgZnVjb21pcCBmdWNvbXAgZnVjb21wcCBmeGFtIGZ4Y2ggZnh0cmFjdCBmeWwyeCBmeWwyeHAxIGhsdCBpYnRzIGljZWJwIGlkaXYgaW11bCBpbiBpbmMgaW5jYmluIGluc2IgaW5zZCBpbnN3IGludCBpbnQwMSBpbnQxIGludDAzIGludDMgaW50byBpbnZkIGludnBjaWQgaW52bHBnIGludmxwZ2EgaXJldCBpcmV0ZCBpcmV0cSBpcmV0dyBqY3h6IGplY3h6IGpyY3h6IGptcCBqbXBlIGxhaGYgbGFyIGxkcyBsZWEgbGVhdmUgbGVzIGxmZW5jZSBsZnMgbGdkdCBsZ3MgbGlkdCBsbGR0IGxtc3cgbG9hZGFsbCBsb2FkYWxsMjg2IGxvZHNiIGxvZHNkIGxvZHNxIGxvZHN3IGxvb3AgbG9vcGUgbG9vcG5lIGxvb3BueiBsb29weiBsc2wgbHNzIGx0ciBtZmVuY2UgbW9uaXRvciBtb3YgbW92ZCBtb3ZxIG1vdnNiIG1vdnNkIG1vdnNxIG1vdnN3IG1vdnN4IG1vdnN4ZCBtb3Z6eCBtdWwgbXdhaXQgbmVnIG5vcCBub3Qgb3Igb3V0IG91dHNiIG91dHNkIG91dHN3IHBhY2tzc2R3IHBhY2tzc3diIHBhY2t1c3diIHBhZGRiIHBhZGRkIHBhZGRzYiBwYWRkc2l3IHBhZGRzdyBwYWRkdXNiIHBhZGR1c3cgcGFkZHcgcGFuZCBwYW5kbiBwYXVzZSBwYXZlYiBwYXZndXNiIHBjbXBlcWIgcGNtcGVxZCBwY21wZXF3IHBjbXBndGIgcGNtcGd0ZCBwY21wZ3R3IHBkaXN0aWIgcGYyaWQgcGZhY2MgcGZhZGQgcGZjbXBlcSBwZmNtcGdlIHBmY21wZ3QgcGZtYXggcGZtaW4gcGZtdWwgcGZyY3AgcGZyY3BpdDEgcGZyY3BpdDIgcGZyc3FpdDEgcGZyc3FydCBwZnN1YiBwZnN1YnIgcGkyZmQgcG1hY2hyaXcgcG1hZGR3ZCBwbWFndyBwbXVsaHJpdyBwbXVsaHJ3YSBwbXVsaHJ3YyBwbXVsaHcgcG11bGx3IHBtdmdlemIgcG12bHpiIHBtdm56YiBwbXZ6YiBwb3AgcG9wYSBwb3BhZCBwb3BhdyBwb3BmIHBvcGZkIHBvcGZxIHBvcGZ3IHBvciBwcmVmZXRjaCBwcmVmZXRjaHcgcHNsbGQgcHNsbHEgcHNsbHcgcHNyYWQgcHNyYXcgcHNybGQgcHNybHEgcHNybHcgcHN1YmIgcHN1YmQgcHN1YnNiIHBzdWJzaXcgcHN1YnN3IHBzdWJ1c2IgcHN1YnVzdyBwc3VidyBwdW5wY2toYncgcHVucGNraGRxIHB1bnBja2h3ZCBwdW5wY2tsYncgcHVucGNrbGRxIHB1bnBja2x3ZCBwdXNoIHB1c2hhIHB1c2hhZCBwdXNoYXcgcHVzaGYgcHVzaGZkIHB1c2hmcSBwdXNoZncgcHhvciByY2wgcmNyIHJkc2hyIHJkbXNyIHJkcG1jIHJkdHNjIHJkdHNjcCByZXQgcmV0ZiByZXRuIHJvbCByb3IgcmRtIHJzZGMgcnNsZHQgcnNtIHJzdHMgc2FoZiBzYWwgc2FsYyBzYXIgc2JiIHNjYXNiIHNjYXNkIHNjYXNxIHNjYXN3IHNmZW5jZSBzZ2R0IHNobCBzaGxkIHNociBzaHJkIHNpZHQgc2xkdCBza2luaXQgc21pIHNtaW50IHNtaW50b2xkIHNtc3cgc3RjIHN0ZCBzdGkgc3Rvc2Igc3Rvc2Qgc3Rvc3Egc3Rvc3cgc3RyIHN1YiBzdmRjIHN2bGR0IHN2dHMgc3dhcGdzIHN5c2NhbGwgc3lzZW50ZXIgc3lzZXhpdCBzeXNyZXQgdGVzdCB1ZDAgdWQxIHVkMmIgdWQyIHVkMmEgdW1vdiB2ZXJyIHZlcncgZndhaXQgd2JpbnZkIHdyc2hyIHdybXNyIHhhZGQgeGJ0cyB4Y2hnIHhsYXRiIHhsYXQgeG9yIGNtb3ZlIGNtb3Z6IGNtb3ZuZSBjbW92bnogY21vdmEgY21vdm5iZSBjbW92YWUgY21vdm5iIGNtb3ZiIGNtb3ZuYWUgY21vdmJlIGNtb3ZuYSBjbW92ZyBjbW92bmxlIGNtb3ZnZSBjbW92bmwgY21vdmwgY21vdm5nZSBjbW92bGUgY21vdm5nIGNtb3ZjIGNtb3ZuYyBjbW92byBjbW92bm8gY21vdnMgY21vdm5zIGNtb3ZwIGNtb3ZwZSBjbW92bnAgY21vdnBvIGplIGp6IGpuZSBqbnogamEgam5iZSBqYWUgam5iIGpiIGpuYWUgamJlIGpuYSBqZyBqbmxlIGpnZSBqbmwgamwgam5nZSBqbGUgam5nIGpjIGpuYyBqbyBqbm8ganMgam5zIGpwbyBqbnAganBlIGpwIHNldGUgc2V0eiBzZXRuZSBzZXRueiBzZXRhIHNldG5iZSBzZXRhZSBzZXRuYiBzZXRuYyBzZXRiIHNldG5hZSBzZXRjc2V0IHNldGJlIHNldG5hIHNldGcgc2V0bmxlIHNldGdlIHNldG5sIHNldGwgc2V0bmdlIHNldGxlIHNldG5nIHNldHMgc2V0bnMgc2V0byBzZXRubyBzZXRwZSBzZXRwIHNldHBvIHNldG5wIGFkZHBzIGFkZHNzIGFuZG5wcyBhbmRwcyBjbXBlcXBzIGNtcGVxc3MgY21wbGVwcyBjbXBsZXNzIGNtcGx0cHMgY21wbHRzcyBjbXBuZXFwcyBjbXBuZXFzcyBjbXBubGVwcyBjbXBubGVzcyBjbXBubHRwcyBjbXBubHRzcyBjbXBvcmRwcyBjbXBvcmRzcyBjbXB1bm9yZHBzIGNtcHVub3Jkc3MgY21wcHMgY21wc3MgY29taXNzIGN2dHBpMnBzIGN2dHBzMnBpIGN2dHNpMnNzIGN2dHNzMnNpIGN2dHRwczJwaSBjdnR0c3Myc2kgZGl2cHMgZGl2c3MgbGRteGNzciBtYXhwcyBtYXhzcyBtaW5wcyBtaW5zcyBtb3ZhcHMgbW92aHBzIG1vdmxocHMgbW92bHBzIG1vdmhscHMgbW92bXNrcHMgbW92bnRwcyBtb3ZzcyBtb3Z1cHMgbXVscHMgbXVsc3Mgb3JwcyByY3BwcyByY3BzcyByc3FydHBzIHJzcXJ0c3Mgc2h1ZnBzIHNxcnRwcyBzcXJ0c3Mgc3RteGNzciBzdWJwcyBzdWJzcyB1Y29taXNzIHVucGNraHBzIHVucGNrbHBzIHhvcnBzIGZ4cnN0b3IgZnhyc3RvcjY0IGZ4c2F2ZSBmeHNhdmU2NCB4Z2V0YnYgeHNldGJ2IHhzYXZlIHhzYXZlNjQgeHNhdmVvcHQgeHNhdmVvcHQ2NCB4cnN0b3IgeHJzdG9yNjQgcHJlZmV0Y2hudGEgcHJlZmV0Y2h0MCBwcmVmZXRjaHQxIHByZWZldGNodDIgbWFza21vdnEgbW92bnRxIHBhdmdiIHBhdmd3IHBleHRydyBwaW5zcncgcG1heHN3IHBtYXh1YiBwbWluc3cgcG1pbnViIHBtb3Ztc2tiIHBtdWxodXcgcHNhZGJ3IHBzaHVmdyBwZjJpdyBwZm5hY2MgcGZwbmFjYyBwaTJmdyBwc3dhcGQgbWFza21vdmRxdSBjbGZsdXNoIG1vdm50ZHEgbW92bnRpIG1vdm50cGQgbW92ZHFhIG1vdmRxdSBtb3ZkcTJxIG1vdnEyZHEgcGFkZHEgcG11bHVkcSBwc2h1ZmQgcHNodWZodyBwc2h1Zmx3IHBzbGxkcSBwc3JsZHEgcHN1YnEgcHVucGNraHFkcSBwdW5wY2tscWRxIGFkZHBkIGFkZHNkIGFuZG5wZCBhbmRwZCBjbXBlcXBkIGNtcGVxc2QgY21wbGVwZCBjbXBsZXNkIGNtcGx0cGQgY21wbHRzZCBjbXBuZXFwZCBjbXBuZXFzZCBjbXBubGVwZCBjbXBubGVzZCBjbXBubHRwZCBjbXBubHRzZCBjbXBvcmRwZCBjbXBvcmRzZCBjbXB1bm9yZHBkIGNtcHVub3Jkc2QgY21wcGQgY29taXNkIGN2dGRxMnBkIGN2dGRxMnBzIGN2dHBkMmRxIGN2dHBkMnBpIGN2dHBkMnBzIGN2dHBpMnBkIGN2dHBzMmRxIGN2dHBzMnBkIGN2dHNkMnNpIGN2dHNkMnNzIGN2dHNpMnNkIGN2dHNzMnNkIGN2dHRwZDJwaSBjdnR0cGQyZHEgY3Z0dHBzMmRxIGN2dHRzZDJzaSBkaXZwZCBkaXZzZCBtYXhwZCBtYXhzZCBtaW5wZCBtaW5zZCBtb3ZhcGQgbW92aHBkIG1vdmxwZCBtb3Ztc2twZCBtb3Z1cGQgbXVscGQgbXVsc2Qgb3JwZCBzaHVmcGQgc3FydHBkIHNxcnRzZCBzdWJwZCBzdWJzZCB1Y29taXNkIHVucGNraHBkIHVucGNrbHBkIHhvcnBkIGFkZHN1YnBkIGFkZHN1YnBzIGhhZGRwZCBoYWRkcHMgaHN1YnBkIGhzdWJwcyBsZGRxdSBtb3ZkZHVwIG1vdnNoZHVwIG1vdnNsZHVwIGNsZ2kgc3RnaSB2bWNhbGwgdm1jbGVhciB2bWZ1bmMgdm1sYXVuY2ggdm1sb2FkIHZtbWNhbGwgdm1wdHJsZCB2bXB0cnN0IHZtcmVhZCB2bXJlc3VtZSB2bXJ1biB2bXNhdmUgdm13cml0ZSB2bXhvZmYgdm14b24gaW52ZXB0IGludnZwaWQgcGFic2IgcGFic3cgcGFic2QgcGFsaWduciBwaGFkZHcgcGhhZGRkIHBoYWRkc3cgcGhzdWJ3IHBoc3ViZCBwaHN1YnN3IHBtYWRkdWJzdyBwbXVsaHJzdyBwc2h1ZmIgcHNpZ25iIHBzaWdudyBwc2lnbmQgZXh0cnEgaW5zZXJ0cSBtb3ZudHNkIG1vdm50c3MgbHpjbnQgYmxlbmRwZCBibGVuZHBzIGJsZW5kdnBkIGJsZW5kdnBzIGRwcGQgZHBwcyBleHRyYWN0cHMgaW5zZXJ0cHMgbW92bnRkcWEgbXBzYWRidyBwYWNrdXNkdyBwYmxlbmR2YiBwYmxlbmR3IHBjbXBlcXEgcGV4dHJiIHBleHRyZCBwZXh0cnEgcGhtaW5wb3N1dyBwaW5zcmIgcGluc3JkIHBpbnNycSBwbWF4c2IgcG1heHNkIHBtYXh1ZCBwbWF4dXcgcG1pbnNiIHBtaW5zZCBwbWludWQgcG1pbnV3IHBtb3ZzeGJ3IHBtb3ZzeGJkIHBtb3ZzeGJxIHBtb3ZzeHdkIHBtb3ZzeHdxIHBtb3ZzeGRxIHBtb3Z6eGJ3IHBtb3Z6eGJkIHBtb3Z6eGJxIHBtb3Z6eHdkIHBtb3Z6eHdxIHBtb3Z6eGRxIHBtdWxkcSBwbXVsbGQgcHRlc3Qgcm91bmRwZCByb3VuZHBzIHJvdW5kc2Qgcm91bmRzcyBjcmMzMiBwY21wZXN0cmkgcGNtcGVzdHJtIHBjbXBpc3RyaSBwY21waXN0cm0gcGNtcGd0cSBwb3BjbnQgZ2V0c2VjIHBmcmNwdiBwZnJzcXJ0diBtb3ZiZSBhZXNlbmMgYWVzZW5jbGFzdCBhZXNkZWMgYWVzZGVjbGFzdCBhZXNpbWMgYWVza2V5Z2VuYXNzaXN0IHZhZXNlbmMgdmFlc2VuY2xhc3QgdmFlc2RlYyB2YWVzZGVjbGFzdCB2YWVzaW1jIHZhZXNrZXlnZW5hc3Npc3QgdmFkZHBkIHZhZGRwcyB2YWRkc2QgdmFkZHNzIHZhZGRzdWJwZCB2YWRkc3VicHMgdmFuZHBkIHZhbmRwcyB2YW5kbnBkIHZhbmRucHMgdmJsZW5kcGQgdmJsZW5kcHMgdmJsZW5kdnBkIHZibGVuZHZwcyB2YnJvYWRjYXN0c3MgdmJyb2FkY2FzdHNkIHZicm9hZGNhc3RmMTI4IHZjbXBlcV9vc3BkIHZjbXBlcXBkIHZjbXBsdF9vc3BkIHZjbXBsdHBkIHZjbXBsZV9vc3BkIHZjbXBsZXBkIHZjbXB1bm9yZF9xcGQgdmNtcHVub3JkcGQgdmNtcG5lcV91cXBkIHZjbXBuZXFwZCB2Y21wbmx0X3VzcGQgdmNtcG5sdHBkIHZjbXBubGVfdXNwZCB2Y21wbmxlcGQgdmNtcG9yZF9xcGQgdmNtcG9yZHBkIHZjbXBlcV91cXBkIHZjbXBuZ2VfdXNwZCB2Y21wbmdlcGQgdmNtcG5ndF91c3BkIHZjbXBuZ3RwZCB2Y21wZmFsc2Vfb3FwZCB2Y21wZmFsc2VwZCB2Y21wbmVxX29xcGQgdmNtcGdlX29zcGQgdmNtcGdlcGQgdmNtcGd0X29zcGQgdmNtcGd0cGQgdmNtcHRydWVfdXFwZCB2Y21wdHJ1ZXBkIHZjbXBsdF9vcXBkIHZjbXBsZV9vcXBkIHZjbXB1bm9yZF9zcGQgdmNtcG5lcV91c3BkIHZjbXBubHRfdXFwZCB2Y21wbmxlX3VxcGQgdmNtcG9yZF9zcGQgdmNtcGVxX3VzcGQgdmNtcG5nZV91cXBkIHZjbXBuZ3RfdXFwZCB2Y21wZmFsc2Vfb3NwZCB2Y21wbmVxX29zcGQgdmNtcGdlX29xcGQgdmNtcGd0X29xcGQgdmNtcHRydWVfdXNwZCB2Y21wcGQgdmNtcGVxX29zcHMgdmNtcGVxcHMgdmNtcGx0X29zcHMgdmNtcGx0cHMgdmNtcGxlX29zcHMgdmNtcGxlcHMgdmNtcHVub3JkX3FwcyB2Y21wdW5vcmRwcyB2Y21wbmVxX3VxcHMgdmNtcG5lcXBzIHZjbXBubHRfdXNwcyB2Y21wbmx0cHMgdmNtcG5sZV91c3BzIHZjbXBubGVwcyB2Y21wb3JkX3FwcyB2Y21wb3JkcHMgdmNtcGVxX3VxcHMgdmNtcG5nZV91c3BzIHZjbXBuZ2VwcyB2Y21wbmd0X3VzcHMgdmNtcG5ndHBzIHZjbXBmYWxzZV9vcXBzIHZjbXBmYWxzZXBzIHZjbXBuZXFfb3FwcyB2Y21wZ2Vfb3NwcyB2Y21wZ2VwcyB2Y21wZ3Rfb3NwcyB2Y21wZ3RwcyB2Y21wdHJ1ZV91cXBzIHZjbXB0cnVlcHMgdmNtcGx0X29xcHMgdmNtcGxlX29xcHMgdmNtcHVub3JkX3NwcyB2Y21wbmVxX3VzcHMgdmNtcG5sdF91cXBzIHZjbXBubGVfdXFwcyB2Y21wb3JkX3NwcyB2Y21wZXFfdXNwcyB2Y21wbmdlX3VxcHMgdmNtcG5ndF91cXBzIHZjbXBmYWxzZV9vc3BzIHZjbXBuZXFfb3NwcyB2Y21wZ2Vfb3FwcyB2Y21wZ3Rfb3FwcyB2Y21wdHJ1ZV91c3BzIHZjbXBwcyB2Y21wZXFfb3NzZCB2Y21wZXFzZCB2Y21wbHRfb3NzZCB2Y21wbHRzZCB2Y21wbGVfb3NzZCB2Y21wbGVzZCB2Y21wdW5vcmRfcXNkIHZjbXB1bm9yZHNkIHZjbXBuZXFfdXFzZCB2Y21wbmVxc2QgdmNtcG5sdF91c3NkIHZjbXBubHRzZCB2Y21wbmxlX3Vzc2QgdmNtcG5sZXNkIHZjbXBvcmRfcXNkIHZjbXBvcmRzZCB2Y21wZXFfdXFzZCB2Y21wbmdlX3Vzc2QgdmNtcG5nZXNkIHZjbXBuZ3RfdXNzZCB2Y21wbmd0c2QgdmNtcGZhbHNlX29xc2QgdmNtcGZhbHNlc2QgdmNtcG5lcV9vcXNkIHZjbXBnZV9vc3NkIHZjbXBnZXNkIHZjbXBndF9vc3NkIHZjbXBndHNkIHZjbXB0cnVlX3Vxc2QgdmNtcHRydWVzZCB2Y21wbHRfb3FzZCB2Y21wbGVfb3FzZCB2Y21wdW5vcmRfc3NkIHZjbXBuZXFfdXNzZCB2Y21wbmx0X3Vxc2QgdmNtcG5sZV91cXNkIHZjbXBvcmRfc3NkIHZjbXBlcV91c3NkIHZjbXBuZ2VfdXFzZCB2Y21wbmd0X3Vxc2QgdmNtcGZhbHNlX29zc2QgdmNtcG5lcV9vc3NkIHZjbXBnZV9vcXNkIHZjbXBndF9vcXNkIHZjbXB0cnVlX3Vzc2QgdmNtcHNkIHZjbXBlcV9vc3NzIHZjbXBlcXNzIHZjbXBsdF9vc3NzIHZjbXBsdHNzIHZjbXBsZV9vc3NzIHZjbXBsZXNzIHZjbXB1bm9yZF9xc3MgdmNtcHVub3Jkc3MgdmNtcG5lcV91cXNzIHZjbXBuZXFzcyB2Y21wbmx0X3Vzc3MgdmNtcG5sdHNzIHZjbXBubGVfdXNzcyB2Y21wbmxlc3MgdmNtcG9yZF9xc3MgdmNtcG9yZHNzIHZjbXBlcV91cXNzIHZjbXBuZ2VfdXNzcyB2Y21wbmdlc3MgdmNtcG5ndF91c3NzIHZjbXBuZ3RzcyB2Y21wZmFsc2Vfb3FzcyB2Y21wZmFsc2VzcyB2Y21wbmVxX29xc3MgdmNtcGdlX29zc3MgdmNtcGdlc3MgdmNtcGd0X29zc3MgdmNtcGd0c3MgdmNtcHRydWVfdXFzcyB2Y21wdHJ1ZXNzIHZjbXBsdF9vcXNzIHZjbXBsZV9vcXNzIHZjbXB1bm9yZF9zc3MgdmNtcG5lcV91c3NzIHZjbXBubHRfdXFzcyB2Y21wbmxlX3Vxc3MgdmNtcG9yZF9zc3MgdmNtcGVxX3Vzc3MgdmNtcG5nZV91cXNzIHZjbXBuZ3RfdXFzcyB2Y21wZmFsc2Vfb3NzcyB2Y21wbmVxX29zc3MgdmNtcGdlX29xc3MgdmNtcGd0X29xc3MgdmNtcHRydWVfdXNzcyB2Y21wc3MgdmNvbWlzZCB2Y29taXNzIHZjdnRkcTJwZCB2Y3Z0ZHEycHMgdmN2dHBkMmRxIHZjdnRwZDJwcyB2Y3Z0cHMyZHEgdmN2dHBzMnBkIHZjdnRzZDJzaSB2Y3Z0c2Qyc3MgdmN2dHNpMnNkIHZjdnRzaTJzcyB2Y3Z0c3Myc2QgdmN2dHNzMnNpIHZjdnR0cGQyZHEgdmN2dHRwczJkcSB2Y3Z0dHNkMnNpIHZjdnR0c3Myc2kgdmRpdnBkIHZkaXZwcyB2ZGl2c2QgdmRpdnNzIHZkcHBkIHZkcHBzIHZleHRyYWN0ZjEyOCB2ZXh0cmFjdHBzIHZoYWRkcGQgdmhhZGRwcyB2aHN1YnBkIHZoc3VicHMgdmluc2VydGYxMjggdmluc2VydHBzIHZsZGRxdSB2bGRxcXUgdmxkbXhjc3Igdm1hc2ttb3ZkcXUgdm1hc2ttb3ZwcyB2bWFza21vdnBkIHZtYXhwZCB2bWF4cHMgdm1heHNkIHZtYXhzcyB2bWlucGQgdm1pbnBzIHZtaW5zZCB2bWluc3Mgdm1vdmFwZCB2bW92YXBzIHZtb3ZkIHZtb3ZxIHZtb3ZkZHVwIHZtb3ZkcWEgdm1vdnFxYSB2bW92ZHF1IHZtb3ZxcXUgdm1vdmhscHMgdm1vdmhwZCB2bW92aHBzIHZtb3ZsaHBzIHZtb3ZscGQgdm1vdmxwcyB2bW92bXNrcGQgdm1vdm1za3BzIHZtb3ZudGRxIHZtb3ZudHFxIHZtb3ZudGRxYSB2bW92bnRwZCB2bW92bnRwcyB2bW92c2Qgdm1vdnNoZHVwIHZtb3ZzbGR1cCB2bW92c3Mgdm1vdnVwZCB2bW92dXBzIHZtcHNhZGJ3IHZtdWxwZCB2bXVscHMgdm11bHNkIHZtdWxzcyB2b3JwZCB2b3JwcyB2cGFic2IgdnBhYnN3IHZwYWJzZCB2cGFja3Nzd2IgdnBhY2tzc2R3IHZwYWNrdXN3YiB2cGFja3VzZHcgdnBhZGRiIHZwYWRkdyB2cGFkZGQgdnBhZGRxIHZwYWRkc2IgdnBhZGRzdyB2cGFkZHVzYiB2cGFkZHVzdyB2cGFsaWduciB2cGFuZCB2cGFuZG4gdnBhdmdiIHZwYXZndyB2cGJsZW5kdmIgdnBibGVuZHcgdnBjbXBlc3RyaSB2cGNtcGVzdHJtIHZwY21waXN0cmkgdnBjbXBpc3RybSB2cGNtcGVxYiB2cGNtcGVxdyB2cGNtcGVxZCB2cGNtcGVxcSB2cGNtcGd0YiB2cGNtcGd0dyB2cGNtcGd0ZCB2cGNtcGd0cSB2cGVybWlscGQgdnBlcm1pbHBzIHZwZXJtMmYxMjggdnBleHRyYiB2cGV4dHJ3IHZwZXh0cmQgdnBleHRycSB2cGhhZGR3IHZwaGFkZGQgdnBoYWRkc3cgdnBobWlucG9zdXcgdnBoc3VidyB2cGhzdWJkIHZwaHN1YnN3IHZwaW5zcmIgdnBpbnNydyB2cGluc3JkIHZwaW5zcnEgdnBtYWRkd2QgdnBtYWRkdWJzdyB2cG1heHNiIHZwbWF4c3cgdnBtYXhzZCB2cG1heHViIHZwbWF4dXcgdnBtYXh1ZCB2cG1pbnNiIHZwbWluc3cgdnBtaW5zZCB2cG1pbnViIHZwbWludXcgdnBtaW51ZCB2cG1vdm1za2IgdnBtb3ZzeGJ3IHZwbW92c3hiZCB2cG1vdnN4YnEgdnBtb3ZzeHdkIHZwbW92c3h3cSB2cG1vdnN4ZHEgdnBtb3Z6eGJ3IHZwbW92enhiZCB2cG1vdnp4YnEgdnBtb3Z6eHdkIHZwbW92enh3cSB2cG1vdnp4ZHEgdnBtdWxodXcgdnBtdWxocnN3IHZwbXVsaHcgdnBtdWxsdyB2cG11bGxkIHZwbXVsdWRxIHZwbXVsZHEgdnBvciB2cHNhZGJ3IHZwc2h1ZmIgdnBzaHVmZCB2cHNodWZodyB2cHNodWZsdyB2cHNpZ25iIHZwc2lnbncgdnBzaWduZCB2cHNsbGRxIHZwc3JsZHEgdnBzbGx3IHZwc2xsZCB2cHNsbHEgdnBzcmF3IHZwc3JhZCB2cHNybHcgdnBzcmxkIHZwc3JscSB2cHRlc3QgdnBzdWJiIHZwc3VidyB2cHN1YmQgdnBzdWJxIHZwc3Vic2IgdnBzdWJzdyB2cHN1YnVzYiB2cHN1YnVzdyB2cHVucGNraGJ3IHZwdW5wY2tod2QgdnB1bnBja2hkcSB2cHVucGNraHFkcSB2cHVucGNrbGJ3IHZwdW5wY2tsd2QgdnB1bnBja2xkcSB2cHVucGNrbHFkcSB2cHhvciB2cmNwcHMgdnJjcHNzIHZyc3FydHBzIHZyc3FydHNzIHZyb3VuZHBkIHZyb3VuZHBzIHZyb3VuZHNkIHZyb3VuZHNzIHZzaHVmcGQgdnNodWZwcyB2c3FydHBkIHZzcXJ0cHMgdnNxcnRzZCB2c3FydHNzIHZzdG14Y3NyIHZzdWJwZCB2c3VicHMgdnN1YnNkIHZzdWJzcyB2dGVzdHBzIHZ0ZXN0cGQgdnVjb21pc2QgdnVjb21pc3MgdnVucGNraHBkIHZ1bnBja2hwcyB2dW5wY2tscGQgdnVucGNrbHBzIHZ4b3JwZCB2eG9ycHMgdnplcm9hbGwgdnplcm91cHBlciBwY2xtdWxscWxxZHEgcGNsbXVsaHFscWRxIHBjbG11bGxxaHFkcSBwY2xtdWxocWhxZHEgcGNsbXVscWRxIHZwY2xtdWxscWxxZHEgdnBjbG11bGhxbHFkcSB2cGNsbXVsbHFocWRxIHZwY2xtdWxocWhxZHEgdnBjbG11bHFkcSB2Zm1hZGQxMzJwcyB2Zm1hZGQxMzJwZCB2Zm1hZGQzMTJwcyB2Zm1hZGQzMTJwZCB2Zm1hZGQyMTNwcyB2Zm1hZGQyMTNwZCB2Zm1hZGQxMjNwcyB2Zm1hZGQxMjNwZCB2Zm1hZGQyMzFwcyB2Zm1hZGQyMzFwZCB2Zm1hZGQzMjFwcyB2Zm1hZGQzMjFwZCB2Zm1hZGRzdWIxMzJwcyB2Zm1hZGRzdWIxMzJwZCB2Zm1hZGRzdWIzMTJwcyB2Zm1hZGRzdWIzMTJwZCB2Zm1hZGRzdWIyMTNwcyB2Zm1hZGRzdWIyMTNwZCB2Zm1hZGRzdWIxMjNwcyB2Zm1hZGRzdWIxMjNwZCB2Zm1hZGRzdWIyMzFwcyB2Zm1hZGRzdWIyMzFwZCB2Zm1hZGRzdWIzMjFwcyB2Zm1hZGRzdWIzMjFwZCB2Zm1zdWIxMzJwcyB2Zm1zdWIxMzJwZCB2Zm1zdWIzMTJwcyB2Zm1zdWIzMTJwZCB2Zm1zdWIyMTNwcyB2Zm1zdWIyMTNwZCB2Zm1zdWIxMjNwcyB2Zm1zdWIxMjNwZCB2Zm1zdWIyMzFwcyB2Zm1zdWIyMzFwZCB2Zm1zdWIzMjFwcyB2Zm1zdWIzMjFwZCB2Zm1zdWJhZGQxMzJwcyB2Zm1zdWJhZGQxMzJwZCB2Zm1zdWJhZGQzMTJwcyB2Zm1zdWJhZGQzMTJwZCB2Zm1zdWJhZGQyMTNwcyB2Zm1zdWJhZGQyMTNwZCB2Zm1zdWJhZGQxMjNwcyB2Zm1zdWJhZGQxMjNwZCB2Zm1zdWJhZGQyMzFwcyB2Zm1zdWJhZGQyMzFwZCB2Zm1zdWJhZGQzMjFwcyB2Zm1zdWJhZGQzMjFwZCB2Zm5tYWRkMTMycHMgdmZubWFkZDEzMnBkIHZmbm1hZGQzMTJwcyB2Zm5tYWRkMzEycGQgdmZubWFkZDIxM3BzIHZmbm1hZGQyMTNwZCB2Zm5tYWRkMTIzcHMgdmZubWFkZDEyM3BkIHZmbm1hZGQyMzFwcyB2Zm5tYWRkMjMxcGQgdmZubWFkZDMyMXBzIHZmbm1hZGQzMjFwZCB2Zm5tc3ViMTMycHMgdmZubXN1YjEzMnBkIHZmbm1zdWIzMTJwcyB2Zm5tc3ViMzEycGQgdmZubXN1YjIxM3BzIHZmbm1zdWIyMTNwZCB2Zm5tc3ViMTIzcHMgdmZubXN1YjEyM3BkIHZmbm1zdWIyMzFwcyB2Zm5tc3ViMjMxcGQgdmZubXN1YjMyMXBzIHZmbm1zdWIzMjFwZCB2Zm1hZGQxMzJzcyB2Zm1hZGQxMzJzZCB2Zm1hZGQzMTJzcyB2Zm1hZGQzMTJzZCB2Zm1hZGQyMTNzcyB2Zm1hZGQyMTNzZCB2Zm1hZGQxMjNzcyB2Zm1hZGQxMjNzZCB2Zm1hZGQyMzFzcyB2Zm1hZGQyMzFzZCB2Zm1hZGQzMjFzcyB2Zm1hZGQzMjFzZCB2Zm1zdWIxMzJzcyB2Zm1zdWIxMzJzZCB2Zm1zdWIzMTJzcyB2Zm1zdWIzMTJzZCB2Zm1zdWIyMTNzcyB2Zm1zdWIyMTNzZCB2Zm1zdWIxMjNzcyB2Zm1zdWIxMjNzZCB2Zm1zdWIyMzFzcyB2Zm1zdWIyMzFzZCB2Zm1zdWIzMjFzcyB2Zm1zdWIzMjFzZCB2Zm5tYWRkMTMyc3MgdmZubWFkZDEzMnNkIHZmbm1hZGQzMTJzcyB2Zm5tYWRkMzEyc2QgdmZubWFkZDIxM3NzIHZmbm1hZGQyMTNzZCB2Zm5tYWRkMTIzc3MgdmZubWFkZDEyM3NkIHZmbm1hZGQyMzFzcyB2Zm5tYWRkMjMxc2QgdmZubWFkZDMyMXNzIHZmbm1hZGQzMjFzZCB2Zm5tc3ViMTMyc3MgdmZubXN1YjEzMnNkIHZmbm1zdWIzMTJzcyB2Zm5tc3ViMzEyc2QgdmZubXN1YjIxM3NzIHZmbm1zdWIyMTNzZCB2Zm5tc3ViMTIzc3MgdmZubXN1YjEyM3NkIHZmbm1zdWIyMzFzcyB2Zm5tc3ViMjMxc2QgdmZubXN1YjMyMXNzIHZmbm1zdWIzMjFzZCByZGZzYmFzZSByZGdzYmFzZSByZHJhbmQgd3Jmc2Jhc2Ugd3Jnc2Jhc2UgdmN2dHBoMnBzIHZjdnRwczJwaCBhZGN4IGFkb3ggcmRzZWVkIGNsYWMgc3RhYyB4c3RvcmUgeGNyeXB0ZWNiIHhjcnlwdGNiYyB4Y3J5cHRjdHIgeGNyeXB0Y2ZiIHhjcnlwdG9mYiBtb250bXVsIHhzaGExIHhzaGEyNTYgbGx3cGNiIHNsd3BjYiBsd3B2YWwgbHdwaW5zIHZmbWFkZHBkIHZmbWFkZHBzIHZmbWFkZHNkIHZmbWFkZHNzIHZmbWFkZHN1YnBkIHZmbWFkZHN1YnBzIHZmbXN1YmFkZHBkIHZmbXN1YmFkZHBzIHZmbXN1YnBkIHZmbXN1YnBzIHZmbXN1YnNkIHZmbXN1YnNzIHZmbm1hZGRwZCB2Zm5tYWRkcHMgdmZubWFkZHNkIHZmbm1hZGRzcyB2Zm5tc3VicGQgdmZubXN1YnBzIHZmbm1zdWJzZCB2Zm5tc3Vic3MgdmZyY3pwZCB2ZnJjenBzIHZmcmN6c2QgdmZyY3pzcyB2cGNtb3YgdnBjb21iIHZwY29tZCB2cGNvbXEgdnBjb211YiB2cGNvbXVkIHZwY29tdXEgdnBjb211dyB2cGNvbXcgdnBoYWRkYmQgdnBoYWRkYnEgdnBoYWRkYncgdnBoYWRkZHEgdnBoYWRkdWJkIHZwaGFkZHVicSB2cGhhZGR1YncgdnBoYWRkdWRxIHZwaGFkZHV3ZCB2cGhhZGR1d3EgdnBoYWRkd2QgdnBoYWRkd3EgdnBoc3ViYncgdnBoc3ViZHEgdnBoc3Vid2QgdnBtYWNzZGQgdnBtYWNzZHFoIHZwbWFjc2RxbCB2cG1hY3NzZGQgdnBtYWNzc2RxaCB2cG1hY3NzZHFsIHZwbWFjc3N3ZCB2cG1hY3Nzd3cgdnBtYWNzd2QgdnBtYWNzd3cgdnBtYWRjc3N3ZCB2cG1hZGNzd2QgdnBwZXJtIHZwcm90YiB2cHJvdGQgdnByb3RxIHZwcm90dyB2cHNoYWIgdnBzaGFkIHZwc2hhcSB2cHNoYXcgdnBzaGxiIHZwc2hsZCB2cHNobHEgdnBzaGx3IHZicm9hZGNhc3RpMTI4IHZwYmxlbmRkIHZwYnJvYWRjYXN0YiB2cGJyb2FkY2FzdHcgdnBicm9hZGNhc3RkIHZwYnJvYWRjYXN0cSB2cGVybWQgdnBlcm1wZCB2cGVybXBzIHZwZXJtcSB2cGVybTJpMTI4IHZleHRyYWN0aTEyOCB2aW5zZXJ0aTEyOCB2cG1hc2ttb3ZkIHZwbWFza21vdnEgdnBzbGx2ZCB2cHNsbHZxIHZwc3JhdmQgdnBzcmx2ZCB2cHNybHZxIHZnYXRoZXJkcGQgdmdhdGhlcnFwZCB2Z2F0aGVyZHBzIHZnYXRoZXJxcHMgdnBnYXRoZXJkZCB2cGdhdGhlcnFkIHZwZ2F0aGVyZHEgdnBnYXRoZXJxcSB4YWJvcnQgeGJlZ2luIHhlbmQgeHRlc3QgYW5kbiBiZXh0ciBibGNpIGJsY2ljIGJsc2kgYmxzaWMgYmxjZmlsbCBibHNmaWxsIGJsY21zayBibHNtc2sgYmxzciBibGNzIGJ6aGkgbXVseCBwZGVwIHBleHQgcm9yeCBzYXJ4IHNobHggc2hyeCB0emNudCB0em1zayB0MW1za2MgdmFsaWduZCB2YWxpZ25xIHZibGVuZG1wZCB2YmxlbmRtcHMgdmJyb2FkY2FzdGYzMng0IHZicm9hZGNhc3RmNjR4NCB2YnJvYWRjYXN0aTMyeDQgdmJyb2FkY2FzdGk2NHg0IHZjb21wcmVzc3BkIHZjb21wcmVzc3BzIHZjdnRwZDJ1ZHEgdmN2dHBzMnVkcSB2Y3Z0c2QydXNpIHZjdnRzczJ1c2kgdmN2dHRwZDJ1ZHEgdmN2dHRwczJ1ZHEgdmN2dHRzZDJ1c2kgdmN2dHRzczJ1c2kgdmN2dHVkcTJwZCB2Y3Z0dWRxMnBzIHZjdnR1c2kyc2QgdmN2dHVzaTJzcyB2ZXhwYW5kcGQgdmV4cGFuZHBzIHZleHRyYWN0ZjMyeDQgdmV4dHJhY3RmNjR4NCB2ZXh0cmFjdGkzMng0IHZleHRyYWN0aTY0eDQgdmZpeHVwaW1tcGQgdmZpeHVwaW1tcHMgdmZpeHVwaW1tc2QgdmZpeHVwaW1tc3MgdmdldGV4cHBkIHZnZXRleHBwcyB2Z2V0ZXhwc2QgdmdldGV4cHNzIHZnZXRtYW50cGQgdmdldG1hbnRwcyB2Z2V0bWFudHNkIHZnZXRtYW50c3Mgdmluc2VydGYzMng0IHZpbnNlcnRmNjR4NCB2aW5zZXJ0aTMyeDQgdmluc2VydGk2NHg0IHZtb3ZkcWEzMiB2bW92ZHFhNjQgdm1vdmRxdTMyIHZtb3ZkcXU2NCB2cGFic3EgdnBhbmRkIHZwYW5kbmQgdnBhbmRucSB2cGFuZHEgdnBibGVuZG1kIHZwYmxlbmRtcSB2cGNtcGx0ZCB2cGNtcGxlZCB2cGNtcG5lcWQgdnBjbXBubHRkIHZwY21wbmxlZCB2cGNtcGQgdnBjbXBsdHEgdnBjbXBsZXEgdnBjbXBuZXFxIHZwY21wbmx0cSB2cGNtcG5sZXEgdnBjbXBxIHZwY21wZXF1ZCB2cGNtcGx0dWQgdnBjbXBsZXVkIHZwY21wbmVxdWQgdnBjbXBubHR1ZCB2cGNtcG5sZXVkIHZwY21wdWQgdnBjbXBlcXVxIHZwY21wbHR1cSB2cGNtcGxldXEgdnBjbXBuZXF1cSB2cGNtcG5sdHVxIHZwY21wbmxldXEgdnBjbXB1cSB2cGNvbXByZXNzZCB2cGNvbXByZXNzcSB2cGVybWkyZCB2cGVybWkycGQgdnBlcm1pMnBzIHZwZXJtaTJxIHZwZXJtdDJkIHZwZXJtdDJwZCB2cGVybXQycHMgdnBlcm10MnEgdnBleHBhbmRkIHZwZXhwYW5kcSB2cG1heHNxIHZwbWF4dXEgdnBtaW5zcSB2cG1pbnVxIHZwbW92ZGIgdnBtb3ZkdyB2cG1vdnFiIHZwbW92cWQgdnBtb3ZxdyB2cG1vdnNkYiB2cG1vdnNkdyB2cG1vdnNxYiB2cG1vdnNxZCB2cG1vdnNxdyB2cG1vdnVzZGIgdnBtb3Z1c2R3IHZwbW92dXNxYiB2cG1vdnVzcWQgdnBtb3Z1c3F3IHZwb3JkIHZwb3JxIHZwcm9sZCB2cHJvbHEgdnByb2x2ZCB2cHJvbHZxIHZwcm9yZCB2cHJvcnEgdnByb3J2ZCB2cHJvcnZxIHZwc2NhdHRlcmRkIHZwc2NhdHRlcmRxIHZwc2NhdHRlcnFkIHZwc2NhdHRlcnFxIHZwc3JhcSB2cHNyYXZxIHZwdGVybmxvZ2QgdnB0ZXJubG9ncSB2cHRlc3RtZCB2cHRlc3RtcSB2cHRlc3RubWQgdnB0ZXN0bm1xIHZweG9yZCB2cHhvcnEgdnJjcDE0cGQgdnJjcDE0cHMgdnJjcDE0c2QgdnJjcDE0c3MgdnJuZHNjYWxlcGQgdnJuZHNjYWxlcHMgdnJuZHNjYWxlc2QgdnJuZHNjYWxlc3MgdnJzcXJ0MTRwZCB2cnNxcnQxNHBzIHZyc3FydDE0c2QgdnJzcXJ0MTRzcyB2c2NhbGVmcGQgdnNjYWxlZnBzIHZzY2FsZWZzZCB2c2NhbGVmc3MgdnNjYXR0ZXJkcGQgdnNjYXR0ZXJkcHMgdnNjYXR0ZXJxcGQgdnNjYXR0ZXJxcHMgdnNodWZmMzJ4NCB2c2h1ZmY2NHgyIHZzaHVmaTMyeDQgdnNodWZpNjR4MiBrYW5kbncga2FuZHcga21vdncga25vdHcga29ydGVzdHcga29ydyBrc2hpZnRsdyBrc2hpZnRydyBrdW5wY2tidyBreG5vcncga3hvcncgdnBicm9hZGNhc3RtYjJxIHZwYnJvYWRjYXN0bXcyZCB2cGNvbmZsaWN0ZCB2cGNvbmZsaWN0cSB2cGx6Y250ZCB2cGx6Y250cSB2ZXhwMnBkIHZleHAycHMgdnJjcDI4cGQgdnJjcDI4cHMgdnJjcDI4c2QgdnJjcDI4c3MgdnJzcXJ0MjhwZCB2cnNxcnQyOHBzIHZyc3FydDI4c2QgdnJzcXJ0MjhzcyB2Z2F0aGVycGYwZHBkIHZnYXRoZXJwZjBkcHMgdmdhdGhlcnBmMHFwZCB2Z2F0aGVycGYwcXBzIHZnYXRoZXJwZjFkcGQgdmdhdGhlcnBmMWRwcyB2Z2F0aGVycGYxcXBkIHZnYXRoZXJwZjFxcHMgdnNjYXR0ZXJwZjBkcGQgdnNjYXR0ZXJwZjBkcHMgdnNjYXR0ZXJwZjBxcGQgdnNjYXR0ZXJwZjBxcHMgdnNjYXR0ZXJwZjFkcGQgdnNjYXR0ZXJwZjFkcHMgdnNjYXR0ZXJwZjFxcGQgdnNjYXR0ZXJwZjFxcHMgcHJlZmV0Y2h3dDEgYm5kbWsgYm5kY2wgYm5kY3UgYm5kY24gYm5kbW92IGJuZGxkeCBibmRzdHggc2hhMXJuZHM0IHNoYTFuZXh0ZSBzaGExbXNnMSBzaGExbXNnMiBzaGEyNTZybmRzMiBzaGEyNTZtc2cxIHNoYTI1Nm1zZzIgaGludF9ub3AwIGhpbnRfbm9wMSBoaW50X25vcDIgaGludF9ub3AzIGhpbnRfbm9wNCBoaW50X25vcDUgaGludF9ub3A2IGhpbnRfbm9wNyBoaW50X25vcDggaGludF9ub3A5IGhpbnRfbm9wMTAgaGludF9ub3AxMSBoaW50X25vcDEyIGhpbnRfbm9wMTMgaGludF9ub3AxNCBoaW50X25vcDE1IGhpbnRfbm9wMTYgaGludF9ub3AxNyBoaW50X25vcDE4IGhpbnRfbm9wMTkgaGludF9ub3AyMCBoaW50X25vcDIxIGhpbnRfbm9wMjIgaGludF9ub3AyMyBoaW50X25vcDI0IGhpbnRfbm9wMjUgaGludF9ub3AyNiBoaW50X25vcDI3IGhpbnRfbm9wMjggaGludF9ub3AyOSBoaW50X25vcDMwIGhpbnRfbm9wMzEgaGludF9ub3AzMiBoaW50X25vcDMzIGhpbnRfbm9wMzQgaGludF9ub3AzNSBoaW50X25vcDM2IGhpbnRfbm9wMzcgaGludF9ub3AzOCBoaW50X25vcDM5IGhpbnRfbm9wNDAgaGludF9ub3A0MSBoaW50X25vcDQyIGhpbnRfbm9wNDMgaGludF9ub3A0NCBoaW50X25vcDQ1IGhpbnRfbm9wNDYgaGludF9ub3A0NyBoaW50X25vcDQ4IGhpbnRfbm9wNDkgaGludF9ub3A1MCBoaW50X25vcDUxIGhpbnRfbm9wNTIgaGludF9ub3A1MyBoaW50X25vcDU0IGhpbnRfbm9wNTUgaGludF9ub3A1NiBoaW50X25vcDU3IGhpbnRfbm9wNTggaGludF9ub3A1OSBoaW50X25vcDYwIGhpbnRfbm9wNjEgaGludF9ub3A2MiBoaW50X25vcDYzIixsaXRlcmFsOiJpcCBlaXAgcmlwIGFsIGFoIGJsIGJoIGNsIGNoIGRsIGRoIHNpbCBkaWwgYnBsIHNwbCByOGIgcjliIHIxMGIgcjExYiByMTJiIHIxM2IgcjE0YiByMTViIGF4IGJ4IGN4IGR4IHNpIGRpIGJwIHNwIHI4dyByOXcgcjEwdyByMTF3IHIxMncgcjEzdyByMTR3IHIxNXcgZWF4IGVieCBlY3ggZWR4IGVzaSBlZGkgZWJwIGVzcCBlaXAgcjhkIHI5ZCByMTBkIHIxMWQgcjEyZCByMTNkIHIxNGQgcjE1ZCByYXggcmJ4IHJjeCByZHggcnNpIHJkaSByYnAgcnNwIHI4IHI5IHIxMCByMTEgcjEyIHIxMyByMTQgcjE1IGNzIGRzIGVzIGZzIGdzIHNzIHN0IHN0MCBzdDEgc3QyIHN0MyBzdDQgc3Q1IHN0NiBzdDcgbW0wIG1tMSBtbTIgbW0zIG1tNCBtbTUgbW02IG1tNyB4bW0wICB4bW0xICB4bW0yICB4bW0zICB4bW00ICB4bW01ICB4bW02ICB4bW03ICB4bW04ICB4bW05IHhtbTEwICB4bW0xMSB4bW0xMiB4bW0xMyB4bW0xNCB4bW0xNSB4bW0xNiB4bW0xNyB4bW0xOCB4bW0xOSB4bW0yMCB4bW0yMSB4bW0yMiB4bW0yMyB4bW0yNCB4bW0yNSB4bW0yNiB4bW0yNyB4bW0yOCB4bW0yOSB4bW0zMCB4bW0zMSB5bW0wICB5bW0xICB5bW0yICB5bW0zICB5bW00ICB5bW01ICB5bW02ICB5bW03ICB5bW04ICB5bW05IHltbTEwICB5bW0xMSB5bW0xMiB5bW0xMyB5bW0xNCB5bW0xNSB5bW0xNiB5bW0xNyB5bW0xOCB5bW0xOSB5bW0yMCB5bW0yMSB5bW0yMiB5bW0yMyB5bW0yNCB5bW0yNSB5bW0yNiB5bW0yNyB5bW0yOCB5bW0yOSB5bW0zMCB5bW0zMSB6bW0wICB6bW0xICB6bW0yICB6bW0zICB6bW00ICB6bW01ICB6bW02ICB6bW03ICB6bW04ICB6bW05IHptbTEwICB6bW0xMSB6bW0xMiB6bW0xMyB6bW0xNCB6bW0xNSB6bW0xNiB6bW0xNyB6bW0xOCB6bW0xOSB6bW0yMCB6bW0yMSB6bW0yMiB6bW0yMyB6bW0yNCB6bW0yNSB6bW0yNiB6bW0yNyB6bW0yOCB6bW0yOSB6bW0zMCB6bW0zMSBrMCBrMSBrMiBrMyBrNCBrNSBrNiBrNyBibmQwIGJuZDEgYm5kMiBibmQzIGNyMCBjcjEgY3IyIGNyMyBjcjQgY3I4IGRyMCBkcjEgZHIyIGRyMyBkcjggdHIzIHRyNCB0cjUgdHI2IHRyNyByMCByMSByMiByMyByNCByNSByNiByNyByMGIgcjFiIHIyYiByM2IgcjRiIHI1YiByNmIgcjdiIHIwdyByMXcgcjJ3IHIzdyByNHcgcjV3IHI2dyByN3cgcjBkIHIxZCByMmQgcjNkIHI0ZCByNWQgcjZkIHI3ZCByMGggcjFoIHIyaCByM2ggcjBsIHIxbCByMmwgcjNsIHI0bCByNWwgcjZsIHI3bCByOGwgcjlsIHIxMGwgcjExbCByMTJsIHIxM2wgcjE0bCByMTVsIixwc2V1ZG86ImRiIGR3IGRkIGRxIGR0IGRkcSBkbyBkeSBkeiByZXNiIHJlc3cgcmVzZCByZXNxIHJlc3QgcmVzZHEgcmVzbyByZXN5IHJlc3ogaW5jYmluIGVxdSB0aW1lcyIscHJlcHJvY2Vzc29yOiIlZGVmaW5lICV4ZGVmaW5lICUrICV1bmRlZiAlZGVmc3RyICVkZWZ0b2sgJWFzc2lnbiAlc3RyY2F0ICVzdHJsZW4gJXN1YnN0ciAlcm90YXRlICVlbGlmICVlbHNlICVlbmRpZiAlaWZtYWNybyAlaWZjdHggJWlmaWRuICVpZmlkbmkgJWlmaWQgJWlmbnVtICVpZnN0ciAlaWZ0b2tlbiAlaWZlbXB0eSAlaWZlbnYgJWVycm9yICV3YXJuaW5nICVmYXRhbCAlcmVwICVlbmRyZXAgJWluY2x1ZGUgJXB1c2ggJXBvcCAlcmVwbCAlcGF0aHNlYXJjaCAlZGVwZW5kICV1c2UgJWFyZyAlc3RhY2tzaXplICVsb2NhbCAlbGluZSAlY29tbWVudCAlZW5kY29tbWVudCAubm9saXN0IGJ5dGUgd29yZCBkd29yZCBxd29yZCBub3NwbGl0IHJlbCBhYnMgc2VnIHdydCBzdHJpY3QgbmVhciBmYXIgYTMyIHB0ciBfX0ZJTEVfXyBfX0xJTkVfXyBfX1NFQ1RfXyAgX19CSVRTX18gX19PVVRQVVRfRk9STUFUX18gX19EQVRFX18gX19USU1FX18gX19EQVRFX05VTV9fIF9fVElNRV9OVU1fXyBfX1VUQ19EQVRFX18gX19VVENfVElNRV9fIF9fVVRDX0RBVEVfTlVNX18gX19VVENfVElNRV9OVU1fXyAgX19QQVNTX18gc3RydWMgZW5kc3RydWMgaXN0cnVjIGF0IGllbmQgYWxpZ24gYWxpZ25iIHNlY3RhbGlnbiBkYXogbm9kYXogdXAgZG93biB6ZXJvIGRlZmF1bHQgb3B0aW9uIGFzc3VtZSBwdWJsaWMgIixidWlsdF9pbjoiYml0cyB1c2UxNiB1c2UzMiB1c2U2NCBkZWZhdWx0IHNlY3Rpb24gc2VnbWVudCBhYnNvbHV0ZSBleHRlcm4gZ2xvYmFsIGNvbW1vbiBjcHUgZmxvYXQgX191dGYxNl9fIF9fdXRmMTZsZV9fIF9fdXRmMTZiZV9fIF9fdXRmMzJfXyBfX3V0ZjMybGVfXyBfX3V0ZjMyYmVfXyBfX2Zsb2F0OF9fIF9fZmxvYXQxNl9fIF9fZmxvYXQzMl9fIF9fZmxvYXQ2NF9fIF9fZmxvYXQ4MG1fXyBfX2Zsb2F0ODBlX18gX19mbG9hdDEyOGxfXyBfX2Zsb2F0MTI4aF9fIF9fSW5maW5pdHlfXyBfX1FOYU5fXyBfX1NOYU5fXyBJbmYgTmFOIFFOYU4gU05hTiBmbG9hdDggZmxvYXQxNiBmbG9hdDMyIGZsb2F0NjQgZmxvYXQ4MG0gZmxvYXQ4MGUgZmxvYXQxMjhsIGZsb2F0MTI4aCBfX0ZMT0FUX0RBWl9fIF9fRkxPQVRfUk9VTkRfXyBfX0ZMT0FUX18ifSxjOlt7Y046ImNvbW1lbnQiLGI6IjsiLGU6IiQiLHI6MH0se2NOOiJudW1iZXIiLGI6IlxcYig/OihbMC05XVswLTlfXSopP1xcLlswLTlfXSooPzpbZUVdWystXT9bMC05X10rKT98KDBbWHhdKT9bMC05XVswLTlfXSpcXC4/WzAtOV9dKig/OltwUF0oPzpbKy1dP1swLTlfXSspPyk/KVxcYiIscjowfSx7Y046Im51bWJlciIsYjoiXFwkWzAtOV1bMC05QS1GYS1mXSoiLHI6MH0se2NOOiJudW1iZXIiLGI6IlxcYig/OlswLTlBLUZhLWZdWzAtOUEtRmEtZl9dKltIaFh4XXxbMC05XVswLTlfXSpbRGRUdF0/fFswLTddWzAtN19dKltRcU9vXXxbMC0xXVswLTFfXSpbQmJZeV0pXFxiIn0se2NOOiJudW1iZXIiLGI6IlxcYig/OjBbSGhYeF1bMC05QS1GYS1mX10rfDBbRGRUdF1bMC05X10rfDBbUXFPb11bMC03X10rfDBbQmJZeV1bMC0xX10rKVxcYiJ9LGUuUVNNLHtjTjoic3RyaW5nIixiOiInIixlOiJbXlxcXFxdJyIscjowfSx7Y046InN0cmluZyIsYjoiYCIsZToiW15cXFxcXWAiLHI6MH0se2NOOiJzdHJpbmciLGI6IlxcLltBLVphLXowLTldKyIscjowfSx7Y046ImxhYmVsIixiOiJeXFxzKltBLVphLXouXz9dW0EtWmEtejAtOV8kI0B+Lj9dKig6fFxccytsYWJlbCkiLHI6MH0se2NOOiJsYWJlbCIsYjoiXlxccyolJVtBLVphLXowLTlfJCNAfi4/XSo6IixyOjB9LHtjTjoiYXJndW1lbnQiLGI6IiVbMC05XSsiLHI6MH0se2NOOiJidWlsdF9pbiIsYjoiJSFTKyIscjowfV19Cn0pLGhsanMucmVnaXN0ZXJMYW5ndWFnZSgieGwiLGZ1bmN0aW9uKGUpe3ZhciB0PSJPYmplY3RMb2FkZXIgQW5pbWF0ZSBNb3ZpZUNyZWRpdHMgU2xpZGVzIEZpbHRlcnMgU2hhZGluZyBNYXRlcmlhbHMgTGVuc0ZsYXJlIE1hcHBpbmcgVkxDQXVkaW9WaWRlbyBTdGVyZW9EZWNvZGVyIFBvaW50Q2xvdWQgTmV0d29ya0FjY2VzcyBSZW1vdGVDb250cm9sIFJlZ0V4cCBDaHJvbWFLZXkgU25vd2ZhbGwgTm9kZUpTIFNwZWVjaCBDaGFydHMiLHI9e2tleXdvcmQ6ImlmIHRoZW4gZWxzZSBkbyB3aGlsZSB1bnRpbCBmb3IgbG9vcCBpbXBvcnQgd2l0aCBpcyBhcyB3aGVyZSB3aGVuIGJ5IGRhdGEgY29uc3RhbnQiLGxpdGVyYWw6InRydWUgZmFsc2UgbmlsIix0eXBlOiJpbnRlZ2VyIHJlYWwgdGV4dCBuYW1lIGJvb2xlYW4gc3ltYm9sIGluZml4IHByZWZpeCBwb3N0Zml4IGJsb2NrIHRyZWUiLGJ1aWx0X2luOiJpbiBtb2QgcmVtIGFuZCBvciB4b3Igbm90IGFicyBzaWduIGZsb29yIGNlaWwgc3FydCBzaW4gY29zIHRhbiBhc2luIGFjb3MgYXRhbiBleHAgZXhwbTEgbG9nIGxvZzIgbG9nMTAgbG9nMXAgcGkgYXQiLG1vZHVsZTp0LGlkOiJ0ZXh0X2xlbmd0aCB0ZXh0X3JhbmdlIHRleHRfZmluZCB0ZXh0X3JlcGxhY2UgY29udGFpbnMgcGFnZSBzbGlkZSBiYXNpY19zbGlkZSB0aXRsZV9zbGlkZSB0aXRsZSBzdWJ0aXRsZSBmYWRlX2luIGZhZGVfb3V0IGZhZGVfYXQgY2xlYXJfY29sb3IgY29sb3IgbGluZV9jb2xvciBsaW5lX3dpZHRoIHRleHR1cmVfd3JhcCB0ZXh0dXJlX3RyYW5zZm9ybSB0ZXh0dXJlIHNjYWxlXz94IHNjYWxlXz95IHNjYWxlXz96PyB0cmFuc2xhdGVfP3ggdHJhbnNsYXRlXz95IHRyYW5zbGF0ZV8/ej8gcm90YXRlXz94IHJvdGF0ZV8/eSByb3RhdGVfP3o/IHJlY3RhbmdsZSBjaXJjbGUgZWxsaXBzZSBzcGhlcmUgcGF0aCBsaW5lX3RvIG1vdmVfdG8gcXVhZF90byBjdXJ2ZV90byB0aGVtZSBiYWNrZ3JvdW5kIGNvbnRlbnRzIGxvY2FsbHkgdGltZSBtb3VzZV8/eCBtb3VzZV8/eSBtb3VzZV9idXR0b25zIn0sYT17Y046ImNvbnN0YW50IixiOiJbQS1aXVtBLVpfMC05XSsiLHI6MH0saT17Y046InZhcmlhYmxlIixiOiIoW0EtWl1bYS16XzAtOV0rKSsiLHI6MH0sbj17Y046ImlkIixiOiJbYS16XVthLXpfMC05XSsiLHI6MH0sbz17Y046InN0cmluZyIsYjonIicsZTonIicsaToiXFxuIn0scz17Y046InN0cmluZyIsYjoiJyIsZToiJyIsaToiXFxuIn0sbD17Y046InN0cmluZyIsYjoiPDwiLGU6Ij4+In0sYz17Y046Im51bWJlciIsYjoiWzAtOV0rI1swLTlBLVpfXSsoXFwuWzAtOS1BLVpfXSspPyM/KFtFZV1bKy1dP1swLTldKyk/IixyOjEwfSxwPXtjTjoiaW1wb3J0IixiSzoiaW1wb3J0IixlOiIkIixrOntrZXl3b3JkOiJpbXBvcnQiLG1vZHVsZTp0fSxyOjAsYzpbb119LGQ9e2NOOiJmdW5jdGlvbiIsYjoiW2Etel0uKi0+In07cmV0dXJue2FsaWFzZXM6WyJ0YW8iXSxsOi9bYS16QS1aXVthLXpBLVowLTlfP10qLyxrOnIsYzpbZS5DTENNLGUuQ0JDTSxvLHMsbCxkLHAsYSxpLG4sYyxlLk5NXX19KTs=`,
	"write/index.html": `PCFkb2N0eXBlIGh0bWw+CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04Ij4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IgogICAgICAgICAgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCB1c2VyLXNjYWxhYmxlPW5vLCBpbml0aWFsLXNjYWxlPTEuMCwgbWF4aW11bS1zY2FsZT0xLjAsIG1pbmltdW0tc2NhbGU9MS4wIj4KICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iaWU9ZWRnZSI+CiAgICA8dGl0bGU+RG9jdW1lbnQ8L3RpdGxlPgoKCgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgIGhyZWY9Ii93cml0ZS9obGpzL2luZGV4LmNzcyI+CiAgICA8c2NyaXB0IHNyYz0iL3dyaXRlL2hsanMvaW5kZXguanMiPjwvc2NyaXB0PgoKICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiICBocmVmPSIvd3JpdGUvd2lraWVkaXRiYXIvaW5kZXguY3NzIj4KICAgIDxzY3JpcHQgc3JjPSIvd3JpdGUvd2lraWVkaXRiYXIvaW5kZXguanMiPjwvc2NyaXB0PgoKICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiICBocmVmPSIvd3JpdGUvdGVycmFpbi9pbmRleC5jc3MiPgogICAgPHNjcmlwdCBzcmM9Ii93cml0ZS90ZXJyYWluL2luZGV4LmpzIj48L3NjcmlwdD4KCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAgaHJlZj0iL3dyaXRlL3RydW5rdGVtcGxhdGUvaW5kZXguY3NzIj4KICAgIDxzY3JpcHQgc3JjPSIvd3JpdGUvdHJ1bmt0ZW1wbGF0ZS9pbmRleC5qcyI+PC9zY3JpcHQ+CgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgIGhyZWY9Ii93cml0ZS93aWtpdGVybS9pbmRleC5jc3MiPgogICAgPHNjcmlwdCBzcmM9Ii93cml0ZS93aWtpdGVybS9pbmRleC5qcyI+PC9zY3JpcHQ+CgoKICAgIDxzdHlsZT4KICAgICAgICAubWF4LXdpZHRoIHsKICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAwcHg7CiAgICAgICAgICAgIG1hcmdpbjogMCBhdXRvOwogICAgICAgIH0KICAgIDwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CgogICAgPGRpdiBjbGFzcz0ibWF4LXdpZHRoIj4KICAgICAgICA8c2VjdGlvbiBkYXRhLWNvbXBvbmVudD0iV2lraVRlcm0iIGRhdGEtaGFzaD0iLXRlcm0taGFzaC0iPgoKICAgICAgICAgICAgPGhlYWRlciBjbGFzcz0idGl0bGUiPjxoMSBjb250ZW50ZWRpdGFibGU+VGVybSB0aXRsZTwvaDE+PC9oZWFkZXI+CgogICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0iY29udGVudCI+PC9hcnRpY2xlPgoKICAgICAgICAgICAgPGZvb3RlciBjbGFzcz0iZm9vdGVyIj48L2Zvb3Rlcj4KCiAgICAgICAgPC9zZWN0aW9uPgogICAgPC9kaXY+Cgo8L2JvZHk+CjwvaHRtbD4K`,
	"write/terrain/index.css": `W2NvbXBvbmVudD0iVGVycmFpbiJdIHsKICAvKiAgcGFkZGluZzogMTZweDsqLwogIC8qICBtYXJnaW46IDhweDsqLwogIG1pbi1oZWlnaHQ6IDYwMHB4OwogIG91dGxpbmU6IHNvbGlkIHNpbHZlciAwcHg7CiAgLypib3gtc2hhZG93OiAwIDAgNHB4IHJnYmEoMCwgMCwgMCwgMC4zKTsqLwp9CgpbY29tcG9uZW50PSJUZXJyYWluIl0gPiBwIHsKICBjb2xvcjogIzMzMzMzMzsKfQoKW2NvbXBvbmVudD0iVGVycmFpbiJdW2NvbnRlbnRFZGl0YWJsZV06aG92ZXIgPiBwIHsKICBwYWRkaW5nLWxlZnQ6IDE2cHg7CiAgbWFyZ2luLWxlZnQ6IC0xNnB4OwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FZQUFBQWY4LzloQUFBQXRrbEVRVlE0eSsyU01RckNZQXhHWDlKT1VoQ1hnbmdBc1hPTDROVFowVE00dVhxQkhzTFZHemgyZFM2Ri93NWVRYVhTcVkyVDRLQWQvRmUvTFlFOGtrZkFNd0pRVmRVa0NJS2RxcTZCT1RBMnN3NjRpOGdsVGRQbE4wQlkxL1ZDVmM4aU1uMDF5N0lNa3lUUk9JNUhVUlJkaHpZSVZmWHdQZ3hRRkVVSGRNRE5PVGQ0Z29ySXlzZUJBZzlmd01rTDBEVE4zc3lPWnRiL0JNanovSkZsMmJadDIxbmY5eHZmdjhBNVowUDFKd2Y0U3Z3RFBQTUVVWHMxbEJJdldLY0FBQUFBU1VWT1JLNUNZSUk9Jyk7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAycHggdG9wOwp9CgpbY29tcG9uZW50PSJUZXJyYWluIl0gYS5maWxlW3VwbG9hZGluZ10gewogIHBhZGRpbmctbGVmdDogMTZweDsKICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OwogIGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgY2VudGVyOwogIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2UvZ2lmO2Jhc2U2NCxSMGxHT0RsaEVBQVFBUElBQVAvLy94NlEvOG5rL2xpcy9oNlEvM1M2L3BESS9wN1AvaUgvQzA1RlZGTkRRVkJGTWk0d0F3RUFBQUFoL2hwRGNtVmhkR1ZrSUhkcGRHZ2dZV3BoZUd4dllXUXVhVzVtYndBaCtRUUpDZ0FBQUN3QUFBQUFFQUFRQUFBRE13aTYzUDR3eWtsckUyTUlPZ2dabkFkT21HWUpSYkV4d3JvVW1jRzJMbURFd25IUUxWc1lPZDJtQnprWURBZEthK2RJQUFBaCtRUUpDZ0FBQUN3QUFBQUFFQUFRQUFBRE5BaTYzUDVPakNFZ0c0UU11N0RtaWtSeFFsRlVZREVaSUdCTVJWc2FxSHdjdFhYZjdXRVlCNEFnMXhqaWhrTVpzaVVrS2hJQUlma0VDUW9BQUFBc0FBQUFBQkFBRUFBQUF6WUl1aklqSzhwQnlKRE1sRll2Qm9WakhBNzBHVTd4U1VKaG1LdHdIUEFLekxPOUhNYW9Ld0paN1JmOEFZUEREektwWkJxZnZ3UUFJZmtFQ1FvQUFBQXNBQUFBQUJBQUVBQUFBek1JdW1JbEs4b3locEhzbkZaZmhZdW1DWVVoREFReFJJZGhIQkdxUm9LdzBSOERZbEpkOHowZk1EZ3NHby9JcEhJNVRBQUFJZmtFQ1FvQUFBQXNBQUFBQUJBQUVBQUFBeklJdW5Jbkswcm5aQlR3R1BOTWdRd21kc05nWEdKVWxJV0V1UjVvV1VJcHo4cEFFQU1lNlR3Znd5WXNHby9JcEZLU0FBQWgrUVFKQ2dBQUFDd0FBQUFBRUFBUUFBQURNd2k2SU1LUU9SZmpkT2U4MnA0d0djY2M0Q0V1UXJhZHlsZXNvakVNQmdzVWMyRzdzRFgzbFFHQk1MQUppYnVmYlNsS0FBQWgrUVFKQ2dBQUFDd0FBQUFBRUFBUUFBQURNZ2k2M1A3d0NSSFpuRlZkbWdIdTJuRndsV0NJM1dHYzNUU1doVUZHeFRBVWtHQ2J0Z0VOQk1KQUVKc3hnTUxXenBFQUFDSDVCQWtLQUFBQUxBQUFBQUFRQUJBQUFBTXlDTHJjL2pES1NhdGxRdFNjS2RjZUNBakRJSTdIY1E0RU1UQ3B5ckN1VUJqQ1lSZ0hWdHFsQWlCMVloaUNubHNSa0FBQU93QUFBQUFBQUFBQUFBPT0nKTsKfQoKW2NvbXBvbmVudD0iVGVycmFpbiJdIGNvZGUgewogIGJvcmRlcjogc29saWQgI0UwRTBFMCAxcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI0ZBRkFGQTsKICBmb250LWZhbWlseTogbW9ub3NwYWNlOwogIGJvcmRlci1yYWRpdXM6IDJweDsKICBmb250LWZhbWlseTogQ29uc29sYXMsICJMaWJlcmF0aW9uIE1vbm8iLCBNZW5sbywgQ291cmllciwgJ1VidW50dSBNb25vJywgbW9ub3NwYWNlOwp9CgpbY29tcG9uZW50PSJUZXJyYWluIl0gPiBjb2RlIHsKICBmb250LXNpemU6IDEycHg7CiAgZGlzcGxheTogYmxvY2s7CiAgbWFyZ2luOiAycmVtIDFyZW07CiAgb3ZlcmZsb3cteDogYXV0bzsKICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7CiAgbWluLWhlaWdodDogMS41cmVtOwp9CgpbY29tcG9uZW50PSJUZXJyYWluIl0gPiBibG9ja3F1b3RlIHsKICBkaXNwbGF5OiBibG9jazsKICBwYWRkaW5nOiAxcmVtIDRyZW07CiAgbWFyZ2luOiAycmVtIDByZW07CiAgY29sb3I6IGdyYXk7CiAgZm9udC1zdHlsZTogb2JsaXF1ZTsKICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDd0FBQUFpQ0FZQUFBQWtqanR4QUFBQ3cwbEVRVlJZdzlXWVRXZ1RRUlRILzI5U1Fnc2llTEJOaitvbG9sNUVrSXBDdmZoMWtCWXY5aWlTekNZSUVrSHhHQVN4dEJXTWgyUTM0aVhnd1lQZVJDcDRWSW9nb2w2c0YvWGlSb3BLL1Vnc21oa3YyYkRrcTVPZFY4RzVMTXk4ZmIvL2V6dGZiNEgvckZHdmdYSzVQS2FVT2cxZ0dzQTJJaG9Ec0txMWZnWGdUclZhcmVUemVXVURqOExvRUp6UDV5bVJTR1NKYUJiQXBsNHdyZlV6SWNUSmREcjlhVkNoTmd4cWR6UStQbjRid0JrVHNOYjZEUkh0bDFKK0cwU3NEVU9FQnhPSnhMeXBJd0Fnb2lTQUc0TmsxNWJSeW5DcFZKb1FRanpwTjY5N0pRSEFUaW5sOG5xR0hBd1JpbVFoZ3FNZzZMT0cyYkptQ0FCd1hYY1BFUjJJdXRxMTFwUHIyWEF4UkRQeVU1YmI0dzZEN0xJd1JGUDloS1d6elFZWlltRUVjemhwZGZvUS9UQXdZMkVFZ3JmWU9OTmF2elV3WTJFRWdrY3NvMzlzWU1iQ0NBVC90SWo4RDRCYkJxWXNqR0NYK0dnUitWVXA1VHNET3haR3NFc3NSNHpjODMzL2lxRXRDMk9vK1h3S1lNcmc1UWFBRlFCTEFGekhjUllIWUxNd2hwb3Bmd2hncm9lUGpPLzdaZHU3THhlRFFrZm5heUxhM1c0Z2hCaEpwVksvT0tvRkRrYjRlbm16bTBHajBSaGxySENzR1MzQjlYcTlBdUJERjV1RFhHbzVHQzNCdVZ4dVRXdDlxY3ZjbStFU3pNSG91SnQ2bm5lL1dSU0dWKzQreDNHZWN3bTNZWWd1ZlNrQTc5c0wzRUtoRUdlY3k1RVpIWUtsbEorVlVsTmE2OVhRSjlzN1BEdzh4NlhXaGlHNmJvcVp6RXNBeDdUVzMwUGQ1ejNQdThBbE9pcEQ5QnB3SEdlSmlJNEQrQnJxWHVBVUhZV3hia0hvdW00U3dBTWkyaDdxbnZkOS83THQ2UmVGWVZUQkZvdkZyYkZZN0I2QVE2RlYvVWdJTVpOT3A3OXdpRFpsQ0JObjJXeDJKUjZQSHdad3JmbVBBRVIwUkNuMXd2TzhTUTdCcGd5SzhQbU9FbEVGd0dqb0o4ZDFLZVZGcnJuZGp5RWlMSlJGcGRRdUFIZERRZjltM0tQN01zZ3lFOU5FZEs1V3E1M0k1WEpyMklEMkx4Z2IydjRDcDh1UTRGNTMxZDRBQUFBQVNVVk9SSzVDWUlJPScpOwp9CgpbY29tcG9uZW50PSJUZXJyYWluIl0gdGFibGUgewogIG1hcmdpbjogYXV0bzsKICBtaW4td2lkdGg6IDIwcmVtOwogIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgYm9yZGVyLXNwYWNpbmc6IDA7CiAgbWF4LXdpZHRoOiA5OSU7Cn0KCltjb21wb25lbnQ9IlRlcnJhaW4iXSB0ZCB7CiAgYm9yZGVyOiBzb2xpZCBncmF5IDFweDsKfQoKW2NvbXBvbmVudD0iVGVycmFpbiJdID4gaDI6aG92ZXI6YmVmb3JlLApbY29tcG9uZW50PSJUZXJyYWluIl0gPiBoMzpob3ZlcjpiZWZvcmUsCltjb21wb25lbnQ9IlRlcnJhaW4iXSA+IGg0OmhvdmVyOmJlZm9yZSwKW2NvbXBvbmVudD0iVGVycmFpbiJdID4gaDU6aG92ZXI6YmVmb3JlLApbY29tcG9uZW50PSJUZXJyYWluIl0gPiBoNjpob3ZlcjpiZWZvcmUgewogIGNvbnRlbnQ6ICcnOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBtYXJnaW4tbGVmdDogLTYwcHg7CiAgZm9udC1zaXplOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBub3JtYWw7CiAgLyogIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDsKICBib3JkZXI6IHNvbGlkIHdoaXRlOyovCgogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgY29sb3I6IGdyYXk7Cn0KCltjb21wb25lbnQ9IlRlcnJhaW4iXSA+IGgyOmhvdmVyOmJlZm9yZSB7CiAgY29udGVudDogJ0xldmVsIDEnOwp9CgpbY29tcG9uZW50PSJUZXJyYWluIl0gPiBoMzpob3ZlcjpiZWZvcmUgewogIGNvbnRlbnQ6ICdMZXZlbCAyJzsKfQoKW2NvbXBvbmVudD0iVGVycmFpbiJdID4gaDQ6aG92ZXI6YmVmb3JlIHsKICBjb250ZW50OiAnTGV2ZWwgMyc7Cn0KCltjb21wb25lbnQ9IlRlcnJhaW4iXSA+IGg1OmhvdmVyOmJlZm9yZSB7CiAgY29udGVudDogJ0xldmVsIDQnOwp9CgpbY29tcG9uZW50PSJUZXJyYWluIl0gPiBoNjpob3ZlcjpiZWZvcmUgewogIGNvbnRlbnQ6ICdMZXZlbCA1JzsKfQoKW2NvbXBvbmVudD0iVGVycmFpbiJdIGZpZ3VyZSwKW2NvbXBvbmVudD0iVGVycmFpbiJdIGZpZ3VyZSBpbWcsCltjb21wb25lbnQ9IlRlcnJhaW4iXSBmaWd1cmUgZmlnY2FwdGlvbiB7CiAgZGlzcGxheTogYmxvY2s7CiAgd2lkdGg6IDIwcmVtOwogIG1heC13aWR0aDogMTAwJTsKfQoKW2NvbXBvbmVudD0iVGVycmFpbiJdIGZpZ3VyZSB7CiAgbWFyZ2luOiAycmVtIGF1dG87Cn0KCltjb21wb25lbnQ9IlRlcnJhaW4iXSBmaWd1cmUgZmlnY2FwdGlvbiB7CiAgbWFyZ2luLXRvcDogMC40cmVtOwogIGJvcmRlci10b3A6IHNvbGlkIHNpbHZlciAxcHg7CiAgZm9udC1zaXplOiAwLjhyZW07CiAgY29sb3I6IGdyYXk7Cn0K`,
	"write/terrain/index.js": ``,
	"write/trunktemplate/index.css": ``,
	"write/trunktemplate/index.js": `CihmdW5jdGlvbihuYW1lc3BhY2UpewoKICAgIGZ1bmN0aW9uIGV4ZWNBbGwocmVnZXgsIHRleHQpIHsKICAgICAgICB2YXIgcmVzdWx0ID0ge307CgogICAgICAgIHdoaWxlICgobWF0Y2ggPSByZWdleC5leGVjKHRleHQpKSAhPT0gbnVsbCkgewogICAgICAgICAgICByZXN1bHRbbWF0Y2hbMV1dID0gbWF0Y2guaW5kZXg7CiAgICAgICAgfQogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9CgogICAgdmFyIFRydW5rVGVtcGxhdGUgPSBmdW5jdGlvbihkb20pIHsKICAgICAgICB0aGlzLml0ZW1zID0ge307CiAgICAgICAgdGhpcy5pbnNwZWN0KGRvbSk7CiAgICB9CgogICAgVHJ1bmtUZW1wbGF0ZS5wcm90b3R5cGUucGF0dGVybiA9IC97eyhbXn1dKyl9fS9tZzsKCiAgICBUcnVua1RlbXBsYXRlLnByb3RvdHlwZS5ldmFsdWF0ZSA9IGZ1bmN0aW9uKHR5cGUsIHRleHQsIG9iamVjdCkgewogICAgICAgIHZhciBtYXRjaGVzID0gZXhlY0FsbCh0aGlzLnBhdHRlcm4sIHRleHQpOwoKICAgICAgICBmb3IgKHZhciBrIGluIG1hdGNoZXMpIHsKICAgICAgICAgICAgaWYgKCEoayBpbiB0aGlzLml0ZW1zKSkgewogICAgICAgICAgICAgICAgdGhpcy5pdGVtc1trXSA9IHsKICAgICAgICAgICAgICAgICAgICAncGxhY2VzJzogW10sCiAgICAgICAgICAgICAgICAgICAgJ3ZhbHVlJzogJycsCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuaXRlbXNba10ucGxhY2VzLnB1c2goewogICAgICAgICAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICAgICAgICAgIG9iamVjdDogb2JqZWN0LAogICAgICAgICAgICAgICAgdGV4dDogdGV4dAogICAgICAgICAgICB9KTsKICAgICAgICB9CiAgICB9OwoKICAgIFRydW5rVGVtcGxhdGUucHJvdG90eXBlLmluc3BlY3QgPSBmdW5jdGlvbihkb20pIHsKICAgICAgICAvLyBJbnNwZWN0IGF0dHJpYnV0ZXMKICAgICAgICB2YXIgYXR0cmlidXRlcyA9IGRvbS5hdHRyaWJ1dGVzOwogICAgICAgIGZvciAodmFyIGk9MDsgaTxhdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBhdHRyaWJ1dGUgPSBhdHRyaWJ1dGVzW2ldOwogICAgICAgICAgICB0aGlzLmV2YWx1YXRlKCdhdHRyaWJ1dGUnLCBhdHRyaWJ1dGUudmFsdWUsIGF0dHJpYnV0ZSk7CiAgICAgICAgfQoKICAgICAgICB2YXIgY2hpbGROb2RlcyA9IGRvbS5jaGlsZE5vZGVzOwogICAgICAgIGZvciAodmFyIGk9MDsgaTxjaGlsZE5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBjaGlsZE5vZGUgPSBjaGlsZE5vZGVzW2ldOwogICAgICAgICAgICB2YXIgbm9kZVR5cGUgPSBjaGlsZE5vZGUubm9kZVR5cGU7CiAgICAgICAgICAgIGlmICgxID09IG5vZGVUeXBlKSB7CiAgICAgICAgICAgICAgICB0aGlzLmluc3BlY3QoY2hpbGROb2Rlc1tpXSk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoMyA9PSBub2RlVHlwZSkgewogICAgICAgICAgICAgICAgdGhpcy5ldmFsdWF0ZSgndGV4dCcsIGNoaWxkTm9kZS50ZXh0Q29udGVudCwgY2hpbGROb2RlKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICB9OwoKICAgIFRydW5rVGVtcGxhdGUucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsKICAgICAgICBpZiAoa2V5IGluIHRoaXMuaXRlbXMpIHsKICAgICAgICAgICAgdmFyIGl0ZW0gPSB0aGlzLml0ZW1zW2tleV07CiAgICAgICAgICAgIGl0ZW0udmFsdWUgPSB2YWx1ZTsKICAgICAgICAgICAgdmFyIHBsYWNlcyA9IGl0ZW0ucGxhY2VzOwogICAgICAgICAgICBmb3IgKHZhciBpIGluIHBsYWNlcykgewogICAgICAgICAgICAgICAgdmFyIHBsYWNlID0gcGxhY2VzW2ldOwogICAgICAgICAgICAgICAgLy8gUmVwbGFjZSBhbGwgbWF0Y2hlcwogICAgICAgICAgICAgICAgdmFyIG1hdGNoZXMgPSBleGVjQWxsKHRoaXMucGF0dGVybiwgcGxhY2UudGV4dCk7CiAgICAgICAgICAgICAgICB2YXIgdGV4dCA9IHBsYWNlLnRleHQ7CiAgICAgICAgICAgICAgICBmb3IgKHZhciB3b3JkIGluIG1hdGNoZXMpIHsKICAgICAgICAgICAgICAgICAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKCd7eycrd29yZCsnfX0nLCB0aGlzLml0ZW1zW3dvcmRdLnZhbHVlKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmICgndGV4dCcgPT0gcGxhY2UudHlwZSkgewogICAgICAgICAgICAgICAgICAgIHBsYWNlLm9iamVjdC50ZXh0Q29udGVudCA9IHRleHQ7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCdhdHRyaWJ1dGUnID09IHBsYWNlLnR5cGUpIHsKICAgICAgICAgICAgICAgICAgICBwbGFjZS5vYmplY3QudmFsdWUgPSB0ZXh0OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgIH0KICAgICAgICByZXR1cm4gdmFsdWU7CiAgICB9OwoKCgogICAgbmFtZXNwYWNlLlRydW5rVGVtcGxhdGUgPSBUcnVua1RlbXBsYXRlOwoKfSkod2luZG93KTsK`,
	"write/wikieditbar/index.css": `W2RhdGEtY29tcG9uZW50PSJXaWtpRWRpdEJhciJdIHsKICBtYXJnaW4tYm90dG9tOiAxcmVtOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gI2JhciB7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgcGFkZGluZzogMC44cmVtOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgb3ZlcmZsb3cteDogYXV0bzsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgei1pbmRleDogOTk5OTk5OwogIGxlZnQ6IDA7CiAgcmlnaHQ6IDA7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXS5maXhlZCAjYmFyIHsKICB0b3A6IDA7CiAgcG9zaXRpb246IGZpeGVkOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0uc2hhZG93ZWQgI2JhciB7CiAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjVzIGVhc2U7CiAgYm94LXNoYWRvdzogMCAwIDFyZW0gcmdiYSgwLDAsMCwwLjQpOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0uZml4ZWQgI2JhciwKW2RhdGEtY29tcG9uZW50PSJXaWtpRWRpdEJhciJdLnNoYWRvd2VkICNiYXIgewogIHotaW5kZXg6IDk5OTk5OTk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSAjc3BhY2VyIHsKICBoZWlnaHQ6IDRyZW07Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSAuZ3JvdXAgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBwYWRkaW5nLXJpZ2h0OiAycmVtOwogIGhlaWdodDogMi40cmVtOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24gewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBib3JkZXI6IG5vbmU7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyOwogIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjsKICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0OwogIHdpZHRoOiAyLjRyZW07CiAgaGVpZ2h0OiAyLjRyZW07CiAgY3Vyc29yOiBwb2ludGVyOwogIHZlcnRpY2FsLWFsaWduOiB0b3A7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXVtkYXRhLWFtX2lfZWRpdGluZz0iZmFsc2UiXSB7CiAgZGlzcGxheTogbm9uZTsKfQoKW2RhdGEtY29tcG9uZW50PSJXaWtpRWRpdEJhciJdIGJ1dHRvbjpmb2N1cyB7CiAgb3V0bGluZTogbm9uZTsKfQoKW2RhdGEtY29tcG9uZW50PSJXaWtpRWRpdEJhciJdIGJ1dHRvbjpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogY29ybmZsb3dlcmJsdWU7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jYm9sZCB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFBQVhOU1IwSUFyczRjNlFBQUFBbHdTRmx6QUFBTEV3QUFDeE1CQUpxY0dBQUFBQWQwU1UxRkI5c0tIZ2NETlRhSy95UUFBQUFaZEVWWWRFTnZiVzFsYm5RQVEzSmxZWFJsWkNCM2FYUm9JRWRKVFZCWGdRNFhBQUFBKzBsRVFWUll3KzJXTVdwQ1FSUkZqNTl2ckNSTkd1c1VBZHRMSUJ0SW5RVmtCemFScEFnR0cwR1FGSUdQTzBqaERpelNwRTNscTFMRkhkZ0dSREVvYVdiQVJ2SVJtVUV5RndiZWc4ZmxjTjh3RENRbC9YZFZ5Z3hKeW9IYzkyYTIzREZYMi9KY205blBYOTVaU2RBdXNQQkgwdVdPdWZldHVVRVo0MnpQNUlhU3NrT3NZRitUSytBMkpnREFzNlI2VElBRzhCUUQ0QlA0Y3ZXOXBQUFFBQ3VnN2VvVDRDWDRDc3pzRFJpNzlrYlNkWXc3OEFENGg2YVFWQTBLWUdaVG9IQnRFMmlGVGdDZ0Q4eGMzUVBPZ2dLWTJUZlFjZTBwY0JFNkFZQlhZQkxqRXZvVU5zQmROQUFIOFFHTW9nRTRQUUx6OU1WS1NrbzZPdjBDNWRJMVpqRDRIMVVBQUFBQVNVVk9SSzVDWUlJPScpOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gYnV0dG9uI2l0YWxpYyB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFBQVhOU1IwSUFyczRjNlFBQUFBZDBTVTFGQjlzS0hnY0VOQTdNV1hVQUFBRTZTVVJCVkZqRDdaVzlTZ05SRUlXL3JGRUxDMjBzUkI5QUxKMlF2SUpGS2l1ckpHaVJwN0FUYk1RbnNCSWJzUkVzOVFGVU9GcWxFWHdEc2ZBSFVjVFlEREp1WWJHYlhRWDN3TUtaMloxN0R6UG43b1VLRmY0N2Fsa0x6V3dNR1Bkd0tPazF5enBKRHZGOTRNV2ZnNnlMNUJIUURQenl0d1ZjbENyQXpLYUJSUTgvZ0t1c0F1b1o2eHJCd0FOSlR5NHNBWGFBVlg5M0RYUWtQWTVhUUN2ZGZqT3JBM3RBMS9PblFQZW56Zk40NEpzQnpXd1NPQXliN3dOdFNROGo5NENaMVZJQ0JzQkphUHMyMEpQMFZwUUhGb0M1WU1EZE1KSk5TVnRGbjRKbXFqNzZZYWFNWTloS3hjK0JkOHhzb3N3T0NGZ0czajJlQmRxRkNmQUxxQkZTYTVKdWdMT1EyeWl5QTB2QWxQTTc0TmI1VWZobXhjem1peElRMjM4dWFlajhPSXdoQVhwbENQaTZnQ1RkcDhhdzdyL2xDaFVxVlBqNytBVDBkRXhVdUlRV0pRQUFBQUJKUlU1RXJrSmdnZz09Jyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jdW5kZXJsaW5lIHsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUFBWE5TUjBJQXJzNGM2UUFBQUFkMFNVMUZCOXNLSGdjRkY3V3dHVVlBQUFGM1NVUkJWRmpEN2RXOWFwVkJFQWJneDNnMDRrOGxCbHdUTlNLSVdLNW9ZMm1hZ0dCaDZSWFlhdWNOS0Y1QmlwU2lvSlVncEFnRS83Q1FVVlRRTkFFandoWmFxWWlLZUd4VytBZ0d6am54cy9GN3U5bVpmZC9aMlpsZE9uVG8wT0YveCthTmJNNDVqNmVVeGtvcFAwZmwyRFNDNkJRdVl4YVQ2T010Rm5BMUl0NjBsa0RPZVQrZVl2YzZJWjl3TWlKZUQ4bzVObVFCcmpURW4rQWlMdUJCWGR1RnVUWXJzSUpEMVR3VkVZL3EramFzWWdlK1kyOUVmR3NqZ1dVY3FlWUhYTWRkM0I5VWNLTUpYTUsxUDdpK1lCRTNjRHNpZnJReWhpbWx4M2lGQ1J4b0hHQkxyY3c1SEU4cDNTeWw5RnNadzBZMUpuQUdaekdEOFlaN0ppSVdCK0hwRFNGNHVJckJha1Rjd2p6bWM4NTdzSVJqMVg5d1VON2VrQWYvZmYrZmM4N3ZjYTl5VEdGbkkrNTVHd21zMUVZN1hjV1c4TFcrSlZzYmNRL3g3SzgzWVNsRlN1a09wbkcwQ3ZmV2NDemdmRVI4Yk8wdnFQMHdpUlBZaCsxNGh4Y1I4YksxZHlEbjNCK0dPQ0pHbnJBT0hUcjhVL3dDT2VwaVVzNUxaMEVBQUFBQVNVVk9SSzVDWUlJPScpOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gYnV0dG9uI3N0cmlrZSB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFBQVhOU1IwSUFyczRjNlFBQUFKZEpSRUZVV01OallCZ0ZvMkFVVUFDTWpZMUZqWTJOVjFGaUJoTUZsb2N5TURCY1pXQmdDS1hFQVN3VTZGMUZqVkJrR3Vob1pDUWo2UC9qa2p0NzlpemprQXVCb1JjRjJLS0NuS0FmVWlId241Ym1qMFlCVlJ4Z2JHdzhJQ0h3RjRtdGFHeHNMRTF2Qjd4SFl0OWxZR0Rvb3JjRGpxTHg5ZWhkRytZeU1EQndNREF3MkRNd01QeGdZR0M0UE5wQ0dnV2pZQlFNU1FBQUREVWFDT3MvdnkwQUFBQUFTVVZPUks1Q1lJST0nKTsKfQoKW2RhdGEtY29tcG9uZW50PSJXaWtpRWRpdEJhciJdIGJ1dHRvbiNyZW1vdmUtZm9ybWF0IHsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUFBWE5TUjBJQXJzNGM2UUFBQVRCSlJFRlVXTVB0bHIxS1EwRVFoVDhsWW1GQUc2MzhLVklKc2ZBQlJJVURpcERLZ0JCSVl5UDZBaFlXRnZZK2dGaGJDQXFDRU5FUjBxUlVpWVdQSUFqV2lqOHhOaHRZNUFwR3N2YzJlNnFaTTd2d01RdXpBMUZSVVJtcjc2OEh6V3dUV0hQcGdhU2pYZ0RrdWpoYkFPWmRmTkdyRHZSbi9RU1pBK1QrZTlITWhvRjFZQlo0QWE2QkUwbGZhWFJnQm5nQTlvRXFzQUVjQTNVekcwa0RvQUtNQWpYZ0VtZzVmdzQ0VEFQZ0ExaVV0Q0pwQ1NnQmJWZGJOYlBwMEFCbmtocWRSRklOcUh0MWhRWm9KbmgzWGp3Vkd1QXp3WHYxNG9IUUFKTUozcGdYUDRjR0tKblprRGNUQm9GbHIzNGJlaENOQStkbXR1TmF2d3RNdU5vVGNCVWE0QVpZQUJvLy9EYXdKZWs5OUJOc0EzdHVCSGYwQ0pRbG5RYlpCMzc1RC9KQUVYZ0Q3aVcxNG9vVkZSWFZyYjRCeHk1RU5jREFETGNBQUFBQVNVVk9SSzVDWUlJPScpOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gYnV0dG9uI29yZGVyZWQtbGlzdCB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFBQVhOU1IwSUFyczRjNlFBQUFuNUpSRUZVV01QdDFrMklsVlVZQi9EZjVIVWN2d2J6QTBMRUxQckFGcVp1MGtVSjhxZ29Xb3VvYkRTQ0lCQmRLTGdSQ2wwSWlTQXFXTzRDRjFxTG9ISmpGQSs2RWFJQ3RTaFJoSFNsSmFPRm9xWW00K1pjZUJudXZjNGRKOUdZQjE3ZWwvOTUzdk44blBQL244T3dEZHREYnFQeEZhYi9Wd0U2V293OWpmMlloeGR3Q2pKeklyb2k0bnhtVHNkZnFLRVRFM0FySXM0VzN3bVlpVjhqNG1xaklJKzFTR0FLUHNEMWZ2aDcyRm0rUDhNU3ZJc2ZzUVcvWmVic3pKeUwwOWlNMDVuNWJMc0ovSUFqYlhUelpFVDA0RGlleDFyc2k0aWwrQlpyMmsyZ21kMHA3WWFKRmZ4YWVkOHVTL3NQeGhkc2ZJTk9EanFCbzFpWW1VY3dzb1hmYmtSbW5zRXorSGpJZG01bWpzN016Z0g0ZFdUbTQ0K3NCcnlPaTdpRWRVMHEzSmFaaSs4blNLM0YyQzRzTDV2cGUzeFNDVHdEb3pDblVLMGg1ek56SnNiaWVFVGNhVmVJNmpZWDI3R29UTHFrOFA5d3dUYmdGM3lEWTNnUkMvQWFYc1ZsM0lpSXR3ZkRnaWV4RGFzcldBLzJSc1FiOWVxYmNMNExUK0VQN0drV29GVUNQZVhIVmZpemd0OUVkMloybFBacXd2bEQyRlE2Y0RnemErMHVRUzhtOWZmTnpObjREdWN4Qmg4VmJUaFVmSzRWZVY1V3BMd1g1eUppNVZEcVFHZG1kdDJMODhWdjNDT3JBenZ3ZDNtMlZLb2FsWm5MSHNSOW9HNHY0MkQ5NE1uTWpVV2tWcUN2bkFmVDhET21ZbkxoZmQ5QWRLQjJqK0Nyc0ErZlZyQ2xlQTZMQzAwMzR2ZHkyR3d0MUx5VW1jZXFPb0JCNmNBQnpNSTdGV3cvVGtURTUvVjdRMFM4aERkeG9qRGtMVHh4dnpwd3RyUzJGMWNxZUY4RHVpcFZYaWhKZklndkI2SURyWlpnZlpuc050NnY0T2N3UHpNMzlQUGZpUy93Q240cWxkZDE0T3VJK0hjb2RhQTdNMGMwd0d1WjJmMi8wWUZoZXlCMkY1TzI1Z3BjNlM0bEFBQUFBRWxGVGtTdVFtQ0MnKTsKfQoKW2RhdGEtY29tcG9uZW50PSJXaWtpRWRpdEJhciJdIGJ1dHRvbiN1bm9yZGVyZWQtbGlzdCB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFBQVhOU1IwSUFyczRjNlFBQUFqQkpSRUZVV01QdDFrMkkxbFVVQnZEZjFOczRmVGlZdElpUU1xVENsZG9zeWsxdERzck1JaGVobFFpQnEwZ1hnUnVoMElWUU93bUsxaTJrZ2tCY1RTUVB1bkdoeWZnQkZraWFycXlGMWlMVUxHWGFYR0dROXgxOXAzYzIwNXpOdWY5ekQrZnIzdWU1ZnhabFVmN3ZNdFJyWTJ4c2JCVXU0RGkyVFUxTlhZUWt5ekZTVlZlU1BJcy8wTUV3bHVIdnFyclVmSmRoTmM1VjFaL2Q4ancwUzNFSG1uNTF4aHEyWTM5YmY0V05lQmMvWUM5K1RMSTJ5Y3M0anowNG4rU0ZmZ3ZvVjM2cXFxMDRqWmZ3UHI2c3FuRjhqL2Y2TFdCYjA4ZG5yT0ZPR3pjc24yRy8zdlEvN1dqL3d0Sm1XNG9iM1pKMGVtVnZaOTd0amh6RDNpUkg4Y2dzRFh5S3lTUS90K0oyREd6V1NSNU5NdndBZmtOSm5seTRHRTd5U1pJTi95VkdwMThlYUlsWFlnbldOYWgxeFh5UzFYZ2NwNnZxVGw4RmRPR0I5UzNveG9iL0kyM3ZtNGI1NzNBS2E1SzhqazE0QTcvakp0NFpGQTlzeFJkVnRmbHU5ejB3UDRMbjhScys2eFZzTGp4d0M2TkpodHA0OWNEOEpIYTNDUnhKMHVuckxaamw0cTNGWVZ6QlkvaTRjY05raTNlOTBmTUVQc1JWWEs2cXR3ZDUrNGVUak53UDg4M3ZpUVdIL1NWSkpnWVZieTQ4c0JOdkpqbUI2Zlllck1CWlBJT25HdTZuNTRVSE1JNFhzUUhQWVJkK3dlZlkxNkI1TGNtcCtlS0JBemhUVlYrMzd4TlY5UXEyNEV4RHlGdDRlcjU0WVBvZXY2dE4zOFN2cllpUGNQQkJlR0F1L3dPWHNUN0pCL2ZZOStOYnZJYVRyZk83UEhDb3FtNFBFZ21qU1I3dVl1OGtHVjNZUExBb2c1Wi9BVWlENy90TzZoamtBQUFBQUVsRlRrU3VRbUNDJyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jc3VwZXJzY3JpcHQgewogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDQUFBQUFnQ0FZQUFBQnplbnIwQUFBQUFYTlNSMElBcnM0YzZRQUFBZHBKUkVGVVdNUHQxazJJamxFVUIvRGZqUGVkVU1KQ0doc0xDeCtodUxKQVVlNWlaR1ZEallXc0tLTmtaeU1mSmRuWVlpRUxRcE95c2NEZGtqSlhpb1dGalZMamE1U20wV1NZc2JsdlBVMG12RFB2U0wzLzFmbWZlN3Jubkh1ZS83MFBiYlR4ajlIUmlrMURDRXV4Rzh2eEE0OXp6dWxYc1owdGFtd3JUbUVuZXZFd2hIQngxbzQxaE5BNWlWOEtJWXlGRUJiT3lnZ3FpV3Zvd2piY3g0YWM4L05xVEsxRmlYZmdQRFpoRHI1TWxhK3pCY21YNEI1R3NCMHJjWEtxK0Q4NmdaVFNGcXd2ZEFMWFk0d2paYTJHZzZWVC9mMzlIUU1EQS9OeE51ZjhxQlMxYkZvRjRHM3BhbEhocTNHczJDZHdwdGhEOVhxOUIrTTRGRUlZeEdkMFQvc2VTQ250dzYxQ3g3RUZvM2lLZXZIdmlUSGVEU0gwNFJ3V1ZMWVl4ZWFjODR1bVZaQlN1b1lEaGI0c2hUUkdjem5HZUxqeUxkVExSVlFycC9BeDV6elI3QWdhT0Zva3RRSnJLLzVYT0Y0TnpEbVA0Zlh2TnZ3ckZjUVloN0VmM3l2dWIraU5NWDV0UmpYTnlQQU5oaWY1SnBxVmJUTUZYTVhpQ3UvQ2paVFMzSllYa0ZJNmdsMkZ2c1A3WXEvQmhaWSt4eW1sVlhpR2VRM0psUWJ1Vk1iUUUyTjhNT01GcEpUcWVJS054WFV6eHRoYjFtNWpiL0VQWWwyTWNXaW1SM0M2a3Z4RGtXTURmZmhVN0c1Y2FmL250ZEZHRy84VmZnTGdGM3VqekVIYlpBQUFBQUJKUlU1RXJrSmdnZz09Jyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jc3Vic2NyaXB0IHsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUFBWE5TUjBJQXJzNGM2UUFBQWFkSlJFRlVXTVB0MWsySWpWRVlCL0NmY1Vlc2tDSlpLZVdqR1F0dk5yT3dPZ3ZLeG1Lb3NaQ2Q4aEUyTjB1eXNyUWJDMW1ZZktXa2JMaGxLenF6b213c2xLTEpMRFJJNGw2YjU5YmJGTzU3UDJMeC91dXQ1K09jbnY5N3p2OTVPdFNvVWFOR2pYK01GYjBzYXJWYVU5Z2RiZ2MzVTBwZkl0ZkFjYXlNL0h4SzZYbXZCQm85cm51SFIxZ1gvazZjRGZzQ0xvVzlpTW1objBEODZSSGNEcmVOS1h6REM0eEgvRkJLNmNGSUNBU0pHemdXN3NzZzByMmEyWlRTaWFvYUdLdTQvalRlaEQxUkt2NGE1L3NSWVNVQ0thVWxITVdQVXZnN1psSktYMGRPSVBBV1M4dGluWDdic0I4QzE3Rys1Sy9DWEt2Vld0MFBnVVpGRVo3RWdYQS9oSWczWVJldTRFeFJGQnV3ZDluV2RzNzU4YUJ0dUFQeldOTnR1VGpCKzZWcjJOOXNOajlodHJSMUczN21uTmNPTWduSDhReDdJblFycFRRVHVUczRIUEgzbUV3cExVSlJGUHZ3Qk5NNTU0ZURhT0JpcWZoQ3RHTVhwL0F4N00yNEZzVzM0QzR1LzY1NDVVSFVLNHFpR01OVGZNYkJuSE5uS0NLc2dIUFlqb2svRlIvSkNSUkZzUld2ME1TOVVtb2g1OXdleGh6NEc2YWpVNjZHS0x2Znh2cjFVK08veEM4SWxISDVBN211ZEFBQUFBQkpSVTVFcmtKZ2dnPT0nKTsKfQoKW2RhdGEtY29tcG9uZW50PSJXaWtpRWRpdEJhciJdIGJ1dHRvbiNjb2RlIHsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUI3VWxFUVZSWXcrMld2Mi9UUUJpR242K09wVmlCa2laMFlvblVJWklITDZkazZWaFkrUU5ncjhTR0JFSVZrU294OEJmUUZZa2RDZEdaSlhQU2s3eVFQUlFoVktGS2hTRXA1UHl4SEtoVURYRitNT0YzT2x2dmQzNTg5OTFyUTZGQy83c2tqNm5WYXRXY2M4OUY1TGFxM2hLUnlGcjdSNjB4UmxWMUJId0MzZ1ZCME9uMys2ZXo1aTdsQVhET3ZSQ1Jld0FpMDVsRkpBSzJnQzNuM0Rwd2Y5YmNhN21XU2VTT0h6NEFibHgrZXdCcnJRUkJzSzZxdTVkcWxnY0FiZ0tNUnFPWDF0cXYwMHk5WHUvYmVEeCs1Uy9ycXdRUWdNRmc4R09XOFlKbmJTVUE3WGI3dWgrZXo5SGMzd0dhemVhMVpRQWtTWkxOeVdUeUZFQlZCM21mcnFydkFTcVZTaWRKa3MyL25iYXBBTWFZTEF6REV4SFpBNDZ5TE52TkMrQzlSeUt5RjRiaGlURW1XNllIRkRncmxVcWY4d0o0NzVtdlhXd0xyTFdCYzY2aHFtK0FuU3pMRHVaWWdRTmdCM2p0bkd0WWE0TkZWaUJMMDNRNG1Vd2UrK3Z0T1pwdzJ3ZllrelJOaDhEaVcxQ3IxWTU5c05SeTU3dElIYUJhclg1YytoaDJ1MTAzWjJiOHpvMEx0VXNIMFQ5VFhvQnpnRGlPTjJZWmYzbFVkYnhLZ0E4QTVYTDVrVEdtUGkxWTRqamVpS0xvb2UrRDQxVUNIUHBKTzhDWHE0TEZHS05SRkowQysvN1cyMXlaa1JOZ1gxV2RpTnhWMVliLzdsOFZ3U05nQ0J5S3lMUGlmNjlRb1VKNTlCUGVGSzZSZmNFSlVBQUFBQUJKUlU1RXJrSmdnZz09Jyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jcXVvdGVzIHsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUJWMGxFUVZSWXcrMlZQVXRETVJTRzMvZTJmcXg2cHdiQk96dW1nK0plVUNmL2dWdkJSUkNFYnY0QzkwNkNJRGpwcnJpNXB5MVVjTkNsaUtScnV3aXR2Y2ZGRmhHYnROeEFsL3R1eVhrNGVUZ0pCTWlUSjgrQ1EwODkwbHFmQXFpUzNCU1JWeEU1YXphYkQ0RjR0NERXK29yazBlODlFUm1TMU1hWTU2dzhBRVRURGkrWHl3ZC9td0VBeVNVUk9jL0tld1ZFcERwMWJPUnVWdDRyQUdEYkliY2VnUGNLeEk1YUp3RHZGZWc1YWpjQmVMY0F5YmQvUmprVWtUdVNGMW41Y1lxT2Uzc2t1VE5lRHdhRGpYYTcvUkdLOTA0Z1RkTkxFZm1hbUJhTHE2NUc4L0plZ1ZhcjFRRlFuNEJSVkhFMW1wZWY1UkdDWkEzQXk4K3lsaVRKU2tqZUsyQ00rUnlOUnZzaThnNGdpZU80SHBJSGdJSVA2SGE3UGFYVUxZQTlBSlZTcVpSYWE1OUM4WVZaN3NsYTIxZEtYWXZJRnNsanBkU2F0ZlkrQkIvTittOGJZL3FOUnVNUXdJbUlMSWZtOCtUSmsyZGgrUVowZ2Q4cEo1TVlNd0FBQUFCSlJVNUVya0pnZ2c9PScpOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gYnV0dG9uI2ltYWdlIHsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQ0FBQUFBZ0NBWUFBQUJ6ZW5yMEFBQUFCbUpMUjBRQS93RC9BUCtndmFlVEFBQUFDWEJJV1hNQUFBc1RBQUFMRXdFQW1wd1lBQUFBQjNSSlRVVUgzUU1RRnk4b1N3MnRmQUFBQXo5SlJFRlVXTVB0bGsxdlcwVVVocCtaZTYrZFhIOGtUcG80RGtrYXBTRkJJQ0N0aE1TaVZMQmdDUXUrQ2tKZHNhWWdmZ0M3SXJGQ0lQNEJDRkNMeEU5QW91eVFTaXZTdElJRUlSVFhiaFFuVGh6czN0eVpPU3h1Q0VHS2JkbEliTWdyalViM3pzdzU3M25uekptQkU1emcvdzdWYWZDZGR5K3J3c2hRT2dnQzFZOXhFOGRTcisxRUgzMzhpZlJNNE1vSFY3eFNxZmo2ZUxING1vSWNJSDBFMTdpL1ViMjYxMmg4ZGZudDkreHhrL3gycTBkSGh1Y1hGeGMvUDd0MER1ZWtMMm1WVnZ4NDg4YUxQOTI1L1FQdzgzSHpkRnNESG5OVFU5TllFNk93b3BTamx3WldySW1aZW1nYXhKMXA1NmV0QW9KbzMvZjQ5cnZyZlBiRmw4b1k4NC9vdW1rUytMNjY5T1libkZ0YUFuRnRBOVdkWlZUY3ExUjQwS3lUOGd3cHo2QnRDeFB0NGhFZC9rdDVNU2tkSC9rMnRKcDF5dmNxS05VNWYvMU9neUpKdE9PaFl5aHJEMGhwdHVyNzdPN1Z5ZVJ5NUhNRFBJaGkwaWtmVDJ1TWRmelIybWR3UUNWS2RaR3FNd0VFbEhBcVl4bkxtMFIzQmFWOGlGWWgxYzBkVm4rcnNqQTdTbkVrUjJWekYyTERjS0N3T2dBbGlZME8wTjBVRUVrSVRPWU1rM21UOUxtWTV1NFc4OFVVMmpZNU96dklSRGJtOGVtQU82dnJQRGFUWm1wWUlTTC9UZ0Z3QUp3S0haTjVkMmpNR01mRVFzaXR0VHB4RkRFM0N2dXhjT09YT3ErZUx6RTNxbERPRWgyeDBjY3ArQ3NIaExHTVl6SnY4RU1mYjhCSGFYQ3g0ZUdwWWRZM3RybDV0MHcrRTNCbTNHZCtjZ0F3N0RVdFpSSUZwUDhjQUJISFNHZ29sUVpJTFQ1Rk1MYUFpQ0d1M01LVVYzai8wZ3h2ZmJqTWMwOFVlT0g1RXJHeEtBV2J1NVoxY1YyUGErY3RPS0JmeURxeWkvTXc5elFRb2hEU3VTeHBLY05HamFXNWtEQndER1poMENRdUM0TkhiUFNmQTBJVVJYejZmWXZ4NVJWMHVvelNDcVVFRVl0cmJXTmJFY3VWTkhkcm10K3ZObkVIRGpjYmhvVUxVZGVTMVpHQU1ZWm5ucjNBek94cHhMbTI1ZXJKUXlkL0Z4MmxGYk96cHpsYVFYc2lvRVhiMkJxR2g0YklQUHBJdDV2N1dQV0NJTVYrWk5DaWJjOTFvTmFvcjZ5dHJtNXJQRFErU2Q5TFM5Yjh1clpXMjlscDNPNzVQVEJTS0tSZXVmanlTOFdKNG5tY2VDTFNrd1JLSzFFb1c2M2V2Mzd0MnRmZmJHL1Y5M3QrRVIyTSt3ZEs5YjRIU1JVeWZUeG1UbkNDRS94MytCTnR5V1RLWWRxS0xRQUFBQUJKUlU1RXJrSmdnZz09Jyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jdGl0bGUgewogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDQUFBQUFnQ0FZQUFBQnplbnIwQUFBQVNVbEVRVlJZdysyVXNRMEFNQWpEb0MveEFtZnpBamZSQTlvVndXQ1BMRUd4RkJHQVlmUjNOTFBxQ012TUorOU1OOEFEQUR1SEtDSmFoc2pkbGNwUmdBSXFSd0VLcUJ6V2NRR2RlaGdOM2VjbW5BQUFBQUJKUlU1RXJrSmdnZz09Jyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jZmlsZSB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFCU0VsRVFWUll3KzJVdlVvRFVSU0V2L3pVQ3FhN1pWQlVzSnNxRmhaUnk4VE81MGdaeUVQNEdoSUVnM1pxYTNtSWhZS0Z0YmV4aUhhQkJHMXVzVWl5eWY3WnVBTzMySFBQemd6bnpDNlVLUEhmVWN2eXNxU0JjKzdRZS8rWWxxT1NRZndPT0EyUE4yWjI5bWNUa0RRRU9wSFNybk51MjN0L1hmZ0VKRDBBeDB1dWI4MnNtNFN2bWxCOEZDTU8wSkYwV2NnS2d2ZzZlejV3enUxNzc2OXlXNEdrZStBazRiYldDbVp0RGZFOTRBaDRCbDZCblpqVnpZQVI4QUpVblhOUDN2dVB2RVA0Q1d3c3VmNHlzODBpUTFqUG95ZTFnU0pRR2tocTRIdEZjQ3VoSjdzQlNUMUpyV2pOek9iQUpJWnZFbnFpUEMxSnZUUVR1QUFXL2RmYndIdjQ1dWZoekVLdHZhQy9HN2hTcldEK3UyQm1iMEFUYUFCYjRUU0FacmhieVJGRlBVMXd6R3dLVFBNSVlaeUJNZENYbEZXakg3Z1NHemdIaHNBZ280Rng0Q3BSb3NSQy9BQjY1RnhlSjk2dE1RQUFBQUJKUlU1RXJrSmdnZz09Jyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jaHJlZiB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFBQVhOU1IwSUFyczRjNlFBQUFOUkpSRUZVV01QdGxxMEtBa0VRZ0w4OURyTmdWUEE1VEtJSWdtR1NhRFJwOGlGOEFzRW5NTnFuV0x4Z3NGb3NCdDlDaXlDczVjSWhCbTg1OWs3WUw4M3NIeDh6eTdJUUNBUkt4dnk2VU1TT2dXV2FxcXBaRnlFUTUxamJBcnBwZkMycUFsSFpMU2hkSUhiZEtHSWpZQUwwZ1Jwd0JyYXE1dTZqQW5YZ0NPeUFPVEFETnNCRnhEWjlDRXlCRHBBQWUrQ1ZqcmVCbFE4QkN3eFZ6VURWaklCRlpxN25RK0NrYXBKTWZzakVEUjhDdDQvODRYcXhYUVdlWDFxUyszVU5EMUVRcUlUQWYzeElSS3gxT1Z6VkdBS0JRTlY1QTZKTkpoVk5rZWhQQUFBQUFFbEZUa1N1UW1DQycpOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gYnV0dG9uI3dpa2lyZWYgewogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDQUFBQUFnQ0FZQUFBQnplbnIwQUFBQzJrbEVRVlJZdysyVlQwK2NWUlRHZjg5OVp4aW1OY2cwYmF4Um8ybUkxZGhCNm12ZTRuUVNNaTJCeUtJeFJ1cEhjT2tYTUNHdS9Rd3VURnl4Y0VFSUxVVkRTTm9DSXFpTUdVTkRVZ3lXMUVqb2tCYk4vSG52NmFLMkFyYklueTY2bUdkNW4zUFAvU1hubkh1Z29ZWWFhdWdabG5MZFY5Nk5vcEdXeDl1bXpwN0xVZjc4MklrbkpjZ1ZMcDNNRlM2ZDNPa1I5eVFqZis3YmJPRDRxcWsxOGZGamsvZU1mcGlRKzRiQWZ4RjJqUi9kN29maDBDRWxnOCtVY0orMnQ0OGUzak9BZDM0VlVaUDBYaGora056cURnYkNuUVB1Z3FLbXBtcjc5dnVwbHNNdkNvV1Nicy9QOS95MVo0RHlTbmtWb3dnK20zaisxcEhOM3BuZVk2ODRLY0w0R3VuM2hLTUwwSmJFeVZvV0xHTm1NeURiTTBDcGRMRnFaak9HWGhhcFY3ZGM4dFZPekRMZU15cHMwa3lGanZ6SXBqSU1PTE9nQTFHV2R3djc2Z0dBZW14VEdKWklCR2NlSGZZUEJvSG9SQlR2eVg3MTNzWWxYa3FuZ3pmL3JYL1lMUGtzTUhzN1didTFid0Q5clNXdzM0UkZEL3NnZDZmMUJWRGtqV3Z6WTcwYmNWeWRNMk05a0JVZWxpSGRtajR1dWRjeFRTOWU3cXZzRzJCOWZiME0vR0xpVkNxemR1eWY0dzZrb3hiSDF3QlM4WE4vQU5mQjVjUHVzUllBYy80dHNJekZGUDl2MW5jRUtKVXVWa0hmWXh3WE9nRURUckt6d2hiSzlidEZnSW1KUXQyamNhQ3QyVGdOSUtjc3hvckpiaHdJQUNDTzlaTkVMQmVmRHJ2Q0kwN0tlVy9UcFluK2pVZTlZbjRPY1UrQm5RL0RvVVBBT3dZL1Z1N2MvUFBBQUVHbHRvUnBHUWhUeWVZSWVBM1o5T2JSV3JzWnIyQk1ZNXhOdFNiZmxuRUtORHM3KzBudHdBQlhyNzYvYXZKVGtudkRPZm9NbHIxdC9MdzVabkd4cjRKbkFxYzJCVUUvVXRySDllSnUvbnUzaTVWZ0Ztc1NhQU0rTUppYUhKdGYvVStwbko4UlZwSDBrWmt0MVVqY2VFb0FVS3ZWcjVzeERNeDVzMkg0M0crUG1ielN1K0ROZjRtM1pUTWJuUG11ZSsycHJzWW9HbW5KNW9jek8wY051QWVMeWJUcmxidWJvQXNYelBZRFBUUWswVkJERFQzcnVnLzRYU01xSi84SXNRQUFBQUJKUlU1RXJrSmdnZz09Jyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b25bd2l0aC10ZXh0PSJ0cnVlIl0gewogIGNvbG9yOiBkb2RnZXJibHVlOwogIGJvcmRlcjogc29saWQgZG9kZ2VyYmx1ZSAxcHg7CiAgd2lkdGg6IGF1dG87CiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAzcHg7CiAgLW1vei1ib3JkZXItcmFkaXVzOiAzcHg7CiAgYm9yZGVyLXJhZGl1czogM3B4Owp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gYnV0dG9uW3dpdGgtdGV4dD0idHJ1ZSJdOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjQ5NWVkMmU7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSAuZ3JvdXAjdGl0bGUgewogIG92ZXJmbG93OiBoaWRkZW47Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSAuZ3JvdXAjdGl0bGUgPiBkaXYgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBvdmVyZmxvdzogaGlkZGVuOwogIGhlaWdodDogMi40cmVtOwogIG1heC13aWR0aDogMDsKICB0cmFuc2l0aW9uOiBtYXgtd2lkdGggMC41cyBlYXNlOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gLmdyb3VwI3RpdGxlOmhvdmVyID4gZGl2IHsKICBtYXgtd2lkdGg6IDEycmVtOwp9CgoKW2RhdGEtY29tcG9uZW50PSJXaWtpRWRpdEJhciJdIGJ1dHRvbiN0aXRsZSB7CiAgdHJhbnNpdGlvbjogbWFyZ2luLWxlZnQgMC41cyBlYXNlOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gLmdyb3VwI3RpdGxlOmhvdmVyIGJ1dHRvbiN0aXRsZSB7CiAgbWFyZ2luLWxlZnQ6IC0yLjRyZW07Cn0KCgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gYnV0dG9uI3RpdGxlLTEgewogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDQUFBQUFnQ0FZQUFBQnplbnIwQUFBQWxVbEVRVlJZdzJOZ0dBV2pZSUFCSXpaQlkyUGovN1N3N096WnN4ajJNUTEwQ0l3NllCU01nc0ZaRU8zWnM0ZGdRWFR2M2oyRyt2cDZodWZQbnpQczJiT0hLTXRjWEZ3WXFlRm9Fd1lHaG5rTURBeS9HUmdZL2tNeFhjRWpxS1ZucU9FQWtxTmc0c1NKREFJQ0FneVJrWkVNWGw1ZU1QVjBqUUprUUhFSU1BM1pYQUFOMHRFb0dJMkMwU2dZOENnWUJhT0FZZ0FBUEIwK2c2RWZWVThBQUFBQVNVVk9SSzVDWUlJPScpOwp9CgpbZGF0YS1jb21wb25lbnQ9Ildpa2lFZGl0QmFyIl0gYnV0dG9uI3RpdGxlLTIgewogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDQUFBQUFnQ0FZQUFBQnplbnIwQUFBQkQwbEVRVlJZdysyVXNVcUdVQmlHSDFPbmJpRXduQnJhSEZzeXhGMzBFaVR3S3BvQzhWTGFIQUtIc3hTdWRnRU5MVUpqdUFpQ2NHeXhodkl2NHYvMU5Kd0h6bktHODM2ODczZGUwR2dVWXl4ZGVwNDNyU0hXTk0wM3ZTUFZEdWdCTkpyL1dVUkNpTVVpR3NlUnNpd1JRdEMyTFlaaDRMb3VVUlRoKy82dllrRVFHUHNPL0FoTU8wNjZoV08zd0FOd0NSd0RwOERkUE1EejZoRU13NEJ0MjVpbStYblhkUjFKa21CWkZsVlZyUjdCRW1lekEwOHFsdGdFN2dFSitLdEg4RFdPUE0rcDY1b3N5NGpqZUpOZjhNSEpiUGtJWEc5dCt6bndDcndCVjVzV1VkLzNwR21LbEpLaUtIQWM1MDlpaDRqZ1p0NzRDMVhWL2ZKREUwNnJSeENHSVZMS25ZOEpJWlFVa1VhekYrL0pJR0pxU0oxN1J3QUFBQUJKUlU1RXJrSmdnZz09Jyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jdGl0bGUtMyB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFCSlVsRVFWUll3KzJXdlVyRVFCU0Z2MVh5MDRpa0VpSXFaR3Vya0RJdVF2cUFTWm1JdGZnMHR0WmJXRHV3VFh3Q1NZcEFDckZLbDhJVW14ZFlteUN5UmdYWHlWck1CNEVoelQyY00vY3dvRkJzbWNuUVQ5ZDFWektHNVhuK2FkN090aDFRQWhTSy8xbEVXWllORmxGVlZRZ2hLTXVTdG0weERJUHBkRW9ZaHN4bXN4K0hCVUV3MlZSd0NheSsrSzdIY0N3RmJvQkRRQU9PZ050ZVFDMDlnaUdXeXlWUkZHR2FKa0lJNlJHc2l6OEc3bm9IN3NlK3dCL3pmd0QyUjQwZ0NJTDNzK000cEdtSzcvdWpSckFMSEFBWHdIUHZ4T1cyK3VUa3Q1dXc4UllBTkUxRGtpUm9tc1ppc1pBYXdSVndEbGo5VzJJUE9BT2VlZ2NlWlZ2OThrMFR2Z0tuVWlPWXorY1VSVUZkMTNSZGg2N3IyTGFONTNuRWNZeGxXYU51Z1VMeEo3d0JkV2xmOGNuV0E2d0FBQUFBU1VWT1JLNUNZSUk9Jyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jdGl0bGUtNCB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFBeTBsRVFWUll3KzJXTVE3Q0lCU0d2MnFNRjNGMTZ0STRPZlFDM0tQSDZNZ2xtcTZhcmgxNmhTNHVjaElIWTRJTFRacG9VQ09Ddy9zU0JsNkFIOTRmSG9BZ0pDWjdGc3p6M1A1Q2JCekhCNzFGNmd6SUJnVGhQd3ZSTUF4dkZhSys3OUZhVDNOZWppL0xNZ3U1K1Mxd0FheHJVVmtCcDVtNGpXcEIwelMwYll0U2lxN3JvbHV3QWE3QUdWaW5zT0RnQlBldUg4OENZd3hWVlZFVUJYVmRUMm1OYXNIUm5YWTNpNFhQZ0ljYnNBeTU1a2NXVE9uMjRiTWlkQ0VLWWtIeUQ4bFhiMEdLV3lBSXdia0RUWjlMeXJVL1RiZ0FBQUFBU1VWT1JLNUNZSUk9Jyk7Cn0KCltkYXRhLWNvbXBvbmVudD0iV2lraUVkaXRCYXIiXSBidXR0b24jdGl0bGUtNSB7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUNBQUFBQWdDQVlBQUFCemVucjBBQUFCR1VsRVFWUll3KzJVc1dxRVFCUkZ6eWFORUFnUlV0djVCVFpwSkJBc0xBS0NrRDZWaU9SekF1WUxiUHlGNmJRVjBteVRxT0FIU01CS1dHSFRUQkdJYXdqWldWUE1nY2ZBRE14NzNEdHpRYU5abWMzY3B1TTRleFhOcXFyNjF1OXNiUVgwQUJyTi93d2lJY1JzRUUzVGhPLzdpeGNLSVE2ZWVaNjMrZXZBVjhEK2gxS2FBNWR5cmFWNmM2WE9nclp0aWFJSTI3WkowL1RYOGgzRGd0c3ZVbjhBcjBBSzNKenEwVDRzZVArczNBS0EzVzdIT0k3MGZVL1ROQlJGUVZtV0FDUkpRaGlHU2kwNHhKTlVZYnRXbmx6SUFVYmxGc3hSMXpWeEhHT2FKbm1lSzdYZ0ViZ0RUT0JjQnRNOThDWVZlRkV0OWZ2Q0w5Z0MxMG90eUxLTXFxcm91bzVoR0RBTUE4dXljRjJYSUFnd0RFTjVFR2swUitjVHdhZHNPZEhRZ0U4QUFBQUFTVVZPUks1Q1lJST0nKTsKfQo=`,
	"write/wikieditbar/index.js": `KGZ1bmN0aW9uKGNvbnRleHQpIHsKCiAgICB2YXIgQnV0dG9uID0gZnVuY3Rpb24obmFtZSkgewoKICAgICAgICB0aGlzLm5hbWUgPSBuYW1lOwoKICAgICAgICB0aGlzLmRvbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogICAgICAgIHRoaXMuZG9tLnNldEF0dHJpYnV0ZSgnaWQnLCBuYW1lKTsKICAgIH07CgogICAgQnV0dG9uLnByb3RvdHlwZS5zZXRUZXh0ID0gZnVuY3Rpb24odGV4dCkgewogICAgICAgIHRoaXMuZG9tLnNldEF0dHJpYnV0ZSgnd2l0aC10ZXh0JywgdHJ1ZSk7CiAgICAgICAgdGhpcy5kb20udGV4dENvbnRlbnQgPSB0ZXh0OwogICAgfTsKCiAgICB2YXIgR3JvdXAgPSBmdW5jdGlvbihuYW1lKSB7CgogICAgICAgIHRoaXMubmFtZSA9IG5hbWU7CgogICAgICAgIHRoaXMuZG9tID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgdGhpcy5kb20uY2xhc3NMaXN0LmFkZCgnZ3JvdXAnKTsKICAgICAgICB0aGlzLmRvbS5zZXRBdHRyaWJ1dGUoJ2lkJywgbmFtZSk7CgogICAgICAgIHRoaXMuYnV0dG9ucyA9IHt9OwoKICAgICAgICB0aGlzLnNsaWRlID0gbnVsbDsKICAgIH07CgogICAgR3JvdXAucHJvdG90eXBlLmFkZEJ1dHRvbiA9IGZ1bmN0aW9uKGJ1dHRvbl9uYW1lLCBvbl9jbGljaykgewogICAgICAgIGlmICghKGJ1dHRvbl9uYW1lIGluIHRoaXMuYnV0dG9ucykpIHsKICAgICAgICAgICAgdmFyIGJ1dHRvbiA9IG5ldyBCdXR0b24oYnV0dG9uX25hbWUpOwogICAgICAgICAgICB0aGlzLmJ1dHRvbnNbYnV0dG9uX25hbWVdID0gYnV0dG9uOwogICAgICAgICAgICB0aGlzLmRvbS5hcHBlbmRDaGlsZChidXR0b24uZG9tKTsKCiAgICAgICAgICAgIGlmIChvbl9jbGljaykgewogICAgICAgICAgICAgICAgYnV0dG9uLmRvbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uX2NsaWNrLCB0cnVlKTsKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuYnV0dG9uc1tidXR0b25fbmFtZV07CiAgICB9OwoKICAgIEdyb3VwLnByb3RvdHlwZS5hZGRTbGlkZUJ1dHRvbiA9IGZ1bmN0aW9uKGJ1dHRvbl9uYW1lLCBvbl9jbGljaykgewogICAgICAgIHZhciBidXR0b24gPSB0aGlzLmFkZEJ1dHRvbihidXR0b25fbmFtZSwgb25fY2xpY2spOwoKICAgICAgICBpZiAobnVsbCA9PT0gdGhpcy5zbGlkZSkgewogICAgICAgICAgICB0aGlzLnNsaWRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgICAgIHRoaXMuZG9tLmFwcGVuZENoaWxkKHRoaXMuc2xpZGUpOwogICAgICAgIH0KICAgICAgICB0aGlzLnNsaWRlLmFwcGVuZENoaWxkKGJ1dHRvbi5kb20pOwogICAgfTsKCiAgICBHcm91cC5wcm90b3R5cGUuYWRkQnV0dG9ucyA9IGZ1bmN0aW9uKGJ1dHRvbl9uYW1lLCBvbl9jbGljaykgewogICAgICAgIHZhciBidXR0b24gPSB0aGlzLmFkZEJ1dHRvbihidXR0b25fbmFtZSwgb25fY2xpY2spOwoKICAgICAgICByZXR1cm4gdGhpczsKICAgIH07CgogICAgR3JvdXAucHJvdG90eXBlLmFkZFNsaWRlQnV0dG9ucyA9IGZ1bmN0aW9uKGJ1dHRvbl9uYW1lLCBvbl9jbGljaykgewogICAgICAgIHZhciBidXR0b24gPSB0aGlzLmFkZFNsaWRlQnV0dG9uKGJ1dHRvbl9uYW1lLCBvbl9jbGljayk7CgogICAgICAgIHJldHVybiB0aGlzOwogICAgfTsKCgogICAgdmFyIFdpa2lFZGl0QmFyID0gZnVuY3Rpb24oKSB7CgogICAgICAgIHZhciBkb20gPSB0aGlzLmRvbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICAgIHRoaXMuZG9tLmRhdGFzZXQuY29tcG9uZW50ID0gJ1dpa2lFZGl0QmFyJzsKCiAgICAgICAgdGhpcy5iYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgICB0aGlzLmJhci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2JhcicpOwogICAgICAgIHRoaXMuZG9tLmFwcGVuZENoaWxkKHRoaXMuYmFyKTsKCiAgICAgICAgdGhpcy5jb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgdGhpcy5jb250ZW50LmNsYXNzTGlzdC5hZGQoJ21heC13aWR0aCcpOwogICAgICAgIHRoaXMuYmFyLmFwcGVuZENoaWxkKHRoaXMuY29udGVudCk7CgogICAgICAgIHRoaXMuc3BhY2VyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgdGhpcy5zcGFjZXIuc2V0QXR0cmlidXRlKCdpZCcsICdzcGFjZXInKTsKICAgICAgICB0aGlzLmRvbS5hcHBlbmRDaGlsZCh0aGlzLnNwYWNlcik7CgogICAgICAgIHRoaXMuZ3JvdXBzID0ge307CgogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBmdW5jdGlvbihlKSB7CiAgICAgICAgICAgIC8vdmFyIHNjcm9sbFRvcCA9IGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wOyAgLy8gV29ya3MgaW4gY2hyb21lCiAgICAgICAgICAgIHZhciBzY3JvbGxUb3AgPSB3aW5kb3cuc2Nyb2xsWTsgLy8gV29ya3MgaW4gY2hyb21lIGFuZCBmaXJlZm94CiAgICAgICAgICAgIGlmIChzY3JvbGxUb3AgPj0gZG9tLm9mZnNldFRvcCkgewogICAgICAgICAgICAgICAgZG9tLmNsYXNzTGlzdC5hZGQoJ2ZpeGVkJyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBkb20uY2xhc3NMaXN0LnJlbW92ZSgnZml4ZWQnKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHNjcm9sbFRvcCA+PSBkb20ub2Zmc2V0VG9wIC0gZG9tLmNsaWVudEhlaWdodCkgewogICAgICAgICAgICAgICAgZG9tLmNsYXNzTGlzdC5hZGQoJ3NoYWRvd2VkJyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBkb20uY2xhc3NMaXN0LnJlbW92ZSgnc2hhZG93ZWQnKTsKICAgICAgICAgICAgfQogICAgICAgIH0sIHRydWUpOwoKICAgIH07CgogICAgV2lraUVkaXRCYXIucHJvdG90eXBlLmF0dGFjaCA9IGZ1bmN0aW9uKHNlbGVjdG9yLCBjYWxsYmFjaykgewogICAgICAgIHRoaXMuZG9tLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2FsbGJhY2ssIHRydWUpOwogICAgfTsKCiAgICBXaWtpRWRpdEJhci5wcm90b3R5cGUuYWRkR3JvdXAgPSBmdW5jdGlvbihncm91cF9uYW1lKSB7CiAgICAgICAgaWYgKCEoZ3JvdXBfbmFtZSBpbiB0aGlzLmdyb3VwcykpIHsKICAgICAgICAgICAgdmFyIGdyb3VwID0gbmV3IEdyb3VwKGdyb3VwX25hbWUpOwogICAgICAgICAgICB0aGlzLmdyb3Vwc1tncm91cF9uYW1lXSA9IGdyb3VwOwogICAgICAgICAgICB0aGlzLmNvbnRlbnQuYXBwZW5kQ2hpbGQoZ3JvdXAuZG9tKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB0aGlzLmdyb3Vwc1tncm91cF9uYW1lXTsKICAgIH07CgogICAgV2lraUVkaXRCYXIucHJvdG90eXBlLmFkZEJ1dHRvbiA9IGZ1bmN0aW9uKGdyb3VwX25hbWUsIGJ1dHRvbl9uYW1lKSB7CiAgICAgICAgaWYgKCEoZ3JvdXBfbmFtZSBpbiB0aGlzLmdyb3VwcykpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdmFyIGdyb3VwID0gdGhpcy5ncm91cHNbZ3JvdXBfbmFtZV07CiAgICAgICAgaWYgKGJ1dHRvbl9uYW1lIGluIGdyb3VwLmJ1dHRvbnMpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdmFyIGRvbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogICAgICAgIGRvbS5zZXRBdHRyaWJ1dGUoJ2lkJywgYnV0dG9uX25hbWUpOwogICAgICAgIGdyb3VwLmRvbS5hcHBlbmRDaGlsZChkb20pOwoKICAgICAgICBncm91cC5idXR0b25zW2J1dHRvbl9uYW1lXSA9IHsKICAgICAgICAgICAgZG9tOiBkb20sCiAgICAgICAgfTsKICAgIH07CgoKICAgIHdpbmRvdy5XaWtpRWRpdEJhciA9IFdpa2lFZGl0QmFyOwoKCn0pKHdpbmRvdyk7Cg==`,
	"write/wikiterm/index.css": ``,
	"write/wikiterm/index.js": ``,
}
